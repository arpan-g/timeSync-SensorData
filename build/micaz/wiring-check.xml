<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f151784a830"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15178bc1d8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15179496e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517a1a570"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517a5e980"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517a9a520"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517b13cc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517b6e7f0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518a08c28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518a8c628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518aaa080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518ac8198"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518c32080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518d2cad8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518e02808"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f151941f3c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517da6620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1519066438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15194cc020"/></to>
    </wire>
    <wire loc="45:TestFtspAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15197db628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15197db628"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15196b6910"/></to>
    </wire>
    <wire loc="46:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f15197db020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1519991940"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1519991940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f151998fe20"/></to>
    </wire>
    <wire loc="50:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1518812a28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1519991940"/></to>
    </wire>
    <wire loc="53:TestFtspAppC.nc">
      <from><interface-ref name="Check" scoped="" ref="0x7f1518825900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518239ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1518239ae8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:TestFtspAppC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1518820aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518239ae8"/></to>
    </wire>
    <wire loc="55:TestFtspAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f151880c890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151959a818"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f151959a818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151956d3a0"/></to>
    </wire>
    <wire loc="56:TestFtspAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f151881aa58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1519598928"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:TestFtspAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1518819080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15195997a8"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:TestFtspAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1518819c78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151958f0c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f151958f0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15189958c8"/></to>
    </wire>
    <wire loc="59:TestFtspAppC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f15188188f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1519573a98"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1519573a98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1519558128"/></to>
    </wire>
    <wire loc="60:TestFtspAppC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518815020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518c97020"/></to>
    </wire>
    <wire loc="61:TestFtspAppC.nc">
      <from><interface-ref name="PhotoRead" scoped="" ref="0x7f1518811228"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x7f1518244898"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Light" scoped="" ref="0x7f1518244898"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bb68d8"/></to>
    </wire>
    <wire loc="62:TestFtspAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7f151880f978"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7f1518245228"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x7f1518245228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bb4d08"/></to>
    </wire>
    <wire loc="63:TestFtspAppC.nc">
      <from><interface-ref name="MicRead" scoped="" ref="0x7f151880d210"/></from>
      <to><interface-ref name="Microphone" scoped="" ref="0x7f1518242020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Microphone" scoped="" ref="0x7f1518242020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bb01c8"/></to>
    </wire>
    <wire loc="67:TestFtspAppC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7f151882a6a8"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7f15197d1298"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7f15197d1298"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7f15196b5848"/></to>
    </wire>
    <wire loc="68:TestFtspAppC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f151881baa0"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f15197cbe00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f15197cbe00"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f15196b2748"/></to>
    </wire>
    <wire loc="69:TestFtspAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15188175a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518efac38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f15197e9490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1519a94be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1519a94be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f15199d6c00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f15197e9e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1519994cc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1519994cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15199854f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15197e8560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f151998d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f151874ed40"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f151998d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15192b0190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1519988b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f15198087e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f1519984398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15198081b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1519985b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518ed7020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1519985b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f1519987a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1519987a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f151997b428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f151997f108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f151998d9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f15199745f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f15199691a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f15199691a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f15198e6430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f151997a7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f151997f108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f1519937c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1519855970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f15199517e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f15198bd020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f15198bd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180b9100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f15199467e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f15198acd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f15198acd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151804c100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f151993d4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f151989d5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f151989d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fe3100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f15199674d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f15198e4740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f15198e4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181df020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f151993f1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f151989f2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f151989f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fe9100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f15199657e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198dc930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198dc930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151818a180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f151995a968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f15198cb740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f15198cb740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151811d100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f151994ec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f15198b9430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f15198b9430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180b0100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f1519943c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f15198a8120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f15198a8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518043100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f151996dc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f15198e9020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f15198e9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181f8020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f1519962c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f15198d9d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f15198d9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518181100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f1519957e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f15198c7bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f15198c7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518114100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f151994a1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f15198b68c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f15198b68c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180a7100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f1519939968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f151989aa50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f151989aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fda100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f15199337e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1519846020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f15199484d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f15198aea50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f15198aea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518052100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f15198e6430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181e5020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f151995e348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f15198d5120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f15198d5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518178100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f15199354d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1519850ab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f151995c658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198cd500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198cd500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518123180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f1519950968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f15198bb120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f15198bb120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180b6100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f1519945968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f15198abe18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f15198abe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518049100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f151993c658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f151989c740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f151989c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fe0100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f1519966658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f15198e38c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f15198e38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181dc020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f1519964968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f15198dba50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f15198dba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518187100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f1519959af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f15198ca8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f15198ca8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151811a100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f151994de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f15198b85b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f15198b85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180ad100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f1519942e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f15198a72a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f15198a72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518040100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f151996ce00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f15198e8120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f15198e8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181f5020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f1519961e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f15198d8e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f15198d8e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151817e100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f1519954020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f15198c6d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f15198c6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518111100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f1519938af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1519899bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1519899bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fd7100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f1519952348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198bfe40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198bfe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180bc180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f1519947658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f15198adbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f15198adbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151804f100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f151993e348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f151989e430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f151989e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fe6100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f1519932968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1519841180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f1519968348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f15198e55b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f15198e55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181e2020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f151995d4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f15198d42a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f15198d42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518175100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f1519940020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198a01e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198a01e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fec180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f151995b7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f15198cc5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f15198cc5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518120100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f151994faf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f15198ba2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f15198ba2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180b3100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f1519944af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f15198a9020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f15198a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518046100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f151993b7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f151989b8c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f151989b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1517fdd100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f151997eab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198ebdc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198ebdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181fb020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f1519963af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f15198dabd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f15198dabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518184100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f1519958c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f15198c9a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f15198c9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518117100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f151994b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f15198b7740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f15198b7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15180aa100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f1519934658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151984cc38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f1519949348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f15198af930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f15198af930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1518055180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f15199531a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f15198c5e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f15198c5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151810e100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f151996a020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f15198e72a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f15198e72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15181f2020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f151995f100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f15198d6020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f15198d6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f151817b100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15199d5b08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f15199d2020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1519a8add0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15199b37b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15193b2790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncMode" scoped="" ref="0x7f15197c8ca8"/></from>
      <to><interface-ref name="TimeSyncMode" scoped="" ref="0x7f15196b1700"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncNotify" scoped="" ref="0x7f15197c59d8"/></from>
      <to><interface-ref name="TimeSyncNotify" scoped="" ref="0x7f15196af020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15197d6438"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15196b5020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f15196af7a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f15197db020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f15196afd78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151969a6f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f151969a6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1519650b80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15196aea20"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f151965a610"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15196aa5e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15196977a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncPacket" scoped="" ref="0x7f15196a3da8"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f15196565c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f15196565c0"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f151963d020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15196a05c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15188638c8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15188638c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1518c2b020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15196aac88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518848420"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1518848420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f15196a5d00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1518aceb98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1518aceb98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1518ac7a08"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15196a4470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f151883f390"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="sendMsg" scoped="" ref="0x7f151969f5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="processMsg" scoped="" ref="0x7f151969fd88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1519650b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151959a818"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f151963d020"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f151962be30"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f151968b740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151964edf0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f151964edf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1519630b50"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f151965a610"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f1519641020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f1519641020"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f1519633020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1519696348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f151964e818"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f151964e818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f15196275e8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f151966e418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f151964baf8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f151964baf8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519584ac0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1519674260"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518c9b060"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15196977a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f151964fc38"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f151964fc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1519629a58"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1519676de0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151964b1a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151964b1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151958ec78"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519661498"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519648020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519648020"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519639918"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f151967be08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151964da30"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f151964da30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151962f8e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f151965d4f8"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f1519644020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f1519644020"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f151962d368"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1519665130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519584ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519559668"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151958ec78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151955a658"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f151961a320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f151886f080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f151886f080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1517c17518"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f1519626ce0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151886e888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f151886e888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1517c16e20"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f1519626020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151886fc38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f151886fc38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1517c16268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1519619510"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1519615478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1519609850"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518ca2ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518ca2ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518c94ac8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15188666b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f151925fd70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f151925fd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1519239878"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1519610668"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15188684a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f151960f870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15188638c8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1519608898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f151961b358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518890348"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f151961b9d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f151888f020"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f151956d3a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15189fddc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f151957cb48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518993630"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f151956f658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1518994ae8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15195997a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1518998020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1519596498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1518997d10"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1519587e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f151955b7e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f151955b7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519559668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15189fd318"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1519598928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15189971c8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151955a658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1518cab3b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1519558128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f15189e92d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1519596a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1518996340"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1519583ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1519559020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1519559020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1518caa6b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f151898bb30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151956b4f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1518992528"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f151955d4c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f151955d4c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1518a62db8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1518990358"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f151955b1d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f151955b1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1518a61ae8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f151898c020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1518e472b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518990970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518c9e2e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f151898f7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518c9db60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f151898e140"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15194d5af8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f15194d5af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15194ca328"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f151898cc78"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1519553678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1519553678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f151954e948"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f151898a740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15189fddc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f15189fad28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1518caa6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1518c9c630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f15189e92d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f15189e4128"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1518a62db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1518a57490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f15189fd318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15189f6170"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1519566020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518a62748"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1518a62748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1518a58dc8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1518cab3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1518c9d210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151956b4f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518a91e20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518a91e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518a59428"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f151955c330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1518a63a40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1518a63a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f1518a58118"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f15195666a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1518a601a8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1518a601a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1518a56808"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1518a61ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1518a56188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f15189fad28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1519557770"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1519557770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151954f140"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1518a5f670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1518ab2d08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1518ab2d08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1518aab438"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1518aafa40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15189ec578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15189ec578"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15189e74c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15189e8020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15189fe080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15189fe080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15189fb838"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15189fb838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15195542d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15195542d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f151954fbe0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1518a5f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15189fec80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15189fec80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15189fa668"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15189fa668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518a93750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1518a93750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518a8f958"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1518a90560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1519553020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1519553020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518d2ede8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1518d2ede8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1518d282f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151954d798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15194e5e00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15194e5e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15194cc650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1519545a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f15194e08b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f15194e08b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f15194c8080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f151954bce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1518e29c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f151954bce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1518d31b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1518d31b40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1518d29148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1518e29c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1518e02e48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f151953b4b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1518e26480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1518e26480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1518dff6d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1519544208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518e25140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518e25140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518dfe4b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f151953ade0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1519538020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1519542020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1518aceb98"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f151952d540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1518ad0338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1518ad0338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906a790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15195427b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f1519529b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f151952acf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f151952ce68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f15194cfd28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f15194c74d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f15194c4060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f151941fd38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f151941fd38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15194183b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f15194ba020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f15191d1638"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f15191d1638"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f15199657e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f15194b91b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f15191ceae0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f15191ceae0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f15199674d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f15194b8378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f15191ccdf0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f15191ccdf0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f1519968348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f15194b2b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f15191c2020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f15191c2020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1519126420"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f151949f3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518eb6280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518eb6280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f15194a0518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f1518eb4a50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1518eb4a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f15194a0bf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1518eb2cd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1518eb2cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f15194a2ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1518eb5de8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1518eb5de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15194a23c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518eb1368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518eb1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f15194a8120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f1518ea9838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1518ea9838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f15194a8990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1518ea47c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1518ea47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f15194a7230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f1518ea3020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1518ea3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15194a7ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518eaddd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518eaddd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15194a53d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518eac5c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518eac5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f15194b5a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f1518e9f7c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1518e9f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f15194b5128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e9f020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e9f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f15194a5c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518eaac90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518eaac90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f15194a4530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f1518eacd60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1518eacd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f15194a4da0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1518eabcc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518eabcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f151949ee50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518e8ea48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518e8ea48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f151949e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518e6b1a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518e6b1a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15194ad1b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1518e472b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f15194c37f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1518e49d10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f15194933f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1519494598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f151941f3c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15191d5438"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15191d5438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15191d93a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15194183b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1517e9a1a8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1517e9a1a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1517e8e3b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1517e88860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1517e94670"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1517e94670"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1517e7f9d8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1517e8b648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f151925fd70"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f1517e79a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1519401020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1519401020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1519357490"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f1517e73a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15193df020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193f30c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f1519351568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f15193e3b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1519350ca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15193df020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f151934b540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15193df020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f15193478e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15193df020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f1519344b88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f151933f020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193c8950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193c8950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193b7558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f15193be470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f15193b0020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15193cd980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15193b5670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15193d6d90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15193bc400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15192b08b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1519401020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f151921eb10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f151925dad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f151925dad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1519255a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1519243b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1519401020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f15191d07d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f151995d4d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f15191cf960"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f1519943c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f15191d2428"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f151994b020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f15191cdc58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f151994ec78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f15191bd3c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15191bb180"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f15191c2be8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f15191a59a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f15191bbd38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15193e3b68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1519192480"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f1519188518"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f1519188518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1519137970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f1519125020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f15191d2428"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f151918d518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f151914c7a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f151918a518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f151913fcd8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f1519187518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f15191326a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f151918c518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f15191473e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f1519189518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f151913b9d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f1519190550"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1519162a70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f151918b518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1519143020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f151914f908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f1519180208"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f151914b5f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f1519180940"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f15191462e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f15191820a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1519143de0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f15191827e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f151913eb10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f1519181020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f151913a908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f1519181758"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1519136780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f151917f020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f15191315f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f151917f758"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f15191238e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1518eb4438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518ea67c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1518ea4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e9a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518e9c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518eb26b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e9d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1518ea1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518eb6e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190dfde8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518eb0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518eb0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1518eb0d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e9c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518eab528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e9a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518e9b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1518ea17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e9d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1518ea37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e99020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518eb57d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1518ead638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518eaa4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518ea6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518eaf3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1518ead020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518eb1980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518ea07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1518e9b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518ea0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518eb20a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1518ea27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1518ea2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518eaf9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e980a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190dbe50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190d8040"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190d8d40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190dcc10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190d7a98"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f15190d2838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906f978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f151906f978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906a790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f15190d61e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518f03020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518f03020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518f15870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f15190d5d08"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1518f03c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1518f03c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f151904aa20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f15190d2020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1518f022a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1518f022a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1519040cc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15190d1730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f15190c65d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f151906a790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1519065020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1519040cc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f151903b020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f151904aa20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f151903dd80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518f04960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f151904a400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f151904a400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f151903d7a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f1518f12700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190469f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f1518f104a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f15199657e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f15190401f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f151903c428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15190469f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151903bc88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f151901d208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518f1d200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518f1d200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517da4a28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15190195d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518f1c760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518f1c760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517da1020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f1519038020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f1518fcf020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f1518fcf020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f1518fccdc8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f1519019d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f15199b4240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f1518ffab58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f1518fbf350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f15199b4240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f1518fc2c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f15199657e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1518fc6de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f1519964968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f1518fc1020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f1519963af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f1518fc0190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f1519962c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518f1c020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517da2820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517da18c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1518f1b020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517da00a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1517da6bf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517da0b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518ed7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518efa670"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1518ef83b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1518efbb08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1518efbb08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f151996ce00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1518ef7648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1518edaca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1518edaca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f151996dc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1518ef67d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1518ed9e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1518ed9e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f151997eab0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518e817c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1518e8ccd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518e857c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518e7f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1518e7fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e732e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518e762e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518e8a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e772e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1518e847c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518e837c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1518e7ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1518e7e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518e8d740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518e89900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518e87020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1518e87738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e77a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518e8ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518e83020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518e84020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1518e8c6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e75a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518e76a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1518e7a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e78a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1518e7d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e73a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518e8c0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1518e85020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518e81020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1518e7ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1518e802e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1518e8b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518e80a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518e87d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1518e869b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1518e782e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e79a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518e892e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518e792e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1518e752e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518e7aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518e8b980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1518e7c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1518e8a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1518e7da88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518e863a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e71020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518e5fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1518e693a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518e63dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518e5d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1518e5c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e517c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518e537c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518e68638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e557c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1518e61d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518e60cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1518e58020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1518e5c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518e6bda0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518e65020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518e65638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1518e65d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e53020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518e662e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518e60528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518e615c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1518e6ad60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e51020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518e52020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1518e587c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e55020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1518e5a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e50020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518e6a748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1518e63638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518e5f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1518e5a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1518e5e838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1518e699b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518e5d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518e643a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1518e63020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1518e567c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e56020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518e66900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518e577c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1518e527c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518e57020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518e68020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1518e597c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1518e68c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1518e59020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518e649b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e4f0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1518e24cb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1518dfd428"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f1518e23458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f1518dfdb70"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f1518dfc648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f151941fd38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1518df1500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f15191d2428"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1518df0800"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f15191d1638"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1518def988"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f15191cdc58"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1518df29a8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f15191bd3c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1518deeb58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518d57cb8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518d57cb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518ded960"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518d56948"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518d56948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518dea1b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1518d552e8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518d552e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518dea880"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f1518d54c50"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518d54c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518de9020"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f1518d532e8"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518d532e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518de9710"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518d52c50"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518d52c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518deb938"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1518d4ca88"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518d4ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518dec390"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f1518d3a020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518d3a020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518deb0c8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518d40470"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518d40470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518de9e10"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518d4d2e8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518d4d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518de6020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518d49c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518d49c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518de68a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518d48470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518d48470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518de78f8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f1518d4f678"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518d4f678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518de4208"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f1518d3ec10"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518d3ec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518de5130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1518d3f470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518d3f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518de5960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1518d3fc10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518d3fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518ddf1b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518d2e4b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518d2e4b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518d29930"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518df8628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518df74d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518df6150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518df3d88"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518ca2ac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1518ddfad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518d4aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1518d54020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518d4ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1518d48c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518d3c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1518d4da88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1518d45c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1518d47470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518d502e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1518d50a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518d40c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518d52020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518d4c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1518d55900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1518d43470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1518d41c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1518d46470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518d3cc10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1518d4e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518d4a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1518d47c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1518d49470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1518d54638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518d4f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1518d4fc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1518d41470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1518d42c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518d52638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518d42470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1518d3e470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518d43c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1518d45470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1518d53900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1518d46c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f1518d2d578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f1518d28a48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1518d146a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1518d27120"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f15191d1638"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1518d26378"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f15191d07d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1518d25508"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f15191cf960"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1518d23720"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f15191c2be8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1518d223b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518b11db8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518b11db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518d21100"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1518af6c10"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1518af6c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518d20510"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518b0b638"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518b0b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518d21de8"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f1518b0a2e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1518b0a2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518d20c68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518d1faf8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518d1c5e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1518d1e4b0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15194d5af8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518d188c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518b03c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518b03c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518d171e8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518b02470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518b02470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518d181c0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f1518b09060"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1518b09060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518d16bc0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f1518af6470"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1518af6470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518d17a18"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1518af8470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1518af8470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518d16378"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1518af8c10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1518af8c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518d15538"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518afac10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518afac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518d15d88"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1518b0f470"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1518b0f470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f1518d08cb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1518c42720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f151925fd70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1518c92520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1518c43528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1518c91788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1518c2b020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1518c2b020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1518b32c38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1518c32d78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518b3f0c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518c32080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518c29618"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518c29618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518bb97d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1518b395a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518b8b290"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1518b86648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1518c26020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1518c26020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1518bb8020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1518b30e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f1518c22338"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f1518c22338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1518bb4128"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1518bb4128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1517cca020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518bb97d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1517ccf600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1518bb8020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1517ccfda8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1517cc7168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15193d6d90"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f1517cc2020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193c8950"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f1517cc1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15193cd980"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f1517cbd0a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f15193be470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1518b825e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1518b34618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1518b29420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518c32d78"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518b04a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1518b0e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518b08a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1518b02c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1518b0d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518afa470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1518b07a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1518b05a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1518afec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1518b01470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518b10a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518b0bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1518b0aa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518b0b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518b052e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518b072e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1518b0fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1518af7c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1518afd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1518afbc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1518b00470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1518b082e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518b042e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1518b01c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1518b03470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1518b0e718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1518b09c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1518afb470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1518afcc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518afc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1518af7470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518afdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1518b0ed30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1518afe470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1518b0d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1518b00c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1518b09678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1518af4020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f1518accb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1518ac89f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1518ad2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1518ac8198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1518aaa750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1518aafa40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1518aa9428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1518aac978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1518aac978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906a790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1518aa82a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1518aceb98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518aa8a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1518a93e18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1518a8c060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1518a8cd30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1518a90560"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518a8b3c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1518a55528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1518a5f670"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1518a54358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1518a5f020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518a54970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518a537a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1518a521c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1518a072a8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f1518a27ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f15189fc928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15189f8d50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f15189f8d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906a790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15189e4e18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15189e8020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f15189e3ae8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15189b0430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f15189b0430"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f151906a790"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f15189e1490"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15189ae5e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15189ae5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15189e2968"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1518cab3b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15189dc4a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f15189da9e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1517c17518"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1517c0b7c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1517c16268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151888f5f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1517c16e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151888e2c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f151886c020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1517c14430"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1517c14430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151888c968"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f151888f5f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151958f0c0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f151888e2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1519596a88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151888c968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151958ec78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1517c0a450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15188e34f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1517c09060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151888e2c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15188e34f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f151889c920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f151889b6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1518891208"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1518891208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15195997a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f151889a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f151888e2c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1518898a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f151888f5f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1518897780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1518896020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1518892248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151959a818"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f151888f020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1519596498"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f151888b6b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1518883170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519584ac0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1518890348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1519598928"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518887670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bb68d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f151853b4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelX" scoped="" ref="0x7f15182416c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bba058"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bba058"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x7f15185d08a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Sounder" scoped="" ref="0x7f1518248478"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f15187d2db8"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f15187d2db8"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f15187cebb8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7f151823d508"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bac6c0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bac6c0"/></from>
      <to><interface-ref name="MagX" scoped="" ref="0x7f15182d3c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bb01c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518499e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelY" scoped="" ref="0x7f1518240e60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bb8498"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bb8498"/></from>
      <to><interface-ref name="ReadY" scoped="" ref="0x7f15185cd578"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Vref" scoped="" ref="0x7f1518248b58"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517bbebc0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bbebc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517b804a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517bb4d08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184ad928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7f151823cb78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517ba9998"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517ba9998"/></from>
      <to><interface-ref name="MagY" scoped="" ref="0x7f15182d1918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15187cb448"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15187cdb88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15187cdb88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7f15187c6500"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7f15187b5020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f15187b5020"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f151995a968"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f15187aaca8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1518787d00"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f15187a03d8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f151879e640"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f15187b4180"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f1519959af0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f15187b1638"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f1519954020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f15187a2760"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f151879ba30"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f15187a1490"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f151879a760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f15187aeae0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f1519944af0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f15187a44f8"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f151994faf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f15187b7de0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f151995b7e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f15187b3328"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f1519958c78"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f15187a7548"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1518780c80"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f15187a0a48"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f151879ecb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f15187a5370"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f1519950968"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f15187b07c0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f15199531a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f15187aa020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f151878b620"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f15187a1d00"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f151879add0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f15187adc68"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f1519943c78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f15187b24b0"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f1519957e00"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f15187a20f0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f151879b3c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f15187a2dd0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f151879a0f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f15187af958"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f1519945968"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f15187a9858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1518783458"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f15187a60c8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f151994de00"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f151879f3c0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f1518798490"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f15187bab48"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f151995c658"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f15187acdf0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f1519942e00"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518789100"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f151918a518"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518786800"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f1519189518"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518782020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f1519188518"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f151877f780"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f1519187518"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517b804a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b7fa28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15185e0438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b7fa28"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b7e3f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518605680"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f1518757a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f151862b428"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15185eb720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15186289a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f15185ec060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f151862d6a0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f151862ab18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f151874a0d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f151874a0d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f1518742b70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f15187459b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f151873e628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518652840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518652840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517b6ce20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151864e3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f151872f0d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f1518743a20"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f1518743a20"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f15186fac40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f151873b610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1519988b98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f151864b060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15187423b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151864bd18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518651dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518651dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b6a3f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f15186f50c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f15199b4240"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518651698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517b6bb48"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15186509d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b69020"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b698c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151864e3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517b670a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517b6edc8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517b65100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1517b34020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f151864b060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517b34740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151864b780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b34cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151864bd18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b33908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518636908"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f15186174d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7f15185cb2b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517b22020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517b22020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b215d8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f15185c3148"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7f15185c3148"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f15185bf8a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x7f15185d08a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518565d98"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x7f15185cd578"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f151855e2e8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518561cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15185c4428"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15185c4428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151859d748"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f1518563628"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7f15185cb2b0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151855a240"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15185c4428"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f151855db28"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7f15185c8020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7f15185c3b10"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f15185be388"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151859d748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517b104b0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151856dd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151859cc50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151859cc50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b0f940"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151856c940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151859b888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151859b888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b0e578"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1518597d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15185c2cd0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15185bee30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15185a4b68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15185a4b68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x7f15185b9e30"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x7f15187b3328"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x7f15185b6020"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f15187a2760"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x7f15185b66c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f15187a2dd0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f15185a9c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f151859c510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517b0f200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b0ee18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151859a140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517b0d5d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517b12328"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517b0a5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1517ad9d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1518597d50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517ad87b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151856d7b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517ad8d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151856dd50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517ad7940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151856c940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1517ad6120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f1517ad68c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b215d8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b21e80"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7f15185c8020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517aaf1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517aaf1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517aae778"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f15185c3b10"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517aae778"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517aad060"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f151853b4c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184bbd58"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f15184b85e8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7f15185331c8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7f15185331c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184ed020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15184b7ca0"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7f15185399c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7f15185399c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15185217c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7f1518531020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184df288"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15185217c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517a5b060"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f1518536d70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151851c910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151851c910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517a18cc8"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15185153b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518520c50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518520c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a5a4c0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518514020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151851f888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151851f888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a590e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1518516380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15184ee270"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f15184ec638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151852d678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15184eb370"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15184d25e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15184d25e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f15184e6438"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7f15187aeae0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f15184e46c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184ccaa8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f15184ccaa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518512de8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151851add8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151851add8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a15268"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185109d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185199d8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185199d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a15e20"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1518513d80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15184e0600"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f15184de8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151852d678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15184dc680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15184d25e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f15184d75d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x7f15187bab48"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f15184d6848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184ccaa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184ca060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151852c158"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f151852cb68"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f15187a0a48"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518526398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a969a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518526ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a95268"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151852d678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517a97bb8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518525700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a95e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a946f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1518523020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517a94e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a9aaf8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517a91020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518520510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a5bd58"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a59980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151851e140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517a57130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a5d020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517a552e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f151851a698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a16a28"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a146f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15185183c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517a14e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a1ab48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517a11020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15179e0740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1518516380"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15179df268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518516db0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15179df800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15185153b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15179dd3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518514020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f15179ddb90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f15179dc470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15179c9ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1518513d80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15179c8578"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518512850"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15179c8b10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518512de8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15179c7700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185109d8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f15179c6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f15179c67c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f15184e3d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f15184d5e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184ca060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15184ca908"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f15184ad928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15184a8560"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f15184a6da8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x7f1518531020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15184a4510"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x7f1518536d70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7f1517baf758"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7f15184862e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7f15184862e0"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7f1518482828"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f1518490bb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517980520"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517980520"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151797fac8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184889a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184889a0"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7f1518481be0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1518499e78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15182ee020"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15182ea020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518489d20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518489d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518301d88"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f15182ed860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x7f1518490bb0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518301d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15178ba830"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182fa800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182ff268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182ff268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178b9dd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182f93f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182ffe20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182ffe20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15178b79d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15182fb6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1518485cd8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1518480738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1518307020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1518307020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x7f151847b7f8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f15187b4180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x7f151847a9c8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x7f15187b1638"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x7f1518479cf8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f15187acdf0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x7f1518477020"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f15187a20f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f151846b280"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f151830d020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f151830d020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f15184319b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f1518469d48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151843f1d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151843f1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518432538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x7f1518468ad8"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f15187a7548"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518432538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518409140"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f15184319b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f15183d4020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f15183d0c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518414d80"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518414d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517947d80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f15183cea10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f1518363700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f15183ca420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f151835e318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f151840e600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15183c4e60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151840d2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518411268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518411268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517945268"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f151835e930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f1518356828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f1518356828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f151834e1d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f151835b2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f151883f390"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f151835a908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f151883f390"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518412af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517946af8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518411e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517945e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15179446f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15184106d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1517944e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1517949cb8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517940020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f151834cb50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f1519952348"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f151834ae08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f15199517e0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518300af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15178b9698"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15178b63e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15182fd6d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15178b6b68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f15178bc7b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f15178b4da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15178825c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15182fb6d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517881020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15182fa268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178815b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182fa800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517880268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182f93f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1517880a08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f151787e2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151797fac8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151797e3f0"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7f1517bada00"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7f15182d7b00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7f15182d7b00"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7f15182ca358"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7f15182ce6a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1517860c60"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1517860c60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151785d220"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f15182c5060"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7f15182c5060"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f15182c03c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7f15182d3c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f151826f648"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7f15182d1918"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518269d58"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7f15182ca358"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7f15182c17e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151826b6b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15182c6328"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15182c6328"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518280d88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f151826c020"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7f15182ce6a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518265ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15182c6328"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f15182665e8"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7f15182cc4c0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7f15182c5a28"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f15182c0dd0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1518280d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1517848e20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518279800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151827d268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151827d268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178463f0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182783f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151827de20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151827de20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517844020"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f151827a6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15182c4cf8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f15182b8be0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f151828c1c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f151828c1c8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f15184319b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f15182b3828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f151828d468"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f151828d468"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518432538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15182bf888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15182860a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15182860a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagPower" scoped="" ref="0x7f15182ba9e8"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x7f15187b24b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcX" scoped="" ref="0x7f15182b9cc8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f15187a1d00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcY" scoped="" ref="0x7f15182b8418"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f15187a1490"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <from><interface-ref name="signalAdjustDone" scoped="" ref="0x7f15182a1100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f151827eaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517847b48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15178448c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151827c6d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15178430a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f151784ae08"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1517841100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1517810740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f151827a6d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151780f268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518279268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151780f800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518279800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151780e3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182783f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f151780eb90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f151780c470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151785d220"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151785dac8"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7f1517baada8"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7f15182d7b00"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7f15182cc4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f15177e7ba8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f15177e7ba8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15177e4180"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f15182c5a28"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15177e4180"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15177e4a28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimeSyncC" loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimeSyncP" loc="37(TimeSyncC.TimeSyncP):/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <instance number="0">
        <component-ref qname="TimeSyncP"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimeSyncMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaz platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaz platform. This is a naming wrapper&#10; around the CC2420 Active Message layer that implemets timesync interface (TEP 133).&#10;&#10; @author Philip Levis&#10; @author Brano Kusy&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f15199d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2//tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2//tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1518c1c110"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimerC" loc="44(TimeSyncC.TimerC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspC" loc="39:TestFtspC.nc">
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C" loc="39(TestFtspAppC.SensorMts300C):/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensorMts300C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC" loc="39(TestFtspAppC.SensorMts300C.VoltageC):/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC" loc="18(TestFtspAppC.SensorMts300C.AccelXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.AccelXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC" loc="18(TestFtspAppC.SensorMts300C.AccelYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.AccelYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.PhotoC" loc="18(TestFtspAppC.SensorMts300C.PhotoC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.TempC" loc="18(TestFtspAppC.SensorMts300C.TempC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC" loc="40(TestFtspAppC.SensorMts300C.MicC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.MicC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC" loc="16(TestFtspAppC.SensorMts300C.MagXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagReadP" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagConfigP" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagP" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.I2CPot" loc="43(MagConfigP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.WarmupTimer" loc="44(MagConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter" loc="89(MagConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.mag">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter.Queue" loc="42(MagConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.Arbiter.Arbiter" loc="52(MagConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.PowerManager" loc="67(MagConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.PowerManager.PowerManager" loc="58(MagConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcX" loc="23(MagReadP.AdcX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcY" loc="23(MagReadP.AdcY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.MagXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC" loc="16(TestFtspAppC.SensorMts300C.MagYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.MagYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.MyTimer" loc="44(TestFtspAppC.MyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f151992fb98" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f151992c020" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f151992c368" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1519921608" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1519921970" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1519921cd8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f151991e060" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1519890020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1519890388" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f15198906f0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1519890a20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimeSyncP" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x7f15197c9c80" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
          <component-ref qname="TimeSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15197c9c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f15192af1f8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15192af1f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f15192af548" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f15192b4a20" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f15192b4a20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f151929c198" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f151929c198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f151929c498" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1519257e28" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1519257e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f15192545c8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15192545c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1519238020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1519238020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1519238788" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1519238788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1519238b50" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1519238b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1519237348" loc="58:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1519237348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f15192376f0" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1519237e80" loc="60:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1519237e80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1519219c00" loc="52:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1519219c00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1519216398" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1519216398"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1519216760" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1519216760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1519215020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1519215020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f15192153c8" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f15191847e0" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f1519184b48" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f1519161020" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1519161350" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2//tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1518f76578" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1518f6b510" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1518c41110" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1518c41110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1518c1c110" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1518c1c110"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f1518c1c400" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1518c13720" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1518c13720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f1518c13a10" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1518baf300" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1518baf300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1518b80698" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1518b80698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1518b809a8" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1518908348" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1518901020" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f15188fd8b0" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f15188e1730" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorMts300C" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f15186c01c8" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f15186b6860" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f151869a5c0" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f15186041d0" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f15186041d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AccelYC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MicC" loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f15184275a0" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MagXC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MagYC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1519995d50" loc="58:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1519995d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15199940d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1519991940" loc="57:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1519991940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1519991c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f151998d9a0" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f151998d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151998dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1519994cc8" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1519994cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151998e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f1519988b98" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1519988b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f151998d020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f151998d1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f151998d330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f151998d4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f151998d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1519985b90" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f1519985b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15199854f0" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15199854f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519985840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f1519984398" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f1519984398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15199846e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f151997f108" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f151997f108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151997f458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f1519987a08" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1519987a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519987d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f151997a7f8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f151997a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151997ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f15199745f8" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f15199745f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519974948"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519974ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519974c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519974de0"/>
        <function-ref name="get" scoped="" ref="0x7f151997a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151997a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f151997a330"/>
        <function-ref name="clr" scoped="" ref="0x7f151997a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f151997b428" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f151997b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151997b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f1519937c78" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f1519937c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199365e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519936770"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199368f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519936a80"/>
        <function-ref name="get" scoped="" ref="0x7f1519936c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519936d90"/>
        <function-ref name="set" scoped="" ref="0x7f1519935020"/>
        <function-ref name="clr" scoped="" ref="0x7f15199351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f15199517e0" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f15199517e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519951b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519951cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519951e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519950020"/>
        <function-ref name="get" scoped="" ref="0x7f15199501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519950330"/>
        <function-ref name="set" scoped="" ref="0x7f15199504b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519950640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f15199467e0" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f15199467e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519946b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519946cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519946e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519945020"/>
        <function-ref name="get" scoped="" ref="0x7f15199451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519945330"/>
        <function-ref name="set" scoped="" ref="0x7f15199454b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519945640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f151993d4d0" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f151993d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151993d820"/>
        <function-ref name="isInput" scoped="" ref="0x7f151993d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151993db30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151993dcb8"/>
        <function-ref name="get" scoped="" ref="0x7f151993de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151993c020"/>
        <function-ref name="set" scoped="" ref="0x7f151993c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f151993c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f15199674d0" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f15199674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519967820"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199679a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519967b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519967cb8"/>
        <function-ref name="get" scoped="" ref="0x7f1519967e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519966020"/>
        <function-ref name="set" scoped="" ref="0x7f15199661a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519966330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f151993f1a0" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f151993f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151993f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f151993f678"/>
        <function-ref name="toggle" scoped="" ref="0x7f151993f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151993f988"/>
        <function-ref name="get" scoped="" ref="0x7f151993fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151993fc98"/>
        <function-ref name="set" scoped="" ref="0x7f151993fe20"/>
        <function-ref name="clr" scoped="" ref="0x7f151993e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f15199657e0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f15199657e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519965b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519965cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519965e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519964020"/>
        <function-ref name="get" scoped="" ref="0x7f15199641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519964330"/>
        <function-ref name="set" scoped="" ref="0x7f15199644b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519964640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f151995a968" loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f151995a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995acb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995ae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519959020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199591a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519959330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199594b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519959640"/>
        <function-ref name="clr" scoped="" ref="0x7f15199597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f151994ec78" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f151994ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151994d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f151994d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f151994d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f151994d950"/>
        <function-ref name="clr" scoped="" ref="0x7f151994dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f1519943c78" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f1519943c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519942020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199421a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519942330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199424b8"/>
        <function-ref name="get" scoped="" ref="0x7f1519942640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199427c8"/>
        <function-ref name="set" scoped="" ref="0x7f1519942950"/>
        <function-ref name="clr" scoped="" ref="0x7f1519942ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f151996dc78" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f151996dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151996c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f151996c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151996c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151996c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f151996c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151996c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f151996c950"/>
        <function-ref name="clr" scoped="" ref="0x7f151996cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f1519962c78" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f1519962c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519961020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199611a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519961330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199614b8"/>
        <function-ref name="get" scoped="" ref="0x7f1519961640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199617c8"/>
        <function-ref name="set" scoped="" ref="0x7f1519961950"/>
        <function-ref name="clr" scoped="" ref="0x7f1519961ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f1519957e00" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f1519957e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199561a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519956330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199564b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519956640"/>
        <function-ref name="get" scoped="" ref="0x7f15199567c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519956950"/>
        <function-ref name="set" scoped="" ref="0x7f1519956ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519956c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f151994a1a0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f151994a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151994a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f151994a678"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994a800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994a988"/>
        <function-ref name="get" scoped="" ref="0x7f151994ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994ac98"/>
        <function-ref name="set" scoped="" ref="0x7f151994ae20"/>
        <function-ref name="clr" scoped="" ref="0x7f1519949020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f1519939968" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f1519939968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519939cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519939e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519938020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199381a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519938330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199384b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519938640"/>
        <function-ref name="clr" scoped="" ref="0x7f15199387c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f15199337e0" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f15199337e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519933b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519933cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519933e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519932020"/>
        <function-ref name="get" scoped="" ref="0x7f15199321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519932330"/>
        <function-ref name="set" scoped="" ref="0x7f15199324b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519932640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f15199484d0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f15199484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519948820"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199489a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519948b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519948cb8"/>
        <function-ref name="get" scoped="" ref="0x7f1519948e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519947020"/>
        <function-ref name="set" scoped="" ref="0x7f15199471a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519947330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f15199691a0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f15199691a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199694f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519969678"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519969800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519969988"/>
        <function-ref name="get" scoped="" ref="0x7f1519969b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519969c98"/>
        <function-ref name="set" scoped="" ref="0x7f1519969e20"/>
        <function-ref name="clr" scoped="" ref="0x7f1519968020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f151995e348" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f151995e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995e698"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995e820"/>
        <function-ref name="toggle" scoped="" ref="0x7f151995e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151995eb30"/>
        <function-ref name="get" scoped="" ref="0x7f151995ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151995ee40"/>
        <function-ref name="set" scoped="" ref="0x7f151995d020"/>
        <function-ref name="clr" scoped="" ref="0x7f151995d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f15199354d0" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f15199354d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519935820"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199359a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519935b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519935cb8"/>
        <function-ref name="get" scoped="" ref="0x7f1519935e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519934020"/>
        <function-ref name="set" scoped="" ref="0x7f15199341a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519934330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f151995c658" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f151995c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995cb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f151995ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151995ce40"/>
        <function-ref name="get" scoped="" ref="0x7f151995b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151995b1a8"/>
        <function-ref name="set" scoped="" ref="0x7f151995b330"/>
        <function-ref name="clr" scoped="" ref="0x7f151995b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f1519950968" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f1519950968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519950cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519950e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f151994f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f151994f640"/>
        <function-ref name="clr" scoped="" ref="0x7f151994f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f1519945968" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f1519945968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519945cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519945e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519944020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199441a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519944330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199444b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519944640"/>
        <function-ref name="clr" scoped="" ref="0x7f15199447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f151993c658" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f151993c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151993c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151993cb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f151993ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151993ce40"/>
        <function-ref name="get" scoped="" ref="0x7f151993b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151993b1a8"/>
        <function-ref name="set" scoped="" ref="0x7f151993b330"/>
        <function-ref name="clr" scoped="" ref="0x7f151993b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f1519966658" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f1519966658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199669a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519966b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519966cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519966e40"/>
        <function-ref name="get" scoped="" ref="0x7f1519965020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199651a8"/>
        <function-ref name="set" scoped="" ref="0x7f1519965330"/>
        <function-ref name="clr" scoped="" ref="0x7f15199654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f1519964968" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f1519964968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519964cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519964e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519963020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199631a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519963330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199634b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519963640"/>
        <function-ref name="clr" scoped="" ref="0x7f15199637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f1519959af0" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f1519959af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519959e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519958020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199581a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519958330"/>
        <function-ref name="get" scoped="" ref="0x7f15199584b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519958640"/>
        <function-ref name="set" scoped="" ref="0x7f15199587c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519958950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f151994de00" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f151994de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151994c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151994c330"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994c640"/>
        <function-ref name="get" scoped="" ref="0x7f151994c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994c950"/>
        <function-ref name="set" scoped="" ref="0x7f151994cad8"/>
        <function-ref name="clr" scoped="" ref="0x7f151994cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f1519942e00" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f1519942e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199411a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519941330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519941640"/>
        <function-ref name="get" scoped="" ref="0x7f15199417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519941950"/>
        <function-ref name="set" scoped="" ref="0x7f1519941ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519941c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f151996ce00" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f151996ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151996b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151996b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f151996b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151996b640"/>
        <function-ref name="get" scoped="" ref="0x7f151996b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151996b950"/>
        <function-ref name="set" scoped="" ref="0x7f151996bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f151996bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f1519961e00" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f1519961e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199602e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519960470"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199605f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519960780"/>
        <function-ref name="get" scoped="" ref="0x7f1519960908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519960a90"/>
        <function-ref name="set" scoped="" ref="0x7f1519960c18"/>
        <function-ref name="clr" scoped="" ref="0x7f1519960da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f1519954020" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f1519954020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519954370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199544f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519954680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519954808"/>
        <function-ref name="get" scoped="" ref="0x7f1519954990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519954b18"/>
        <function-ref name="set" scoped="" ref="0x7f1519954ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519954e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f1519938af0" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f1519938af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519938e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519937020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199371a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519937330"/>
        <function-ref name="get" scoped="" ref="0x7f15199374b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519937640"/>
        <function-ref name="set" scoped="" ref="0x7f15199377c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519937950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f1519952348" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f1519952348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519952898"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519952a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519952ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519952d30"/>
        <function-ref name="get" scoped="" ref="0x7f1519951020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199511a8"/>
        <function-ref name="set" scoped="" ref="0x7f1519951330"/>
        <function-ref name="clr" scoped="" ref="0x7f15199514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f1519947658" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f1519947658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199479a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519947b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519947cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519947e40"/>
        <function-ref name="get" scoped="" ref="0x7f1519946020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199461a8"/>
        <function-ref name="set" scoped="" ref="0x7f1519946330"/>
        <function-ref name="clr" scoped="" ref="0x7f15199464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f151993e348" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f151993e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151993e698"/>
        <function-ref name="isInput" scoped="" ref="0x7f151993e820"/>
        <function-ref name="toggle" scoped="" ref="0x7f151993e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151993eb30"/>
        <function-ref name="get" scoped="" ref="0x7f151993ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151993ee40"/>
        <function-ref name="set" scoped="" ref="0x7f151993d020"/>
        <function-ref name="clr" scoped="" ref="0x7f151993d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f1519932968" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f1519932968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519932cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519932e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519931020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199311a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519931330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199314b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519931640"/>
        <function-ref name="clr" scoped="" ref="0x7f15199317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f1519968348" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f1519968348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519968698"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519968820"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199689a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519968b30"/>
        <function-ref name="get" scoped="" ref="0x7f1519968cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519968e40"/>
        <function-ref name="set" scoped="" ref="0x7f1519967020"/>
        <function-ref name="clr" scoped="" ref="0x7f15199671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f151995d4d0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f151995d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995d820"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151995db30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151995dcb8"/>
        <function-ref name="get" scoped="" ref="0x7f151995de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151995c020"/>
        <function-ref name="set" scoped="" ref="0x7f151995c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f151995c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f1519940020" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f1519940020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519940370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199404f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519940680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519940808"/>
        <function-ref name="get" scoped="" ref="0x7f1519940990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519940b18"/>
        <function-ref name="set" scoped="" ref="0x7f1519940ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519940e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f151995b7e0" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f151995b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995bb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151995be40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151995a020"/>
        <function-ref name="get" scoped="" ref="0x7f151995a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151995a330"/>
        <function-ref name="set" scoped="" ref="0x7f151995a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f151995a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f151994faf0" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f151994faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151994fe40"/>
        <function-ref name="isInput" scoped="" ref="0x7f151994e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994e330"/>
        <function-ref name="get" scoped="" ref="0x7f151994e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994e640"/>
        <function-ref name="set" scoped="" ref="0x7f151994e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f151994e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f1519944af0" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f1519944af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519944e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519943020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519943330"/>
        <function-ref name="get" scoped="" ref="0x7f15199434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519943640"/>
        <function-ref name="set" scoped="" ref="0x7f15199437c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519943950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f151993b7e0" loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f151993b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151993bb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f151993bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151993be40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519939020"/>
        <function-ref name="get" scoped="" ref="0x7f15199391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519939330"/>
        <function-ref name="set" scoped="" ref="0x7f15199394b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519939640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f151997eab0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f151997eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151997ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f151996d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f151996d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151996d330"/>
        <function-ref name="get" scoped="" ref="0x7f151996d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151996d640"/>
        <function-ref name="set" scoped="" ref="0x7f151996d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f151996d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f1519963af0" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f1519963af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519963e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519962020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199621a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519962330"/>
        <function-ref name="get" scoped="" ref="0x7f15199624b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519962640"/>
        <function-ref name="set" scoped="" ref="0x7f15199627c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519962950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f1519958c78" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f1519958c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519957020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15199571a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519957330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15199574b8"/>
        <function-ref name="get" scoped="" ref="0x7f1519957640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199577c8"/>
        <function-ref name="set" scoped="" ref="0x7f1519957950"/>
        <function-ref name="clr" scoped="" ref="0x7f1519957ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f151994b020" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f151994b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151994b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f151994b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151994b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151994b808"/>
        <function-ref name="get" scoped="" ref="0x7f151994b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151994bb18"/>
        <function-ref name="set" scoped="" ref="0x7f151994bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f151994be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f1519934658" loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f1519934658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199349a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519934b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519934cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519934e40"/>
        <function-ref name="get" scoped="" ref="0x7f1519933020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15199331a8"/>
        <function-ref name="set" scoped="" ref="0x7f1519933330"/>
        <function-ref name="clr" scoped="" ref="0x7f15199334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f1519949348" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f1519949348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519949698"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519949820"/>
        <function-ref name="toggle" scoped="" ref="0x7f15199499a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519949b30"/>
        <function-ref name="get" scoped="" ref="0x7f1519949cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519949e40"/>
        <function-ref name="set" scoped="" ref="0x7f1519948020"/>
        <function-ref name="clr" scoped="" ref="0x7f15199481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f15199531a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f15199531a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15199534f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519953678"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519953800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519953988"/>
        <function-ref name="get" scoped="" ref="0x7f1519953b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519953c98"/>
        <function-ref name="set" scoped="" ref="0x7f1519953e20"/>
        <function-ref name="clr" scoped="" ref="0x7f1519952020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f151996a020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f151996a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151996a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f151996a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151996a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151996a808"/>
        <function-ref name="get" scoped="" ref="0x7f151996a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151996ab18"/>
        <function-ref name="set" scoped="" ref="0x7f151996aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f151996ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f151995f100" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f151995f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151995f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151995f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151995f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151995f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151995fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151995fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f151995fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f151995e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f15198e8120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f15198e8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e8470"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e85f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e8780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e8908"/>
        <function-ref name="get" scoped="" ref="0x7f15198e8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e8c18"/>
        <function-ref name="set" scoped="" ref="0x7f15198e8da0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f15198e55b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f15198e55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e5908"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e5a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e5c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e5da0"/>
        <function-ref name="get" scoped="" ref="0x7f15198e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e41a8"/>
        <function-ref name="set" scoped="" ref="0x7f15198e4330"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198ebdc0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198ebdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198ea170"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198ea2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ea480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ea608"/>
        <function-ref name="get" scoped="" ref="0x7f15198ea790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ea918"/>
        <function-ref name="set" scoped="" ref="0x7f15198eaaa0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198eac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f15198e72a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f15198e72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e75f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e7780"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e7908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e7a90"/>
        <function-ref name="get" scoped="" ref="0x7f15198e7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e7da0"/>
        <function-ref name="set" scoped="" ref="0x7f15198e6020"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f15198e4740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f15198e4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e4c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e3020"/>
        <function-ref name="get" scoped="" ref="0x7f15198e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e3330"/>
        <function-ref name="set" scoped="" ref="0x7f15198e34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f15198e9020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f15198e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e9370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e94f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e9680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e9808"/>
        <function-ref name="get" scoped="" ref="0x7f15198e9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e9b18"/>
        <function-ref name="set" scoped="" ref="0x7f15198e9ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f15198e6430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f15198e6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e6780"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e6908"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e6c18"/>
        <function-ref name="get" scoped="" ref="0x7f15198e6da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e5020"/>
        <function-ref name="set" scoped="" ref="0x7f15198e51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f15198e38c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f15198e38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198e3c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198e3da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198e21a8"/>
        <function-ref name="get" scoped="" ref="0x7f15198e2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198e24b8"/>
        <function-ref name="set" scoped="" ref="0x7f15198e2640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181fb020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181fb370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181fb808"/>
        <function-ref name="get" scoped="" ref="0x7f15181fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181fbb18"/>
        <function-ref name="set" scoped="" ref="0x7f15181fbca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181f8020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181f8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181f84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181f8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181f8808"/>
        <function-ref name="get" scoped="" ref="0x7f15181f8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181f8b18"/>
        <function-ref name="set" scoped="" ref="0x7f15181f8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181f8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181f5020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181f5370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181f54f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181f5680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181f5808"/>
        <function-ref name="get" scoped="" ref="0x7f15181f5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181f5b18"/>
        <function-ref name="set" scoped="" ref="0x7f15181f5ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181f5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181f2020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181f2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181f24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181f2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181f2808"/>
        <function-ref name="get" scoped="" ref="0x7f15181f2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181f2b18"/>
        <function-ref name="set" scoped="" ref="0x7f15181f2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181f2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181e5020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181e5370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181e54f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181e5680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181e5808"/>
        <function-ref name="get" scoped="" ref="0x7f15181e5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181e5b18"/>
        <function-ref name="set" scoped="" ref="0x7f15181e5ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181e5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181e2020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181e2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181e24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181e2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181e2808"/>
        <function-ref name="get" scoped="" ref="0x7f15181e2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181e2b18"/>
        <function-ref name="set" scoped="" ref="0x7f15181e2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181e2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181df020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181df370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181df4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181df680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181df808"/>
        <function-ref name="get" scoped="" ref="0x7f15181df990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181dfb18"/>
        <function-ref name="set" scoped="" ref="0x7f15181dfca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181dfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15181dc020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15181dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181dc370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181dc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181dc680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181dc808"/>
        <function-ref name="get" scoped="" ref="0x7f15181dc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15181dcb18"/>
        <function-ref name="set" scoped="" ref="0x7f15181dcca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15181dce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f15198dabd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f15198dabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d94b8"/>
        <function-ref name="get" scoped="" ref="0x7f15198d9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d97c8"/>
        <function-ref name="set" scoped="" ref="0x7f15198d9950"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f15198d6020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f15198d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d6370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d64f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d6680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d6808"/>
        <function-ref name="get" scoped="" ref="0x7f15198d6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d6b18"/>
        <function-ref name="set" scoped="" ref="0x7f15198d6ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198dc930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198dc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198dcc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198dce08"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198db1a8"/>
        <function-ref name="get" scoped="" ref="0x7f15198db330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198db4b8"/>
        <function-ref name="set" scoped="" ref="0x7f15198db640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f15198d9d60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f15198d9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d80d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d8260"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d83e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d8570"/>
        <function-ref name="get" scoped="" ref="0x7f15198d86f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d8880"/>
        <function-ref name="set" scoped="" ref="0x7f15198d8a08"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f15198d5120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f15198d5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d5470"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d55f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d5780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d5908"/>
        <function-ref name="get" scoped="" ref="0x7f15198d5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d5c18"/>
        <function-ref name="set" scoped="" ref="0x7f15198d5da0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f15198dba50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f15198dba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198dbda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198da020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198da1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198da330"/>
        <function-ref name="get" scoped="" ref="0x7f15198da4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198da640"/>
        <function-ref name="set" scoped="" ref="0x7f15198da7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198da950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f15198d8e18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f15198d8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d71a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d7330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d7640"/>
        <function-ref name="get" scoped="" ref="0x7f15198d77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d7950"/>
        <function-ref name="set" scoped="" ref="0x7f15198d7ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f15198d42a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f15198d42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198d45f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198d4780"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198d4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198d4a90"/>
        <function-ref name="get" scoped="" ref="0x7f15198d4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198d4da0"/>
        <function-ref name="set" scoped="" ref="0x7f15198d2020"/>
        <function-ref name="clr" scoped="" ref="0x7f15198d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151818a180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151818a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151818a4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f151818a658"/>
        <function-ref name="toggle" scoped="" ref="0x7f151818a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151818a968"/>
        <function-ref name="get" scoped="" ref="0x7f151818aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151818ac78"/>
        <function-ref name="set" scoped="" ref="0x7f151818ae00"/>
        <function-ref name="clr" scoped="" ref="0x7f1518189020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518187100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518187100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518187450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181875d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518187760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181878e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518187a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518187bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518187d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518186020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518184100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518184100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518184450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181845d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518184760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181848e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518184a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518184bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518184d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518181100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518181100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518181450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181815d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518181760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181818e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518181a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518181bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518181d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518180020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151817e100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151817e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151817e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151817e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151817e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151817e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151817ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151817ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f151817ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f151817d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151817b100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151817b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151817b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151817b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151817b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151817b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151817ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151817bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f151817bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f151817a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518178100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518178100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518178450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181785d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518178760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181788e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518178a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518178bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518178d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518177020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518175100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518175100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518175450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181755d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518175760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181758e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518175a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518175bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518175d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518173020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f15198cb740" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f15198cb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198cba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198cbc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198cbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ca020"/>
        <function-ref name="get" scoped="" ref="0x7f15198ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ca330"/>
        <function-ref name="set" scoped="" ref="0x7f15198ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f15198c7bd8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f15198c7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198c6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198c61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198c6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198c64b8"/>
        <function-ref name="get" scoped="" ref="0x7f15198c6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198c67c8"/>
        <function-ref name="set" scoped="" ref="0x7f15198c6950"/>
        <function-ref name="clr" scoped="" ref="0x7f15198c6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198cd500" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198cd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198cd850"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198cd9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198cdb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198cdce8"/>
        <function-ref name="get" scoped="" ref="0x7f15198cde70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198cc020"/>
        <function-ref name="set" scoped="" ref="0x7f15198cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f15198ca8c8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f15198ca8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198cac18"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198cada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198c91a8"/>
        <function-ref name="get" scoped="" ref="0x7f15198c9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198c94b8"/>
        <function-ref name="set" scoped="" ref="0x7f15198c9640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198c97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f15198c6d60" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f15198c6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198c50d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198c5260"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198c53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198c5570"/>
        <function-ref name="get" scoped="" ref="0x7f15198c56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198c5880"/>
        <function-ref name="set" scoped="" ref="0x7f15198c5a08"/>
        <function-ref name="clr" scoped="" ref="0x7f15198c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f15198cc5b8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f15198cc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198cc908"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198cca90"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ccc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ccda0"/>
        <function-ref name="get" scoped="" ref="0x7f15198cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198cb1a8"/>
        <function-ref name="set" scoped="" ref="0x7f15198cb330"/>
        <function-ref name="clr" scoped="" ref="0x7f15198cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f15198c9a50" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f15198c9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198c9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198c71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198c7330"/>
        <function-ref name="get" scoped="" ref="0x7f15198c74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198c7640"/>
        <function-ref name="set" scoped="" ref="0x7f15198c77c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198c7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f15198c5e18" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f15198c5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198c41a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198c4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198c44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198c4640"/>
        <function-ref name="get" scoped="" ref="0x7f15198c47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198c4950"/>
        <function-ref name="set" scoped="" ref="0x7f15198c4ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198c4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518123180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518123180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15181234d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518123658"/>
        <function-ref name="toggle" scoped="" ref="0x7f15181237e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518123968"/>
        <function-ref name="get" scoped="" ref="0x7f1518123af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518123c78"/>
        <function-ref name="set" scoped="" ref="0x7f1518123e00"/>
        <function-ref name="clr" scoped="" ref="0x7f1518122020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518120100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518120100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518120450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181205d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518120760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181208e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518120a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518120bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518120d80"/>
        <function-ref name="clr" scoped="" ref="0x7f151811f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151811d100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151811d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151811d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151811d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151811d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151811d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151811da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151811dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f151811dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f151811c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151811a100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151811a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151811a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151811a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151811a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151811a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151811aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151811abf8"/>
        <function-ref name="set" scoped="" ref="0x7f151811ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518119020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518117100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518117100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518117450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181175d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518117760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181178e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518117a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518117bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518117d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518116020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518114100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518114100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518114450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181145d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518114760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181148e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518114a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518114bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518114d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518113020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518111100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518111100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518111450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15181115d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518111760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15181118e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518111a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518111bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518111d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518110020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151810e100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151810e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151810e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151810e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151810e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151810e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151810ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151810ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f151810ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f151810d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f15198bb120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f15198bb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198bb470"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198bb5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198bb780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198bb908"/>
        <function-ref name="get" scoped="" ref="0x7f15198bba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198bbc18"/>
        <function-ref name="set" scoped="" ref="0x7f15198bbda0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f15198b85b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f15198b85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198b8908"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198b8a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198b8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198b8da0"/>
        <function-ref name="get" scoped="" ref="0x7f15198b7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198b71a8"/>
        <function-ref name="set" scoped="" ref="0x7f15198b7330"/>
        <function-ref name="clr" scoped="" ref="0x7f15198b74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198bfe40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198bfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198be1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198be348"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198be4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198be658"/>
        <function-ref name="get" scoped="" ref="0x7f15198be7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198be968"/>
        <function-ref name="set" scoped="" ref="0x7f15198beaf0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198bec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f15198ba2a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f15198ba2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198ba5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198ba780"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ba908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198baa90"/>
        <function-ref name="get" scoped="" ref="0x7f15198bac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198bada0"/>
        <function-ref name="set" scoped="" ref="0x7f15198b9020"/>
        <function-ref name="clr" scoped="" ref="0x7f15198b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f15198b7740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f15198b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198b7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198b7c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198b7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198b6020"/>
        <function-ref name="get" scoped="" ref="0x7f15198b61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198b6330"/>
        <function-ref name="set" scoped="" ref="0x7f15198b64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198b6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f15198bd020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f15198bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198bd370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198bd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198bd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198bd808"/>
        <function-ref name="get" scoped="" ref="0x7f15198bd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198bdb18"/>
        <function-ref name="set" scoped="" ref="0x7f15198bdca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198bde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f15198b9430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f15198b9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198b9780"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198b9908"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198b9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198b9c18"/>
        <function-ref name="get" scoped="" ref="0x7f15198b9da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198b8020"/>
        <function-ref name="set" scoped="" ref="0x7f15198b81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198b8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f15198b68c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f15198b68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198b6c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198b6da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198b51a8"/>
        <function-ref name="get" scoped="" ref="0x7f15198b5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198b54b8"/>
        <function-ref name="set" scoped="" ref="0x7f15198b5640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198b57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180bc180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180bc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180bc4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180bc658"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180bc7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180bc968"/>
        <function-ref name="get" scoped="" ref="0x7f15180bcaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180bcc78"/>
        <function-ref name="set" scoped="" ref="0x7f15180bce00"/>
        <function-ref name="clr" scoped="" ref="0x7f15180bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180b9100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180b9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180b9450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180b95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180b9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180b98e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180b9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180b9bf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180b9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180b6100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180b6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180b65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180b6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180b68e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180b6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180b6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180b6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180b3100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180b3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180b3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180b35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180b3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180b38e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180b3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180b3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180b3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180b0100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180b0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180b05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180b0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180b08e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180b0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180b0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180b0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180ad100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180ad450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180ad5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180ad760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180ad8e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180ada70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180adbf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180add80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180aa100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180aa450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180aa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180aa760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180aa8e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180aaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180aabf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180aad80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15180a7100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15180a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180a7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180a78e8"/>
        <function-ref name="get" scoped="" ref="0x7f15180a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15180a7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f15180a7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f15180a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f15198adbd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f15198adbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198ac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ac330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ac4b8"/>
        <function-ref name="get" scoped="" ref="0x7f15198ac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ac7c8"/>
        <function-ref name="set" scoped="" ref="0x7f15198ac950"/>
        <function-ref name="clr" scoped="" ref="0x7f15198acad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f15198a9020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f15198a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198a9370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198a94f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198a9680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198a9808"/>
        <function-ref name="get" scoped="" ref="0x7f15198a9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198a9b18"/>
        <function-ref name="set" scoped="" ref="0x7f15198a9ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198a9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198af930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198afc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198afe08"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ae1a8"/>
        <function-ref name="get" scoped="" ref="0x7f15198ae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ae4b8"/>
        <function-ref name="set" scoped="" ref="0x7f15198ae640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f15198acd60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f15198acd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198ab0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198ab260"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ab3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ab570"/>
        <function-ref name="get" scoped="" ref="0x7f15198ab6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ab880"/>
        <function-ref name="set" scoped="" ref="0x7f15198aba08"/>
        <function-ref name="clr" scoped="" ref="0x7f15198abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f15198a8120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f15198a8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198a8470"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198a85f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198a8780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198a8908"/>
        <function-ref name="get" scoped="" ref="0x7f15198a8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198a8c18"/>
        <function-ref name="set" scoped="" ref="0x7f15198a8da0"/>
        <function-ref name="clr" scoped="" ref="0x7f15198a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f15198aea50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f15198aea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198aeda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198ad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198ad330"/>
        <function-ref name="get" scoped="" ref="0x7f15198ad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198ad640"/>
        <function-ref name="set" scoped="" ref="0x7f15198ad7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f15198abe18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f15198abe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198aa1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198aa330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198aa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198aa640"/>
        <function-ref name="get" scoped="" ref="0x7f15198aa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198aa950"/>
        <function-ref name="set" scoped="" ref="0x7f15198aaad8"/>
        <function-ref name="clr" scoped="" ref="0x7f15198aac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f15198a72a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f15198a72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198a75f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198a7780"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198a7908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198a7a90"/>
        <function-ref name="get" scoped="" ref="0x7f15198a7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198a7da0"/>
        <function-ref name="set" scoped="" ref="0x7f15198a6020"/>
        <function-ref name="clr" scoped="" ref="0x7f15198a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518055180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518055180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15180554d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518055658"/>
        <function-ref name="toggle" scoped="" ref="0x7f15180557e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518055968"/>
        <function-ref name="get" scoped="" ref="0x7f1518055af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518055c78"/>
        <function-ref name="set" scoped="" ref="0x7f1518055e00"/>
        <function-ref name="clr" scoped="" ref="0x7f1518054020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518052100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518052100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518052450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180525d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518052760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180528e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518052a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518052bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518052d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151804f100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151804f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151804f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151804f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151804f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151804f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151804fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151804fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f151804fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f151804e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151804c100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151804c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151804c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f151804c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151804c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151804c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f151804ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151804cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f151804cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f151804b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518049100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518049100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518049450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180495d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518049760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180498e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518049a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518049bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518049d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518046100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518046100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518046450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180465d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518046760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180468e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518046a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518046bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518046d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518043100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518043100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518043450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180435d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518043760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180438e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518043a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518043bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518043d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1518042020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1518040100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1518040100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518040450"/>
        <function-ref name="isInput" scoped="" ref="0x7f15180405d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518040760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15180408e8"/>
        <function-ref name="get" scoped="" ref="0x7f1518040a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518040bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1518040d80"/>
        <function-ref name="clr" scoped="" ref="0x7f151803f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f151989e430" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f151989e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989e780"/>
        <function-ref name="isInput" scoped="" ref="0x7f151989e908"/>
        <function-ref name="toggle" scoped="" ref="0x7f151989ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151989ec18"/>
        <function-ref name="get" scoped="" ref="0x7f151989eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151989d020"/>
        <function-ref name="set" scoped="" ref="0x7f151989d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f151989d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f151989b8c8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f151989b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989bc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f151989bda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f151989a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151989a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f151989a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151989a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f151989a640"/>
        <function-ref name="clr" scoped="" ref="0x7f151989a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f15198a01e8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f15198a01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198a0538"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198a06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198a0848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198a09d0"/>
        <function-ref name="get" scoped="" ref="0x7f15198a0b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198a0ce0"/>
        <function-ref name="set" scoped="" ref="0x7f15198a0e68"/>
        <function-ref name="clr" scoped="" ref="0x7f151989f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f151989d5b8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f151989d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989d908"/>
        <function-ref name="isInput" scoped="" ref="0x7f151989da90"/>
        <function-ref name="toggle" scoped="" ref="0x7f151989dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151989dda0"/>
        <function-ref name="get" scoped="" ref="0x7f151989c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151989c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f151989c330"/>
        <function-ref name="clr" scoped="" ref="0x7f151989c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f151989aa50" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f151989aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519899020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198991a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519899330"/>
        <function-ref name="get" scoped="" ref="0x7f15198994b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519899640"/>
        <function-ref name="set" scoped="" ref="0x7f15198997c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519899950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f151989f2a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f151989f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f151989f780"/>
        <function-ref name="toggle" scoped="" ref="0x7f151989f908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151989fa90"/>
        <function-ref name="get" scoped="" ref="0x7f151989fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151989fda0"/>
        <function-ref name="set" scoped="" ref="0x7f151989e020"/>
        <function-ref name="clr" scoped="" ref="0x7f151989e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f151989c740" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f151989c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151989ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f151989cc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f151989cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151989b020"/>
        <function-ref name="get" scoped="" ref="0x7f151989b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151989b330"/>
        <function-ref name="set" scoped="" ref="0x7f151989b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f151989b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1519899bd8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1519899bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519897020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198971a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519897330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198974b8"/>
        <function-ref name="get" scoped="" ref="0x7f1519897640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198977c8"/>
        <function-ref name="set" scoped="" ref="0x7f1519897950"/>
        <function-ref name="clr" scoped="" ref="0x7f1519897ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fec180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fec180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fec4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fec658"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fec7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fec968"/>
        <function-ref name="get" scoped="" ref="0x7f1517fecaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fecc78"/>
        <function-ref name="set" scoped="" ref="0x7f1517fece00"/>
        <function-ref name="clr" scoped="" ref="0x7f1517feb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fe9100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fe9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fe9450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fe95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fe9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fe98e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fe9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fe9bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fe9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fe8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fe6100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fe6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fe6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fe65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fe6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fe68e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fe6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fe6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fe6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fe5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fe3100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fe3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fe3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fe35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fe3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fe38e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fe3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fe3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fe3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fe2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fe0100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fe0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fe0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fe05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fe0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fe08e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fe0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fe0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fe0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fdd100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fdd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fdd450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fdd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fdd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fdd8e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fdda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fddbf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fddd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fda100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fda450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fda5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fda760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fda8e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fdaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fdabf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fdad80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1517fd7100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1517fd7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1517fd7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f1517fd75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1517fd7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1517fd78e8"/>
        <function-ref name="get" scoped="" ref="0x7f1517fd7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1517fd7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f1517fd7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1517fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519891ac0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519891ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519891e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f151987b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f151987b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151987b330"/>
        <function-ref name="get" scoped="" ref="0x7f151987b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151987b640"/>
        <function-ref name="set" scoped="" ref="0x7f151987b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f151987b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519878db8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519878db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519876170"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198762f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519876480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519876608"/>
        <function-ref name="get" scoped="" ref="0x7f1519876790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519876918"/>
        <function-ref name="set" scoped="" ref="0x7f1519876aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519876c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15198723e0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f15198723e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519872730"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198728b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519872a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519872bc8"/>
        <function-ref name="get" scoped="" ref="0x7f1519872d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519871020"/>
        <function-ref name="set" scoped="" ref="0x7f15198711a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519871330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151986d7e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151986d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151986db38"/>
        <function-ref name="isInput" scoped="" ref="0x7f151986dcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f151986de48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151986c020"/>
        <function-ref name="get" scoped="" ref="0x7f151986c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151986c330"/>
        <function-ref name="set" scoped="" ref="0x7f151986c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f151986c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519869c38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519869c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519868020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198681a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519868330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198684b8"/>
        <function-ref name="get" scoped="" ref="0x7f1519868640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198687c8"/>
        <function-ref name="set" scoped="" ref="0x7f1519868950"/>
        <function-ref name="clr" scoped="" ref="0x7f1519868ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519863020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519863020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519863370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198634f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519863680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519863808"/>
        <function-ref name="get" scoped="" ref="0x7f1519863990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519863b18"/>
        <function-ref name="set" scoped="" ref="0x7f1519863ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519863e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151985e480" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151985e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151985e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f151985e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f151985eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151985ec68"/>
        <function-ref name="get" scoped="" ref="0x7f151985edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151985d020"/>
        <function-ref name="set" scoped="" ref="0x7f151985d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f151985d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151985a7e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151985a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151985ab38"/>
        <function-ref name="isInput" scoped="" ref="0x7f151985acc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f151985ae48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519859020"/>
        <function-ref name="get" scoped="" ref="0x7f15198591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519859330"/>
        <function-ref name="set" scoped="" ref="0x7f15198594b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1519859640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519855970" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519855970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519855cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519855e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519854020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15198541a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519854330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15198544b8"/>
        <function-ref name="set" scoped="" ref="0x7f1519854640"/>
        <function-ref name="clr" scoped="" ref="0x7f15198547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519850ab0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519850ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519850e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f151984f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f151984f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151984f330"/>
        <function-ref name="get" scoped="" ref="0x7f151984f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151984f640"/>
        <function-ref name="set" scoped="" ref="0x7f151984f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f151984f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f151984cc38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f151984cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151984b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f151984b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151984b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151984b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f151984b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151984b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f151984b950"/>
        <function-ref name="clr" scoped="" ref="0x7f151984bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519846020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519846020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519846370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15198464f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519846680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519846808"/>
        <function-ref name="get" scoped="" ref="0x7f1519846990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519846b18"/>
        <function-ref name="set" scoped="" ref="0x7f1519846ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519846e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1519841180" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1519841180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15198414d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1519841658"/>
        <function-ref name="toggle" scoped="" ref="0x7f15198417e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519841968"/>
        <function-ref name="get" scoped="" ref="0x7f1519841af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519841c78"/>
        <function-ref name="set" scoped="" ref="0x7f1519841e00"/>
        <function-ref name="clr" scoped="" ref="0x7f1519840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15198081b8" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15198081b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1519a976f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1519a976f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519808508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f15198087e8" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f15198087e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1519808b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1519808cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1519808e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1519807020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f15198071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f15197e8560" loc="60:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f15197e8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15197e88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f151998fe20" loc="57:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f151998fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15197e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f15197e9e68" loc="59:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f15197e9e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15197e81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f15197e9490" loc="58:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f15197e9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15197e97e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f15197e9968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f15197e9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1519a8b728" loc="48:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f1519a8b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1519a8ba78"/>
        <function-ref name="runTask" scoped="" ref="0x7f1519a8bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1519a94be8" loc="47:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1519a94be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519a96020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1519a961a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1519a96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f15199d5b08" loc="56:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f15199d5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15199d5e58"/>
        <function-ref name="runTask" scoped="" ref="0x7f15199d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f15199d2020" loc="57:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f15199d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f15199d2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f15199d6c00" loc="55:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f15199d6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15199d5020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f15199d51a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f15199d5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f15199b37b8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15199b37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f15199b3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1519a8add0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f1519a8add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f15199b7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f15199b4240" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f15199b4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f15199b4590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f15197db020" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f15197db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15197db370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7f15197d1298" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7f15197d1298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7f15197d1e18"/>
        <function-ref name="global2Local" scoped="" ref="0x7f15197dad30"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7f15197da310"/>
        <function-ref name="local2Global" scoped="" ref="0x7f15197da820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7f15197cbe00" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f15197cbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7f15197d01a8"/>
        <function-ref name="getRootID" scoped="" ref="0x7f15197d0330"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7f15197d04b8"/>
        <function-ref name="getOffset" scoped="" ref="0x7f15197d0640"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7f15197d07c8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7f15197d0950"/>
        <function-ref name="getSkew" scoped="" ref="0x7f15197d0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15197db628" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15197db628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15197db978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7f15197c8ca8" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7f15197c8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15197ca020"/>
        <function-ref name="getMode" scoped="" ref="0x7f15197ca1a8"/>
        <function-ref name="setMode" scoped="" ref="0x7f15197ca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7f15197c59d8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7f15197c59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7f15197c5d28"/>
        <function-ref name="msg_sent" scoped="" ref="0x7f15197c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15197d6438" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f15197d6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15197d6788"/>
        <function-ref name="stop" scoped="" ref="0x7f15197d6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f15196af7a0" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f15196af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15196afaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7f15196b5848" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7f15196b5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7f15196b3410"/>
        <function-ref name="global2Local" scoped="" ref="0x7f15196b22e8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7f15196b3898"/>
        <function-ref name="local2Global" scoped="" ref="0x7f15196b3da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f15196a05c8" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f15196a05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151969f190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f15196afd78" loc="53:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f15196afd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15196ae0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15196ae278"/>
        <function-ref name="start" scoped="" ref="0x7f15196ae400"/>
        <function-ref name="stop" scoped="" ref="0x7f15196ae588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f15196aea20" loc="54:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15196aea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15196ad770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15196aa020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15196acb00"/>
        <function-ref name="cancel" scoped="" ref="0x7f15196ac020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15196ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f15196a5d00" loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f15196a5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f15196a40a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f15196a4228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7f15196b2748" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f15196b2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7f15196b2a98"/>
        <function-ref name="getRootID" scoped="" ref="0x7f15196b2c20"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7f15196b2da8"/>
        <function-ref name="getOffset" scoped="" ref="0x7f15196b1020"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7f15196b11a8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7f15196b1330"/>
        <function-ref name="getSkew" scoped="" ref="0x7f15196b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15196b6910" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15196b6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15196b6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f15196aa5e8" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15196aa5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15196aa938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7f15196b1700" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7f15196b1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15196b1a50"/>
        <function-ref name="getMode" scoped="" ref="0x7f15196b1bd8"/>
        <function-ref name="setMode" scoped="" ref="0x7f15196b1d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMsg" ref="0x7f151969f5e8" loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMsg" scoped="" ref="0x7f151969f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151969f938"/>
        <function-ref name="runTask" scoped="" ref="0x7f151969fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processMsg" ref="0x7f151969fd88" loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processMsg" scoped="" ref="0x7f151969fd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151969e170"/>
        <function-ref name="runTask" scoped="" ref="0x7f151969e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15196a4470" loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15196a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15196a48c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15196a4a48"/>
        <function-ref name="led1On" scoped="" ref="0x7f15196a4bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15196a4d58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15196a3020"/>
        <function-ref name="get" scoped="" ref="0x7f15196a31a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15196a3330"/>
        <function-ref name="led2On" scoped="" ref="0x7f15196a3950"/>
        <function-ref name="set" scoped="" ref="0x7f15196a3640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15196a34b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f15196a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7f15196af020" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7f15196af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7f15196af370"/>
        <function-ref name="msg_sent" scoped="" ref="0x7f15196af4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15196b5020" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f15196b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15196b5370"/>
        <function-ref name="stop" scoped="" ref="0x7f15196b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15196aac88" loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15196aac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15196a5088"/>
        <function-ref name="fired" scoped="" ref="0x7f15196a85e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15196a7470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15196a7020"/>
        <function-ref name="getdt" scoped="" ref="0x7f15196a5928"/>
        <function-ref name="gett0" scoped="" ref="0x7f15196a54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15196a8a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15196a9820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15196a7a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15196a9cc0"/>
        <function-ref name="stop" scoped="" ref="0x7f15196a8198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncPacket" ref="0x7f15196a3da8" loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket" scoped="" ref="0x7f15196a3da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f15196a2b00"/>
        <function-ref name="eventTime" scoped="" ref="0x7f15196a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f151969a6f0" loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f151969a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151969aa40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151969abc8"/>
        <function-ref name="start" scoped="" ref="0x7f151969ad50"/>
        <function-ref name="stop" scoped="" ref="0x7f1519697020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7f15196565c0" loc="71:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f15196565c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f1519655540"/>
        <function-ref name="eventTime" scoped="" ref="0x7f1519655a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f151968b740" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f151968b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151968ba90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151968bc18"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151968bda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519694020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15196941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7f151965a610" loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f151965a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519659370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519658b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519658700"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519659bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15196580f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1519696348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1519696348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519696698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f151966e418" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f151966e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f151966e768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f151966e8f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f151966ea78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f151966ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1519674260" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1519674260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1519671700"/>
        <function-ref name="clear" scoped="" ref="0x7f1519671de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1519671020"/>
        <function-ref name="set" scoped="" ref="0x7f15196674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15196977a0" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15196977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519697af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1519676de0" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1519676de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151967a170"/>
        <function-ref name="noAck" scoped="" ref="0x7f151967a2f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151967a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7f1519661498" loc="67:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519661498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15196601e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151965fa78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151965f628"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519660a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151965f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f151967be08" loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151967be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15196931a8"/>
        <function-ref name="source" scoped="" ref="0x7f1519693330"/>
        <function-ref name="address" scoped="" ref="0x7f15196934b8"/>
        <function-ref name="destination" scoped="" ref="0x7f1519693640"/>
        <function-ref name="setSource" scoped="" ref="0x7f15196937c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1519693950"/>
        <function-ref name="type" scoped="" ref="0x7f1519693ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f1519693c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1519693de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f151968c020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151968c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7f151965d4f8" loc="68:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f151965d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f151965c370"/>
        <function-ref name="eventTime" scoped="" ref="0x7f151965c848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1519665130" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1519665130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1519664588"/>
        <function-ref name="clear" scoped="" ref="0x7f1519664c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f1519665e80"/>
        <function-ref name="set" scoped="" ref="0x7f1519663380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1519650b80" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1519650b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151964f020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151964f1a8"/>
        <function-ref name="start" scoped="" ref="0x7f151964f330"/>
        <function-ref name="stop" scoped="" ref="0x7f151964f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7f151963d020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f151963d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f151963dd38"/>
        <function-ref name="eventTime" scoped="" ref="0x7f151963c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f151964edf0" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f151964edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151964d170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151964d2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151964d480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151964d608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151964d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f151964e818" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f151964e818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151964eb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f151964baf8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f151964baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f151964be48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f151964a020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f151964a1a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f151964a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7f1519641020" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f1519641020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519641d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151963f548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151963f0f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15196405d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1519640aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f151964fc38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f151964fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151964e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f151964b1a0" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151964b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151964b4f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f151964b678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151964b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7f1519648020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519648d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519646548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15196460f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15196475d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1519647aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f151964da30" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151964da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f151964dd80"/>
        <function-ref name="source" scoped="" ref="0x7f151964c020"/>
        <function-ref name="address" scoped="" ref="0x7f151964c1a8"/>
        <function-ref name="destination" scoped="" ref="0x7f151964c330"/>
        <function-ref name="setSource" scoped="" ref="0x7f151964c4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f151964c640"/>
        <function-ref name="type" scoped="" ref="0x7f151964c7c8"/>
        <function-ref name="setType" scoped="" ref="0x7f151964c950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f151964cad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f151964cc60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151964cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7f1519644020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f1519644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f1519644d38"/>
        <function-ref name="eventTime" scoped="" ref="0x7f1519643238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f151961b358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f151961b358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151961b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f151961a320" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f151961a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151961a670"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151961a7f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151961a980"/>
        <function-ref name="cancel" scoped="" ref="0x7f151961ab08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151961ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7f151962be30" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7f151962be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f151962abb0"/>
        <function-ref name="eventTime" scoped="" ref="0x7f15196290c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7f1519633020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7f1519633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519633d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519630548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15196300f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15196325d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1519632aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1519630b50" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1519630b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151962f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151962f1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151962f330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151962f4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151962f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f15196275e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f15196275e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519627938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1519626020" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f1519626020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519626370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15196264f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519626680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519626808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1519626990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x7f1519619510" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1519619510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1519618a88"/>
        <function-ref name="clear" scoped="" ref="0x7f1519616190"/>
        <function-ref name="isValid" scoped="" ref="0x7f15196183a8"/>
        <function-ref name="set" scoped="" ref="0x7f1519616870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f1519626ce0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f1519626ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15196240a0"/>
        <function-ref name="source" scoped="" ref="0x7f1519624228"/>
        <function-ref name="address" scoped="" ref="0x7f15196243b0"/>
        <function-ref name="destination" scoped="" ref="0x7f1519624538"/>
        <function-ref name="setSource" scoped="" ref="0x7f15196246c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1519624848"/>
        <function-ref name="type" scoped="" ref="0x7f15196249d0"/>
        <function-ref name="setType" scoped="" ref="0x7f1519624b58"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1519624ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1519624e68"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151961b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1519629a58" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1519629a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519629da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1519609850" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1519609850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1519609ba0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1519609d28"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519610020"/>
        <function-ref name="set" scoped="" ref="0x7f15196101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f1519610668" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1519610668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151960f220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1519608898" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1519608898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1519608be8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1519608d70"/>
        <function-ref name="led1On" scoped="" ref="0x7f1519607020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15196071a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1519607330"/>
        <function-ref name="get" scoped="" ref="0x7f15196074b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1519607640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1519607c60"/>
        <function-ref name="set" scoped="" ref="0x7f15196077c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1519607950"/>
        <function-ref name="led2On" scoped="" ref="0x7f1519607ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f151960f870" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f151960f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1519608490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7f1519639918" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7f1519639918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519637660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519635020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519636b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519636020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15196364f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f151962f8e0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151962f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f151962fc30"/>
        <function-ref name="source" scoped="" ref="0x7f151962fdb8"/>
        <function-ref name="address" scoped="" ref="0x7f151962e020"/>
        <function-ref name="destination" scoped="" ref="0x7f151962e1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f151962e330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f151962e4b8"/>
        <function-ref name="type" scoped="" ref="0x7f151962e640"/>
        <function-ref name="setType" scoped="" ref="0x7f151962e7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f151962e950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f151962ead8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151962ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7f151962d368" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7f151962d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7f151962b0c0"/>
        <function-ref name="eventTime" scoped="" ref="0x7f151962b598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f151961b9d0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f151961b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151961be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x7f1519615478" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1519615478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1519614900"/>
        <function-ref name="clear" scoped="" ref="0x7f1519612020"/>
        <function-ref name="isValid" scoped="" ref="0x7f1519614220"/>
        <function-ref name="set" scoped="" ref="0x7f1519612700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f151959a818" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f151959a818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151959ab68"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151959acf0"/>
        <function-ref name="start" scoped="" ref="0x7f151959ae78"/>
        <function-ref name="stop" scoped="" ref="0x7f1519599030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f151957cb48" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f151957cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1519584020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f15195841a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1519584330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f15195844b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f1519584640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15195847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f151956f658" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f151956f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f151956faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f151958f0c0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f151958f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151958f410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151958f598"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151958f720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151958f8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151958fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15195997a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f15195997a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519599af8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519599c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519599e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519598020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15195981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1519596498" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1519596498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15195967e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1519587e18" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1519587e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f151958e1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f151958e330"/>
        <function-ref name="getRssi" scoped="" ref="0x7f151958e4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f151958e640"/>
        <function-ref name="getPower" scoped="" ref="0x7f151958e7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f151958e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1519584ac0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519584ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1519584e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f151957b020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f151957b1a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f151957b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1519598928" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1519598928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519598c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f151958ec78" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151958ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151958d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f151958d1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151958d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1519573a98" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f1519573a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1519573de8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f151957a020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f151957a1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f151957a330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f151957a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1519596a88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1519596a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1519596dd8"/>
        <function-ref name="source" scoped="" ref="0x7f1519590020"/>
        <function-ref name="address" scoped="" ref="0x7f15195901a8"/>
        <function-ref name="destination" scoped="" ref="0x7f1519590330"/>
        <function-ref name="setSource" scoped="" ref="0x7f15195904b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1519590640"/>
        <function-ref name="type" scoped="" ref="0x7f15195907c8"/>
        <function-ref name="setType" scoped="" ref="0x7f1519590950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1519590ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1519590c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1519590de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1519583ca8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1519583ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1519585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f151956d3a0" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f151956d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151956d6f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151956d878"/>
        <function-ref name="start" scoped="" ref="0x7f151956da00"/>
        <function-ref name="stop" scoped="" ref="0x7f151956db88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1519559020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1519559020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1519559370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1519558128" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f1519558128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1519558478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1519558600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1519558788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1519558910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1519558a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f151955b7e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f151955b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f151955bb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f151955bcc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f151955be48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f151955a020"/>
        <function-ref name="getPower" scoped="" ref="0x7f151955a1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f151955a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f151955d4c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f151955d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151955d818"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151955d9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151955db28"/>
        <function-ref name="cancel" scoped="" ref="0x7f151955dcb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151955de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1519559668" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1519559668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15195599b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1519559b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1519559cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1519559e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1519566020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f1519566020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519566370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f151955a658" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151955a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151955a9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f151955ab30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151955acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151956b4f8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151956b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151956b848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151956b9d0"/>
        <function-ref name="request" scoped="" ref="0x7f151956bb58"/>
        <function-ref name="granted" scoped="" ref="0x7f151956bce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151956be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f151955c330" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f151955c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151955c680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151955c808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151955c990"/>
        <function-ref name="cancel" scoped="" ref="0x7f151955cb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151955cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f15195666a0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f15195666a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15195669f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1519566b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1519566d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151955d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151955d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f151955b1d0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f151955b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151955b520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1519557770" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1519557770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1519557ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1519557c48"/>
        <function-ref name="start" scoped="" ref="0x7f1519557dd0"/>
        <function-ref name="stop" scoped="" ref="0x7f1519554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1519553678" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1519553678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f15195539c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1519553b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1519553cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1519553e60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1519552020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15195521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15195542d8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15195542d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1519554628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15195547b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1519554938"/>
        <function-ref name="cancel" scoped="" ref="0x7f1519554ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1519554c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1519553020" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1519553020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1519553370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f151954f140" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f151954f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151954f490"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151954f618"/>
        <function-ref name="start" scoped="" ref="0x7f151954f7a0"/>
        <function-ref name="stop" scoped="" ref="0x7f151954f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f151954e948" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f151954e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f151954ec98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f151954ee20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f151954d020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f151954d1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f151954d330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f151954d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1519544208" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f1519544208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1519544558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f15195446e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1519544868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f15195449f0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1519544b78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1519544d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f151953ade0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f151953ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1519539170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f15195392f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1519539480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1519539608"/>
        <function-ref name="getPower" scoped="" ref="0x7f1519539790"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1519539918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f151953b4b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f151953b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151953b808"/>
        <function-ref name="cancel" scoped="" ref="0x7f151953b990"/>
        <function-ref name="modify" scoped="" ref="0x7f151953bb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151953bca0"/>
        <function-ref name="resend" scoped="" ref="0x7f151953be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f151954fbe0" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f151954fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151954e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151954e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151954e330"/>
        <function-ref name="cancel" scoped="" ref="0x7f151954e4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151954e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1519542020" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f1519542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1519542370"/>
        <function-ref name="rand32" scoped="" ref="0x7f15195424f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f151954bce8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f151954bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f151954a0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f151954a228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1519538020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1519538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1519538370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f15195384f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1519538680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f1519545a78" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f1519545a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1519545dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7f151954b020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f151954b1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7f151954b330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f151954b4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f151954b640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f151954b7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f151954b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15195427b0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15195427b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1519542b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1519542c88"/>
        <function-ref name="led1On" scoped="" ref="0x7f1519542e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f151953a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f151953a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f151953a330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f151953a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f151953aad8"/>
        <function-ref name="set" scoped="" ref="0x7f151953a640"/>
        <function-ref name="led0On" scoped="" ref="0x7f151953a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f151953a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f151954d798" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151954d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151954dae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151954dc70"/>
        <function-ref name="request" scoped="" ref="0x7f151954ddf8"/>
        <function-ref name="granted" scoped="" ref="0x7f151954c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151954c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f151952d540" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f151952d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f151952d990"/>
        <function-ref name="toIdle" scoped="" ref="0x7f151952db18"/>
        <function-ref name="isState" scoped="" ref="0x7f151952dca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f151952de28"/>
        <function-ref name="requestState" scoped="" ref="0x7f1519537020"/>
        <function-ref name="forceState" scoped="" ref="0x7f15195371a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f1519529b80" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f1519529b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1519528020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15195281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f151952acf8" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f151952acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15195290a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1519529228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f151952ce68" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f151952ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151952a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f151952a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f15194d5af8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f15194d5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f15194d5e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f15194e1020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f15194e11a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f15194e1330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f15194e14b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15194e1640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15194e17c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f15194e1950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f15194e1ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f15194e1c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f15194e1de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15194e0020"/>
        <function-ref name="sync" scoped="" ref="0x7f15194e01a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15194e0430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f15194e05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f15194cfd28" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f15194cfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194d28b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15194d2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f15194e08b0" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f15194e08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f15194e0c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f15194e0d88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f15194d3020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f15194d31a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f15194d3330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f15194d34b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f15194d3640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f15194d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15194e5e00" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15194e5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15194e21a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15194e2330"/>
        <function-ref name="request" scoped="" ref="0x7f15194e24b8"/>
        <function-ref name="granted" scoped="" ref="0x7f15194e2640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15194e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f15194ca328" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f15194ca328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f15194ca678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f15194ca800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f15194ca988"/>
        <function-ref name="syncDone" scoped="" ref="0x7f15194cab10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f15194cac98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15194cae20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15194c9020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f15194c91a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f15194c9330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f15194c94b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f15194c9640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15194c97c8"/>
        <function-ref name="sync" scoped="" ref="0x7f15194c9950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15194c9bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f15194c9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f15194a5c48" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f15194a5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a4020"/>
        <function-ref name="write" scoped="" ref="0x7f15194a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f15194c37f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f15194c37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f15194c3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f15194c4060" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f15194c4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15194bb690"/>
        <function-ref name="fired" scoped="" ref="0x7f15194bc738"/>
        <function-ref name="startAt" scoped="" ref="0x7f15194bb088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15194bcbc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15194bbb18"/>
        <function-ref name="start" scoped="" ref="0x7f15194c4db0"/>
        <function-ref name="stop" scoped="" ref="0x7f15194bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f15194a7ab8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15194a7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a7e08"/>
        <function-ref name="write" scoped="" ref="0x7f15194a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f15194b91b0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f15194b91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15194b9500"/>
        <function-ref name="isInput" scoped="" ref="0x7f15194b9688"/>
        <function-ref name="toggle" scoped="" ref="0x7f15194b9810"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15194b9998"/>
        <function-ref name="get" scoped="" ref="0x7f15194b9b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15194b9ca8"/>
        <function-ref name="set" scoped="" ref="0x7f15194b9e30"/>
        <function-ref name="clr" scoped="" ref="0x7f15194b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f15194c74d0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f15194c74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194c6088"/>
        <function-ref name="readDone" scoped="" ref="0x7f15194c64d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f15194933f0" loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f15194933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1519493740"/>
        <function-ref name="runTask" scoped="" ref="0x7f15194938c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f15194a4530" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f15194a4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a4880"/>
        <function-ref name="write" scoped="" ref="0x7f15194a4a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f15194a4da0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f15194a4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a3170"/>
        <function-ref name="write" scoped="" ref="0x7f15194a32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f15194a8990" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f15194a8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a8ce0"/>
        <function-ref name="write" scoped="" ref="0x7f15194a8e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f15194ad1b0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15194ad1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f15194ad500"/>
        <function-ref name="changed" scoped="" ref="0x7f15194ad688"/>
        <function-ref name="amGroup" scoped="" ref="0x7f15194ad810"/>
        <function-ref name="setAddress" scoped="" ref="0x7f15194ad998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f15194ba020" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f15194ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15194ba370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15194ba4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15194ba680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15194ba808"/>
        <function-ref name="get" scoped="" ref="0x7f15194ba990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15194bab18"/>
        <function-ref name="set" scoped="" ref="0x7f15194baca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15194bae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f15194a23c0" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15194a23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15194a2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f15194b8378" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f15194b8378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15194b86c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15194b8850"/>
        <function-ref name="toggle" scoped="" ref="0x7f15194b89d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15194b8b60"/>
        <function-ref name="get" scoped="" ref="0x7f15194b8ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15194b8e70"/>
        <function-ref name="set" scoped="" ref="0x7f15194b7020"/>
        <function-ref name="clr" scoped="" ref="0x7f15194b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15194cc020" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15194cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15194cc370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f15194a53d0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15194a53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a5720"/>
        <function-ref name="write" scoped="" ref="0x7f15194a58a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f15194a2ca0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f15194a2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f151949f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f151949f3b0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f151949f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151949f700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151949f888"/>
        <function-ref name="request" scoped="" ref="0x7f151949fa10"/>
        <function-ref name="granted" scoped="" ref="0x7f151949fb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151949fd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f151949ee50" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f151949ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151949d1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151949d370"/>
        <function-ref name="request" scoped="" ref="0x7f151949d4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f151949d680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151949d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f15194c8080" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f15194c8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f15194c83d0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f15194c8558"/>
        <function-ref name="rxOn" scoped="" ref="0x7f15194c86e0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f15194c8868"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f15194c89f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f15194c8b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f15194c8d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f15194c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f15194a7230" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f15194a7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a7580"/>
        <function-ref name="write" scoped="" ref="0x7f15194a7708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f15194a8120" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f15194a8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194a8470"/>
        <function-ref name="write" scoped="" ref="0x7f15194a85f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f15194a0518" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f15194a0518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15194a0868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f151949dac0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f151949dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f151949de10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f151949c020"/>
        <function-ref name="led1On" scoped="" ref="0x7f151949c1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f151949c330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f151949c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f151949c640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f151949c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f151949cde8"/>
        <function-ref name="set" scoped="" ref="0x7f151949c950"/>
        <function-ref name="led0On" scoped="" ref="0x7f151949cad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f151949cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1519494598" loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f1519494598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15194948e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f1519494a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15194cc650" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15194cc650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15194cc9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15194ccb28"/>
        <function-ref name="request" scoped="" ref="0x7f15194cccb0"/>
        <function-ref name="granted" scoped="" ref="0x7f15194cce38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15194ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f15194b5a60" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f15194b5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194b5db0"/>
        <function-ref name="write" scoped="" ref="0x7f15194a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f15194b5128" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f15194b5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15194b5578"/>
        <function-ref name="write" scoped="" ref="0x7f15194b5700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f15194b2b78" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f15194b2b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15194b6020"/>
        <function-ref name="disable" scoped="" ref="0x7f15194b61a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15194b6330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15194b64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f151949e140" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f151949e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151949e490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151949e618"/>
        <function-ref name="request" scoped="" ref="0x7f151949e7a0"/>
        <function-ref name="granted" scoped="" ref="0x7f151949e928"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151949eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f15194a0bf0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f15194a0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15194a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f151941f3c0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f151941f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151941f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f151941fd38" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f151941fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f151941b410"/>
        <function-ref name="fired" scoped="" ref="0x7f151941d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f151941ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f151941d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f151941b898"/>
        <function-ref name="start" scoped="" ref="0x7f151941eac0"/>
        <function-ref name="stop" scoped="" ref="0x7f151941d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15194183b8" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f15194183b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15191d7ab0"/>
        <function-ref name="fired" scoped="" ref="0x7f15191daa90"/>
        <function-ref name="startAt" scoped="" ref="0x7f15191d74a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15191d7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15191d5020"/>
        <function-ref name="start" scoped="" ref="0x7f15191da130"/>
        <function-ref name="stop" scoped="" ref="0x7f15191da608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15191d5438" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15191d5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15191d5788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1517e9a1a8" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1517e9a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517e98918"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e99980"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517e98310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517e99e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517e98da0"/>
        <function-ref name="start" scoped="" ref="0x7f1517e99020"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e994f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1517e94670" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1517e94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517e92cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e93d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517e926b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517e92230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517e91190"/>
        <function-ref name="start" scoped="" ref="0x7f1517e933f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e938c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15193f30c0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193f30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15193f3410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f15193f3598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15193f3720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f15193f38a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f15193f3a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15193f3bb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f15193f3d40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f15193f2020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f15193f21a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f15193f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15193e3b68" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f15193e3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f15193e1db8"/>
        <function-ref name="test" scoped="" ref="0x7f15193e14a8"/>
        <function-ref name="get" scoped="" ref="0x7f15193ea728"/>
        <function-ref name="captured" scoped="" ref="0x7f15193e90c0"/>
        <function-ref name="reset" scoped="" ref="0x7f15193e9598"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193e1930"/>
        <function-ref name="set" scoped="" ref="0x7f15193eabb0"/>
        <function-ref name="start" scoped="" ref="0x7f15193e9a20"/>
        <function-ref name="stop" scoped="" ref="0x7f15193e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15193df020" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f15193df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15193d77a8"/>
        <function-ref name="fired" scoped="" ref="0x7f15193de560"/>
        <function-ref name="get" scoped="" ref="0x7f15193dfba0"/>
        <function-ref name="reset" scoped="" ref="0x7f15193de9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193d7c30"/>
        <function-ref name="set" scoped="" ref="0x7f15193de088"/>
        <function-ref name="start" scoped="" ref="0x7f15193dee70"/>
        <function-ref name="stop" scoped="" ref="0x7f15193d7320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1519401020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1519401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15193f50f8"/>
        <function-ref name="test" scoped="" ref="0x7f15193f77a8"/>
        <function-ref name="get" scoped="" ref="0x7f1519401ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f15193f5580"/>
        <function-ref name="getScale" scoped="" ref="0x7f15193f5a58"/>
        <function-ref name="reset" scoped="" ref="0x7f15194009e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f1519400560"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193f7c30"/>
        <function-ref name="set" scoped="" ref="0x7f1519400088"/>
        <function-ref name="start" scoped="" ref="0x7f1519400e70"/>
        <function-ref name="stop" scoped="" ref="0x7f15193f7320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15193c8950" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193c8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f15193c8ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15193c8e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15193cd020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f15193cd1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15193cd330"/>
        <function-ref name="setControl" scoped="" ref="0x7f15193cd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f15193be470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f15193be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f15193be7c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f15193be948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f15193bead0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f15193bec58"/>
        <function-ref name="getAssr" scoped="" ref="0x7f15193bede0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f15193c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15193cd980" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f15193cd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15193c5270"/>
        <function-ref name="fired" scoped="" ref="0x7f15193c6020"/>
        <function-ref name="get" scoped="" ref="0x7f15193c7560"/>
        <function-ref name="reset" scoped="" ref="0x7f15193c64a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193c56f8"/>
        <function-ref name="set" scoped="" ref="0x7f15193c79e8"/>
        <function-ref name="start" scoped="" ref="0x7f15193c6930"/>
        <function-ref name="stop" scoped="" ref="0x7f15193c6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15193d6d90" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15193d6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15193d0e58"/>
        <function-ref name="test" scoped="" ref="0x7f15193d0548"/>
        <function-ref name="get" scoped="" ref="0x7f15193d3940"/>
        <function-ref name="setScale" scoped="" ref="0x7f15193cf310"/>
        <function-ref name="getScale" scoped="" ref="0x7f15193cf7e8"/>
        <function-ref name="reset" scoped="" ref="0x7f15193d1778"/>
        <function-ref name="overflow" scoped="" ref="0x7f15193d12f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193d09d0"/>
        <function-ref name="set" scoped="" ref="0x7f15193d3dc8"/>
        <function-ref name="start" scoped="" ref="0x7f15193d1c00"/>
        <function-ref name="stop" scoped="" ref="0x7f15193d00c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15193b7558" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15193b7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f15193b78a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15193b7a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15193b7bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f15193b7d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15193b5020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15193b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f15193b2790" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15193b2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f15193b2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f15193b0020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f15193b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f15193b0370"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f15193b04f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f15193b0680"/>
        <function-ref name="countBusy" scoped="" ref="0x7f15193b0808"/>
        <function-ref name="getAssr" scoped="" ref="0x7f15193b0990"/>
        <function-ref name="setAssr" scoped="" ref="0x7f15193b0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15193b5670" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f15193b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15193b3e20"/>
        <function-ref name="fired" scoped="" ref="0x7f15193b4b80"/>
        <function-ref name="get" scoped="" ref="0x7f15193b4220"/>
        <function-ref name="reset" scoped="" ref="0x7f15193b3088"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193b2310"/>
        <function-ref name="set" scoped="" ref="0x7f15193b46a8"/>
        <function-ref name="start" scoped="" ref="0x7f15193b3510"/>
        <function-ref name="stop" scoped="" ref="0x7f15193b3998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15193bc400" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15193bc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15193b8580"/>
        <function-ref name="test" scoped="" ref="0x7f15193b9c20"/>
        <function-ref name="get" scoped="" ref="0x7f15193bb020"/>
        <function-ref name="setScale" scoped="" ref="0x7f15193b8a08"/>
        <function-ref name="getScale" scoped="" ref="0x7f15193b7020"/>
        <function-ref name="reset" scoped="" ref="0x7f15193bbe08"/>
        <function-ref name="overflow" scoped="" ref="0x7f15193bb980"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193b80f8"/>
        <function-ref name="set" scoped="" ref="0x7f15193bb4a8"/>
        <function-ref name="start" scoped="" ref="0x7f15193b9310"/>
        <function-ref name="stop" scoped="" ref="0x7f15193b9798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f1519351568" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1519351568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15193518b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f1519351a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1519351bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f1519351d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1519350020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15193501a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f1519350330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f15193504b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f1519350640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f15193507c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f151933f020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f151933f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f151933f370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f151933f4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f151933f680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f151933f808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f151933f990"/>
        <function-ref name="setControl" scoped="" ref="0x7f151933fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f151934b540" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f151934b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1519349db8"/>
        <function-ref name="fired" scoped="" ref="0x7f151934aa58"/>
        <function-ref name="get" scoped="" ref="0x7f151934a0f8"/>
        <function-ref name="reset" scoped="" ref="0x7f1519349020"/>
        <function-ref name="isOn" scoped="" ref="0x7f1519347270"/>
        <function-ref name="set" scoped="" ref="0x7f151934a580"/>
        <function-ref name="start" scoped="" ref="0x7f15193494a8"/>
        <function-ref name="stop" scoped="" ref="0x7f1519349930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1519350ca0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f1519350ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f151934de20"/>
        <function-ref name="test" scoped="" ref="0x7f151934d510"/>
        <function-ref name="get" scoped="" ref="0x7f151934f858"/>
        <function-ref name="captured" scoped="" ref="0x7f151934e238"/>
        <function-ref name="reset" scoped="" ref="0x7f151934e710"/>
        <function-ref name="isOn" scoped="" ref="0x7f151934d998"/>
        <function-ref name="set" scoped="" ref="0x7f151934fce0"/>
        <function-ref name="start" scoped="" ref="0x7f151934eb98"/>
        <function-ref name="stop" scoped="" ref="0x7f151934d088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f15193478e8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f15193478e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1519344088"/>
        <function-ref name="fired" scoped="" ref="0x7f1519346df0"/>
        <function-ref name="get" scoped="" ref="0x7f1519346490"/>
        <function-ref name="reset" scoped="" ref="0x7f15193452b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1519344510"/>
        <function-ref name="set" scoped="" ref="0x7f1519346918"/>
        <function-ref name="start" scoped="" ref="0x7f1519345738"/>
        <function-ref name="stop" scoped="" ref="0x7f1519345bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f1519344b88" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f1519344b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15193404a8"/>
        <function-ref name="fired" scoped="" ref="0x7f15193410f8"/>
        <function-ref name="get" scoped="" ref="0x7f1519342760"/>
        <function-ref name="reset" scoped="" ref="0x7f1519341580"/>
        <function-ref name="isOn" scoped="" ref="0x7f1519340930"/>
        <function-ref name="set" scoped="" ref="0x7f1519342be8"/>
        <function-ref name="start" scoped="" ref="0x7f1519341a08"/>
        <function-ref name="stop" scoped="" ref="0x7f1519340020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1519357490" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1519357490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1519353580"/>
        <function-ref name="test" scoped="" ref="0x7f1519354c30"/>
        <function-ref name="get" scoped="" ref="0x7f1519355088"/>
        <function-ref name="setScale" scoped="" ref="0x7f1519353a08"/>
        <function-ref name="getScale" scoped="" ref="0x7f1519351020"/>
        <function-ref name="reset" scoped="" ref="0x7f1519355e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f15193559e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f15193530f8"/>
        <function-ref name="set" scoped="" ref="0x7f1519355510"/>
        <function-ref name="start" scoped="" ref="0x7f1519354320"/>
        <function-ref name="stop" scoped="" ref="0x7f15193547a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15192b0190" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15192b0190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1519a97388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1519a97388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15192b04e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15192b08b0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15192b08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15192a1998"/>
        <function-ref name="test" scoped="" ref="0x7f15192a1088"/>
        <function-ref name="get" scoped="" ref="0x7f15192a4490"/>
        <function-ref name="setScale" scoped="" ref="0x7f15192a1e20"/>
        <function-ref name="getScale" scoped="" ref="0x7f15192a0350"/>
        <function-ref name="reset" scoped="" ref="0x7f15192a32b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15192a4df0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15192a1510"/>
        <function-ref name="set" scoped="" ref="0x7f15192a4918"/>
        <function-ref name="start" scoped="" ref="0x7f15192a3738"/>
        <function-ref name="stop" scoped="" ref="0x7f15192a3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1517e7f9d8" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1517e7f9d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f1519a97020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f1519a97020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517e79088"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e7a0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517e7aa08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517e7a580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517e79510"/>
        <function-ref name="start" scoped="" ref="0x7f1517e7e768"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e7ec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f1517e73a80" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f1517e73a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1517e70270"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e71020"/>
        <function-ref name="get" scoped="" ref="0x7f1517e72658"/>
        <function-ref name="reset" scoped="" ref="0x7f1517e714a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f1517e706f8"/>
        <function-ref name="set" scoped="" ref="0x7f1517e72ae0"/>
        <function-ref name="start" scoped="" ref="0x7f1517e71930"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e71db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f1517e79a30" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f1517e79a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1517e75b80"/>
        <function-ref name="test" scoped="" ref="0x7f1517e75270"/>
        <function-ref name="get" scoped="" ref="0x7f1517e775d8"/>
        <function-ref name="setScale" scoped="" ref="0x7f1517e73088"/>
        <function-ref name="getScale" scoped="" ref="0x7f1517e73560"/>
        <function-ref name="reset" scoped="" ref="0x7f1517e764a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f1517e76020"/>
        <function-ref name="isOn" scoped="" ref="0x7f1517e756f8"/>
        <function-ref name="set" scoped="" ref="0x7f1517e77a60"/>
        <function-ref name="start" scoped="" ref="0x7f1517e76930"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e76db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f151925fd70" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f151925fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1519263af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15192624a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1519262020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1519262930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f151925dad0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f151925dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151925a860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15192581f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f151925ace8"/>
        <function-ref name="overflow" scoped="" ref="0x7f1519258680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1519255a98" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1519255a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1519244828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1519243190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1519244cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1519243618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1519243b78" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1519243b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f151923fc20"/>
        <function-ref name="test" scoped="" ref="0x7f151923f310"/>
        <function-ref name="get" scoped="" ref="0x7f1519242728"/>
        <function-ref name="setScale" scoped="" ref="0x7f151923e0f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f151923e5d0"/>
        <function-ref name="reset" scoped="" ref="0x7f1519240548"/>
        <function-ref name="overflow" scoped="" ref="0x7f15192400c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f151923f798"/>
        <function-ref name="set" scoped="" ref="0x7f1519242bb0"/>
        <function-ref name="start" scoped="" ref="0x7f15192409d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1519240e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f151921eb10" loc="63:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f151921eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151921c8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f151921b230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f151921cd80"/>
        <function-ref name="overflow" scoped="" ref="0x7f151921b6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1519239878" loc="62:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1519239878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151921f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f151921e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f151921fae8"/>
        <function-ref name="overflow" scoped="" ref="0x7f151921e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1517e8e3b8" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1517e8e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517e8cab0"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e8da90"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517e8c4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517e8c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517e8b020"/>
        <function-ref name="start" scoped="" ref="0x7f1517e8d130"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e8d608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1517e88860" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1517e88860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f15199da720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517e85020"/>
        <function-ref name="fired" scoped="" ref="0x7f1517e86020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517e86930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517e864a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517e854a8"/>
        <function-ref name="start" scoped="" ref="0x7f1517e875e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1517e87ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1517e8b648" loc="68:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1517e8b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1517e8a3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1517e8ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1517e8a878"/>
        <function-ref name="overflow" scoped="" ref="0x7f1517e881f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15191d93a0" loc="18:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15191d93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15191d96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f15191d07d0" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f15191d07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191d0b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191d0ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191d0e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191cf020"/>
        <function-ref name="get" scoped="" ref="0x7f15191cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191cf330"/>
        <function-ref name="set" scoped="" ref="0x7f15191cf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f15191cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f15191cf960" loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f15191cf960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191cfcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191cfe38"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191ce1a8"/>
        <function-ref name="get" scoped="" ref="0x7f15191ce330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191ce4b8"/>
        <function-ref name="set" scoped="" ref="0x7f15191ce640"/>
        <function-ref name="clr" scoped="" ref="0x7f15191ce7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f15191ceae0" loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f15191ceae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191cee30"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191cd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191cd330"/>
        <function-ref name="get" scoped="" ref="0x7f15191cd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191cd640"/>
        <function-ref name="set" scoped="" ref="0x7f15191cd7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15191cd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f15191d1638" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f15191d1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191d1988"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191d1b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191d1c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191d1e20"/>
        <function-ref name="get" scoped="" ref="0x7f15191d0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191d01a8"/>
        <function-ref name="set" scoped="" ref="0x7f15191d0330"/>
        <function-ref name="clr" scoped="" ref="0x7f15191d04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f15191ccdf0" loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f15191ccdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191cb170"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191cb2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191cb480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191cb608"/>
        <function-ref name="get" scoped="" ref="0x7f15191cb790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191cb918"/>
        <function-ref name="set" scoped="" ref="0x7f15191cbaa0"/>
        <function-ref name="clr" scoped="" ref="0x7f15191cbc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f15191d2428" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f15191d2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191d2778"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191d2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191d2a88"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191d2c10"/>
        <function-ref name="get" scoped="" ref="0x7f15191d2d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191d1020"/>
        <function-ref name="set" scoped="" ref="0x7f15191d11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15191d1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f15191cdc58" loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f15191cdc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15191cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191cc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15191cc330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15191cc4b8"/>
        <function-ref name="get" scoped="" ref="0x7f15191cc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15191cc7c8"/>
        <function-ref name="set" scoped="" ref="0x7f15191cc950"/>
        <function-ref name="clr" scoped="" ref="0x7f15191ccad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f15191bd3c0" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f15191bd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15191bd710"/>
        <function-ref name="disable" scoped="" ref="0x7f15191bd898"/>
        <function-ref name="captured" scoped="" ref="0x7f15191bda20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15191bdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f15191c2020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f15191c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15191c2370"/>
        <function-ref name="disable" scoped="" ref="0x7f15191c24f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15191c2680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15191c2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f15191c2be8" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f15191c2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15191c1020"/>
        <function-ref name="disable" scoped="" ref="0x7f15191c11a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15191c1330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15191c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15191bb180" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f15191bb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15191bb4d0"/>
        <function-ref name="disable" scoped="" ref="0x7f15191bb658"/>
        <function-ref name="captured" scoped="" ref="0x7f15191bb7e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15191bb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f15191bbd38" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f15191bbd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f15191a8e58"/>
        <function-ref name="test" scoped="" ref="0x7f15191a8548"/>
        <function-ref name="get" scoped="" ref="0x7f15191ab8f0"/>
        <function-ref name="captured" scoped="" ref="0x7f15191a92b0"/>
        <function-ref name="reset" scoped="" ref="0x7f15191a9788"/>
        <function-ref name="isOn" scoped="" ref="0x7f15191a89d0"/>
        <function-ref name="set" scoped="" ref="0x7f15191abd78"/>
        <function-ref name="start" scoped="" ref="0x7f15191a9c10"/>
        <function-ref name="stop" scoped="" ref="0x7f15191a80c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f1519192480" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1519192480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15191927d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1519192958"/>
        <function-ref name="disable" scoped="" ref="0x7f1519192ae0"/>
        <function-ref name="edge" scoped="" ref="0x7f1519192c68"/>
        <function-ref name="enable" scoped="" ref="0x7f1519192df0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1519191020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f15191a59a0" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f15191a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15191a5cf0"/>
        <function-ref name="disable" scoped="" ref="0x7f15191a5e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1519192030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15191921b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f1519188518" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f1519188518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519188868"/>
        <function-ref name="fired" scoped="" ref="0x7f15191889f0"/>
        <function-ref name="disable" scoped="" ref="0x7f1519188b78"/>
        <function-ref name="edge" scoped="" ref="0x7f1519188d00"/>
        <function-ref name="enable" scoped="" ref="0x7f1519187020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15191871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f151918d518" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f151918d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151918d868"/>
        <function-ref name="fired" scoped="" ref="0x7f151918d9f0"/>
        <function-ref name="disable" scoped="" ref="0x7f151918db78"/>
        <function-ref name="edge" scoped="" ref="0x7f151918dd00"/>
        <function-ref name="enable" scoped="" ref="0x7f151918c020"/>
        <function-ref name="getValue" scoped="" ref="0x7f151918c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f151918a518" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f151918a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151918a868"/>
        <function-ref name="fired" scoped="" ref="0x7f151918a9f0"/>
        <function-ref name="disable" scoped="" ref="0x7f151918ab78"/>
        <function-ref name="edge" scoped="" ref="0x7f151918ad00"/>
        <function-ref name="enable" scoped="" ref="0x7f1519189020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15191891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f1519187518" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f1519187518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519187868"/>
        <function-ref name="fired" scoped="" ref="0x7f15191879f0"/>
        <function-ref name="disable" scoped="" ref="0x7f1519187b78"/>
        <function-ref name="edge" scoped="" ref="0x7f1519187d00"/>
        <function-ref name="enable" scoped="" ref="0x7f1519186020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15191861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f151918c518" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f151918c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151918c868"/>
        <function-ref name="fired" scoped="" ref="0x7f151918c9f0"/>
        <function-ref name="disable" scoped="" ref="0x7f151918cb78"/>
        <function-ref name="edge" scoped="" ref="0x7f151918cd00"/>
        <function-ref name="enable" scoped="" ref="0x7f151918b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f151918b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f1519189518" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f1519189518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519189868"/>
        <function-ref name="fired" scoped="" ref="0x7f15191899f0"/>
        <function-ref name="disable" scoped="" ref="0x7f1519189b78"/>
        <function-ref name="edge" scoped="" ref="0x7f1519189d00"/>
        <function-ref name="enable" scoped="" ref="0x7f1519188020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15191881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f1519190550" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f1519190550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15191908a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1519190a28"/>
        <function-ref name="disable" scoped="" ref="0x7f1519190bb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1519190d38"/>
        <function-ref name="enable" scoped="" ref="0x7f151918d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f151918d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f151918b518" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f151918b518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151918b868"/>
        <function-ref name="fired" scoped="" ref="0x7f151918b9f0"/>
        <function-ref name="disable" scoped="" ref="0x7f151918bb78"/>
        <function-ref name="edge" scoped="" ref="0x7f151918bd00"/>
        <function-ref name="enable" scoped="" ref="0x7f151918a020"/>
        <function-ref name="getValue" scoped="" ref="0x7f151918a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f151917f020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f151917f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151917f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f1519180940" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f1519180940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519180c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f1519181020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f1519181020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519181370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f151917f758" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f151917f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151917faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f15191820a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f15191820a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15191823f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f1519181758" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f1519181758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519181aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f1519180208" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f1519180208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519180558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f15191827e0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f15191827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519182b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1519162a70" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1519162a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519162dc0"/>
        <function-ref name="fired" scoped="" ref="0x7f151914f020"/>
        <function-ref name="disable" scoped="" ref="0x7f151914f1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f151914f330"/>
        <function-ref name="enable" scoped="" ref="0x7f151914f4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f151914f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f151914f908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f151914f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151914fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f151914c7a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f151914c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151914caf8"/>
        <function-ref name="fired" scoped="" ref="0x7f151914cc80"/>
        <function-ref name="disable" scoped="" ref="0x7f151914ce08"/>
        <function-ref name="edge" scoped="" ref="0x7f151914b020"/>
        <function-ref name="enable" scoped="" ref="0x7f151914b1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f151914b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f151914b5f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f151914b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151914b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f15191473e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f15191473e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519147730"/>
        <function-ref name="fired" scoped="" ref="0x7f15191478b8"/>
        <function-ref name="disable" scoped="" ref="0x7f1519147a40"/>
        <function-ref name="edge" scoped="" ref="0x7f1519147bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f1519147d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f1519146020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f15191462e8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f15191462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519146638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1519143020" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1519143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519143370"/>
        <function-ref name="fired" scoped="" ref="0x7f15191434f8"/>
        <function-ref name="disable" scoped="" ref="0x7f1519143680"/>
        <function-ref name="edge" scoped="" ref="0x7f1519143808"/>
        <function-ref name="enable" scoped="" ref="0x7f1519143990"/>
        <function-ref name="getValue" scoped="" ref="0x7f1519143b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1519143de0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1519143de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519142170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f151913fcd8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f151913fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151913e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f151913e228"/>
        <function-ref name="disable" scoped="" ref="0x7f151913e3b0"/>
        <function-ref name="edge" scoped="" ref="0x7f151913e538"/>
        <function-ref name="enable" scoped="" ref="0x7f151913e6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f151913e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f151913eb10" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f151913eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151913ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f151913b9d8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f151913b9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151913bd28"/>
        <function-ref name="fired" scoped="" ref="0x7f151913a020"/>
        <function-ref name="disable" scoped="" ref="0x7f151913a1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f151913a330"/>
        <function-ref name="enable" scoped="" ref="0x7f151913a4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f151913a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f151913a908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f151913a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151913ac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1519137970" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1519137970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1519137cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f1519137e48"/>
        <function-ref name="disable" scoped="" ref="0x7f1519136020"/>
        <function-ref name="edge" scoped="" ref="0x7f15191361a8"/>
        <function-ref name="enable" scoped="" ref="0x7f1519136330"/>
        <function-ref name="getValue" scoped="" ref="0x7f15191364b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1519136780" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1519136780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519136ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f15191326a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f15191326a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15191329f8"/>
        <function-ref name="fired" scoped="" ref="0x7f1519132b80"/>
        <function-ref name="disable" scoped="" ref="0x7f1519132d08"/>
        <function-ref name="edge" scoped="" ref="0x7f1519131020"/>
        <function-ref name="enable" scoped="" ref="0x7f15191311a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f1519131330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f15191315f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f15191315f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519131948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f1519125020" loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f1519125020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1519125370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15191254f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1519125680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1519125808"/>
        <function-ref name="get" scoped="" ref="0x7f1519125990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1519125b18"/>
        <function-ref name="set" scoped="" ref="0x7f1519125ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1519125e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1519126420" loc="47:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f1519126420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1519126770"/>
        <function-ref name="disable" scoped="" ref="0x7f15191268f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1519126a80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1519126c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f15191238e0" loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f15191238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1519123c30"/>
        <function-ref name="runTask" scoped="" ref="0x7f1519123db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1518eaac90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518eaac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea93e8"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1518eb4438" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f1518eb4438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1518eaddd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518eaddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eac170"/>
        <function-ref name="write" scoped="" ref="0x7f1518eac2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1518ea67c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518ea67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea6b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1518ea4020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f1518ea4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea4370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1518e9a7c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e9a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9ab10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1518e9c7c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518e9c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9cb10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1518eb26b8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518eb26b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1518e9d7c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e9d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9db10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1518eacd60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f1518eacd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eab0d8"/>
        <function-ref name="write" scoped="" ref="0x7f1518eab260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1518eabcc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518eabcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eaa0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1518eaa228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1518ea1020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f1518ea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea1370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1518ea47c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f1518ea47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea4b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1518eb6e78" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518eb6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518eb51f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518eb5380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518eb5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1518eb0020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518eb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1518eb0638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518eb0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb0a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1518eb0d50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f1518eb0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eaf0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1518e9c020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9c370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1518eb1368" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518eb1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb16b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1518eab528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518eab528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eab878"/>
        <function-ref name="write" scoped="" ref="0x7f1518eaba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1518eac5c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518eac5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eac910"/>
        <function-ref name="write" scoped="" ref="0x7f1518eaca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1518eb5de8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f1518eb5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1518e9a020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9a370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1518e9b020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518e9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9b370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1518ea17c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f1518ea17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea1b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1518e9d020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9d370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1518ea37c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f1518ea37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea3b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1518e99020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e99770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e998f8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e99a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e99c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e99d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1518eb57d0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518eb57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1518ead638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f1518ead638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ead988"/>
        <function-ref name="write" scoped="" ref="0x7f1518eadb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1518eaa4f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518eaa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518eaa840"/>
        <function-ref name="write" scoped="" ref="0x7f1518eaa9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1518ea3020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f1518ea3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea3370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1518ea9838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f1518ea9838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea9b88"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1518eb4a50" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f1518eb4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1518ea6020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518ea6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea6370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518eb6280" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518eb6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518eb65d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518eb6758"/>
        <function-ref name="request" scoped="" ref="0x7f1518eb68e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518eb6a68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518eb6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1518eaf3a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518eaf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eaf6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1518ead020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f1518ead020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518ead370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1518e9f7c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f1518e9f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9fb10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1518e9f020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9f370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1518eb1980" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518eb1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1518ea07c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518ea07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea0b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1518e9b7c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f1518e9b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e9bb10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e9bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1518ea0020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518ea0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea0370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1518eb20a0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518eb20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb23f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1518ea27c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f1518ea27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea2b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1518eb2cd0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f1518eb2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eb10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1518ea2020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f1518ea2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518ea2370"/>
        <function-ref name="write" scoped="" ref="0x7f1518ea24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1518eaf9b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518eaf9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518eafd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1518e980a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e983f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e98578"/>
        <function-ref name="write" scoped="" ref="0x7f1518e98700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e98888"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e98a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f15190e4d48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f15190e4d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15190e30d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15190e3260"/>
        <function-ref name="write" scoped="" ref="0x7f15190e33e8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15190e3570"/>
        <function-ref name="readDone" scoped="" ref="0x7f15190e36f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15190e5e58" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190e5e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15190e41e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15190e4370"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f15190e44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f15190e1020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f15190e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15190e1370"/>
        <function-ref name="write" scoped="" ref="0x7f15190e14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f15190e1d60" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f15190e1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15190e00d8"/>
        <function-ref name="write" scoped="" ref="0x7f15190e0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15190e51c8" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15190e51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15190e5518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15190e56a0"/>
        <function-ref name="request" scoped="" ref="0x7f15190e5828"/>
        <function-ref name="granted" scoped="" ref="0x7f15190e59b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15190e5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f15190e0ad8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f15190e0ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15190e0e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f15190d2020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f15190d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15190d2370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15190d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f15190dbe50" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f15190dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15190d91e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15190d9370"/>
        <function-ref name="write" scoped="" ref="0x7f15190d94f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15190d9680"/>
        <function-ref name="readDone" scoped="" ref="0x7f15190d9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15190dfde8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15190dfde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15190dc170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15190dc2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f15190dc480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f15190d5d08" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f15190d5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f15190d40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f15190d2838" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f15190d2838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15190d2b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15190d2d10"/>
        <function-ref name="isState" scoped="" ref="0x7f15190d1020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15190d11a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f15190d1330"/>
        <function-ref name="forceState" scoped="" ref="0x7f15190d14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f15190d61e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f15190d61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15190d6538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15190d66c0"/>
        <function-ref name="request" scoped="" ref="0x7f15190d6848"/>
        <function-ref name="granted" scoped="" ref="0x7f15190d69d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15190d6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f15190d8040" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f15190d8040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15190d8390"/>
        <function-ref name="write" scoped="" ref="0x7f15190d8518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f15190d8d40" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f15190d8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15190d70d8"/>
        <function-ref name="write" scoped="" ref="0x7f15190d7260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15190d1730" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15190d1730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15190d1a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15190d1c08"/>
        <function-ref name="led1On" scoped="" ref="0x7f15190d1d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15190cb020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15190cb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f15190cb330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15190cb4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15190cbad8"/>
        <function-ref name="set" scoped="" ref="0x7f15190cb640"/>
        <function-ref name="led0On" scoped="" ref="0x7f15190cb7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f15190cb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15190dcc10" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15190dcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15190db020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15190db1a8"/>
        <function-ref name="request" scoped="" ref="0x7f15190db330"/>
        <function-ref name="granted" scoped="" ref="0x7f15190db4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15190db640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f15190c65d0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f15190c65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15190c6920"/>
        <function-ref name="runTask" scoped="" ref="0x7f15190c6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f15190d7a98" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f15190d7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15190d7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f151906f978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f151906f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f151906fcc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f151906fe50"/>
        <function-ref name="isState" scoped="" ref="0x7f151906e020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f151906e1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f151906e330"/>
        <function-ref name="forceState" scoped="" ref="0x7f151906e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f151906a790" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f151906a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f151906aae0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f151906ac68"/>
        <function-ref name="isState" scoped="" ref="0x7f151906adf0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1519069020"/>
        <function-ref name="requestState" scoped="" ref="0x7f15190691a8"/>
        <function-ref name="forceState" scoped="" ref="0x7f1519069330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1519066438" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1519066438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1519066788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1519065020" loc="67:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f1519065020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1519065370"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15190654f8"/>
        <function-ref name="isState" scoped="" ref="0x7f1519065680"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1519065808"/>
        <function-ref name="requestState" scoped="" ref="0x7f1519065990"/>
        <function-ref name="forceState" scoped="" ref="0x7f1519065b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1518f022a8" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f1518f022a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518f025f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518f02780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1518f03c18" loc="42:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f1518f03c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1518f02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518f04960" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518f04960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518f04cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518f03020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518f03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518f03370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518f034f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518f03680"/>
        <function-ref name="granted" scoped="" ref="0x7f1518f03808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518f03990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1519040cc0" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f1519040cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15190460a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1519046228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f151904aa20" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f151904aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f151904ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f151904a400" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f151904a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151904a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f15190401f0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15190401f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1519040540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15190406c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1519040850"/>
        <function-ref name="write" scoped="" ref="0x7f15190409d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15190469f8" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15190469f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1519046d48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1519044020"/>
        <function-ref name="request" scoped="" ref="0x7f15190441a8"/>
        <function-ref name="granted" scoped="" ref="0x7f1519044330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15190444b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f1518ffab58" loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f1518ffab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518ff9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518ff91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f151903b020" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f151903b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151903b370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151903b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f151901d208" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f151901d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151901d558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151901d6e0"/>
        <function-ref name="request" scoped="" ref="0x7f151901d868"/>
        <function-ref name="granted" scoped="" ref="0x7f151901d9f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151901db78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f151903dd80" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f151903dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f151903c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f151903d7a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f151903d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151903daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f1519038020" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f1519038020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f1519038370"/>
        <function-ref name="sleep" scoped="" ref="0x7f151901e7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f1519038680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151901e950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f1519038990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f1519038b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1519038ca0"/>
        <function-ref name="read" scoped="" ref="0x7f1519038e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f1519037020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f15190371a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f1519037330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15190374b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f1519037640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f15190378c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f1519037a50"/>
        <function-ref name="write" scoped="" ref="0x7f1519037bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1519037d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f151901e020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f151901e1a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f151901e330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f151901e4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f15190384f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f1519038808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f151901e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f151903c428" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f151903c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f151903c778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f151903c900"/>
        <function-ref name="splitRead" scoped="" ref="0x7f151903ca88"/>
        <function-ref name="write" scoped="" ref="0x7f151903cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151903bc88" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151903bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151903a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151903a1a8"/>
        <function-ref name="request" scoped="" ref="0x7f151903a330"/>
        <function-ref name="granted" scoped="" ref="0x7f151903a4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151903a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15190195d0" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15190195d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1519019920"/>
        <function-ref name="userId" scoped="" ref="0x7f1519019aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f1519019d78" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f1519019d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f151901b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f1518fcf020" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f1518fcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f1518fcf370"/>
        <function-ref name="sleep" scoped="" ref="0x7f1518fcd7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f1518fcf680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1518fcd950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f1518fcf990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f1518fcfb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1518fcfca0"/>
        <function-ref name="read" scoped="" ref="0x7f1518fcfe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f1518fce020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1518fce1a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f1518fce330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1518fce4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f1518fce640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f1518fce8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f1518fcea50"/>
        <function-ref name="write" scoped="" ref="0x7f1518fcebd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1518fced60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f1518fcd020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f1518fcd1a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f1518fcd330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1518fcd4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f1518fcf4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f1518fcf808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f1518fcd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f1518fc0190" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f1518fc0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518fc04e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518fc0668"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518fc07f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518fc0978"/>
        <function-ref name="get" scoped="" ref="0x7f1518fc0b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518fc0c88"/>
        <function-ref name="set" scoped="" ref="0x7f1518fc0e10"/>
        <function-ref name="clr" scoped="" ref="0x7f1518fbf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f1518fc6de0" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f1518fc6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518fc5170"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518fc52f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518fc5480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518fc5608"/>
        <function-ref name="get" scoped="" ref="0x7f1518fc5790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518fc5918"/>
        <function-ref name="set" scoped="" ref="0x7f1518fc5aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f1518fc5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f1518fc2c70" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f1518fc2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518fc6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518fc61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518fc6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518fc64b8"/>
        <function-ref name="get" scoped="" ref="0x7f1518fc6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518fc67c8"/>
        <function-ref name="set" scoped="" ref="0x7f1518fc6950"/>
        <function-ref name="clr" scoped="" ref="0x7f1518fc6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1518fc2438" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1518fc2438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518fc2788"/>
        <function-ref name="stop" scoped="" ref="0x7f1518fc2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f1518fbf350" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f1518fbf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1518fbf6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f1518fccdc8" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f1518fccdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f1518fc9170"/>
        <function-ref name="sleep" scoped="" ref="0x7f1518fc7640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f1518fc9480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1518fc77c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f1518fc9790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f1518fc9918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1518fc9aa0"/>
        <function-ref name="read" scoped="" ref="0x7f1518fc9c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f1518fc9db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1518fc8020"/>
        <function-ref name="setClock" scoped="" ref="0x7f1518fc81a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1518fc8330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f1518fc84b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f1518fc8740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f1518fc88c8"/>
        <function-ref name="write" scoped="" ref="0x7f1518fc8a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1518fc8bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f1518fc8d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f1518fc7020"/>
        <function-ref name="getClock" scoped="" ref="0x7f1518fc71a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1518fc7330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f1518fc92f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f1518fc9608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f1518fc74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f1518fc1020" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f1518fc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518fc1370"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518fc14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518fc1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518fc1808"/>
        <function-ref name="get" scoped="" ref="0x7f1518fc1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518fc1b18"/>
        <function-ref name="set" scoped="" ref="0x7f1518fc1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f1518fc1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518f1c020" loc="86:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518f1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518f1c390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518f1c518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1518f1b020" loc="89:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1518f1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1518f1b390"/>
        <function-ref name="configure" scoped="" ref="0x7f1518f1b518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518f1d200" loc="85:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518f1d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518f1d570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518f1d6f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518f1d880"/>
        <function-ref name="granted" scoped="" ref="0x7f1518f1da08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518f1db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1518f1c760" loc="87:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518f1c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518f1cab0"/>
        <function-ref name="userId" scoped="" ref="0x7f1518f1cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517da6620" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517da6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517da6970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1517da6bf8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1517da6bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517da5020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517da51a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517da5330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517da54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517da2820" loc="52:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517da2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517da2b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517da2d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517da18c0" loc="56:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517da18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517da1c30"/>
        <function-ref name="configure" scoped="" ref="0x7f1517da1db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517da00a0" loc="57:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517da00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517da03f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517da0578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517da0700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517da0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517da4a28" loc="51:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517da4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517da4d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517da2020"/>
        <function-ref name="request" scoped="" ref="0x7f1517da21a8"/>
        <function-ref name="granted" scoped="" ref="0x7f1517da2330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517da24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517da1020" loc="53:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517da1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517da1370"/>
        <function-ref name="userId" scoped="" ref="0x7f1517da14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517da0b50" loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517da0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517d9f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517d9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f1518f104a8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f1518f104a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518f107f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518f10980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518f10b08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518f10c90"/>
        <function-ref name="get" scoped="" ref="0x7f1518f10e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518f0f020"/>
        <function-ref name="set" scoped="" ref="0x7f1518f0f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518f0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518f15870" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518f15870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518f15bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518f15d48"/>
        <function-ref name="request" scoped="" ref="0x7f1518f12020"/>
        <function-ref name="granted" scoped="" ref="0x7f1518f121a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518f12330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f1518f12700" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f1518f12700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518f12a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518f12bd8"/>
        <function-ref name="request" scoped="" ref="0x7f1518f12d60"/>
        <function-ref name="granted" scoped="" ref="0x7f1518f10020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518f101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1518f003b8" loc="46:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1518f003b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1518f00708"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1518f00890"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518f00a18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518f00ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518f00d28"/>
        <function-ref name="get" scoped="" ref="0x7f1518efd020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518efd1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518efd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f1518efd330"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518efd4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518efd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1518ef83b8" loc="50:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1518ef83b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518ef8708"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518ef8890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518ef8a18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518ef8ba0"/>
        <function-ref name="get" scoped="" ref="0x7f1518ef8d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518ef7020"/>
        <function-ref name="set" scoped="" ref="0x7f1518ef71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518ef7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518efa670" loc="46:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518efa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518efa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1518ef7648" loc="51:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1518ef7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518ef7998"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518ef7b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518ef7ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518ef7e30"/>
        <function-ref name="get" scoped="" ref="0x7f1518ef6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518ef61a8"/>
        <function-ref name="set" scoped="" ref="0x7f1518ef6330"/>
        <function-ref name="clr" scoped="" ref="0x7f1518ef64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1518efac38" loc="47:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1518efac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1518ef9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1518ef91a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518ef9330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518ef94b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518ef9640"/>
        <function-ref name="get" scoped="" ref="0x7f1518ef97c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518ef9950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518ef8020"/>
        <function-ref name="set" scoped="" ref="0x7f1518ef9ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518ef9c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518ef9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1518ef67d0" loc="52:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1518ef67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518ef6b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518ef6ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518ef6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518ef4020"/>
        <function-ref name="get" scoped="" ref="0x7f1518ef41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518ef4330"/>
        <function-ref name="set" scoped="" ref="0x7f1518ef44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518ef4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1518efbb08" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1518efbb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518efbe58"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518eda020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518eda1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518eda330"/>
        <function-ref name="get" scoped="" ref="0x7f1518eda4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518eda640"/>
        <function-ref name="set" scoped="" ref="0x7f1518eda7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518eda950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1518edaca8" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1518edaca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518ed9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518ed91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518ed9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518ed94b8"/>
        <function-ref name="get" scoped="" ref="0x7f1518ed9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518ed97c8"/>
        <function-ref name="set" scoped="" ref="0x7f1518ed9950"/>
        <function-ref name="clr" scoped="" ref="0x7f1518ed9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1518ed7020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518ed7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518ed7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1518ed9e30" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1518ed9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518ed81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518ed8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518ed84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518ed8640"/>
        <function-ref name="get" scoped="" ref="0x7f1518ed87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518ed8950"/>
        <function-ref name="set" scoped="" ref="0x7f1518ed8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518ed8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1518e817c0" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518e817c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e81d10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1518e8ccd0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f1518e8ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1518e857c0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518e857c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e85b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e85c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1518e7f2e8" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518e7f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7f638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1518e7fa88" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f1518e7fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1518e732e8" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e732e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e73638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1518e762e8" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518e762e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e76638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e767c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1518e8a020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1518e772e8" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e772e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e77638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1518e847c0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f1518e847c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e84b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e84c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1518e837c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518e837c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e83b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e83c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1518e7ca88" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f1518e7ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1518e7e2e8" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f1518e7e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7e638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1518e8d740" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518e8d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518e8da90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518e8dc18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518e8dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1518e89900" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518e89900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e89c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1518e87020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e87470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1518e87738" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f1518e87738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e87a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1518e77a88" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e77a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e77dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1518e8ac50" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518e8ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1518e83020" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518e83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e83370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e834f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1518e84020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518e84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e84370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e844f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1518e8c6b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f1518e8c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1518e75a88" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e75a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e75dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1518e76a88" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518e76a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e76dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1518e7a2e8" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f1518e7a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7a638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1518e78a88" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e78a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e78dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1518e7d2e8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f1518e7d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7d638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1518e73a88" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e73a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e725e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e72770"/>
        <function-ref name="write" scoped="" ref="0x7f1518e728f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e72a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e72c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1518e8c0a0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518e8c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1518e85020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f1518e85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e85370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e854f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1518e81020" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518e81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e81370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e814f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1518e7ea88" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f1518e7ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7edd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1518e802e8" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f1518e802e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e80638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e807c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1518e8b368" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f1518e8b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8b6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1518e80a88" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518e80a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e80dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518e8ea48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518e8ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518e8ed98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518e8d020"/>
        <function-ref name="request" scoped="" ref="0x7f1518e8d1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518e8d330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518e8d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1518e87d50" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518e87d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e860d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1518e869b8" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f1518e869b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e86d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1518e782e8" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f1518e782e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e78638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e787c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1518e79a88" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e79a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e79dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1518e892e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518e892e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e89638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1518e792e8" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518e792e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e79638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e797c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1518e752e8" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f1518e752e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e75638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1518e7aa88" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518e7aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7add8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1518e8b980" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518e8b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1518e7c2e8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f1518e7c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7c638"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1518e8a638" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f1518e8a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e8a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1518e7da88" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f1518e7da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e7ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1518e863a0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518e863a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e866f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1518e71020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e71370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e714f8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e71680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e71808"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e71990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1518e5fc90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518e5fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5e3e8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1518e693a0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f1518e693a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e696f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1518e63dd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518e63dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e61170"/>
        <function-ref name="write" scoped="" ref="0x7f1518e612f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1518e5d7c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518e5d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5db10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1518e5c020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f1518e5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5c370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1518e517c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518e517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e51b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e51c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1518e537c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518e537c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e53b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e53c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1518e68638" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518e68638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e68988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1518e557c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518e557c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e55b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e55c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1518e61d60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f1518e61d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e600d8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e60260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1518e60cc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518e60cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1518e58020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f1518e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e58370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1518e5c7c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f1518e5c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5cb10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1518e6bda0" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518e6bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518e6a170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518e6a2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518e6a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1518e65020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518e65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e65370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1518e65638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518e65638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e65a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1518e65d50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f1518e65d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e640d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1518e53020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518e53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e53370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e534f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1518e662e8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518e662e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e66638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1518e60528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518e60528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e60878"/>
        <function-ref name="write" scoped="" ref="0x7f1518e60a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1518e615c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518e615c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e61910"/>
        <function-ref name="write" scoped="" ref="0x7f1518e61a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1518e6ad60" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f1518e6ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e690d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1518e51020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518e51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e51370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e514f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1518e52020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518e52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e52370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e524f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1518e587c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f1518e587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e58b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e58c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1518e55020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f1518e55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e55370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e554f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1518e5a7c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f1518e5a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5ab10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1518e50020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e50770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e508f8"/>
        <function-ref name="write" scoped="" ref="0x7f1518e50a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e50c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e50d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1518e6a748" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518e6a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e6aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1518e63638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f1518e63638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e63988"/>
        <function-ref name="write" scoped="" ref="0x7f1518e63b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1518e5f4f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518e5f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5f840"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1518e5a020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f1518e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5a370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1518e5e838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f1518e5e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5eb88"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1518e699b8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f1518e699b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e69d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1518e5d020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e5d370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e5d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518e6b1a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518e6b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518e6b4f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518e6b680"/>
        <function-ref name="request" scoped="" ref="0x7f1518e6b808"/>
        <function-ref name="granted" scoped="" ref="0x7f1518e6b990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518e6bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1518e643a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518e643a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e646f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1518e63020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f1518e63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e63370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1518e567c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f1518e567c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e56b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e56c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1518e56020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f1518e56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e56370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e564f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1518e66900" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518e66900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e66c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1518e577c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518e577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e57b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e57c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1518e527c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f1518e527c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e52b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e52c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1518e57020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518e57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e57370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e574f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1518e68020" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518e68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e68370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1518e597c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f1518e597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e59b10"/>
        <function-ref name="write" scoped="" ref="0x7f1518e59c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1518e68c50" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f1518e68c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1518e59020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f1518e59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518e59370"/>
        <function-ref name="write" scoped="" ref="0x7f1518e594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1518e649b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518e649b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518e64d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1518e4f0a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518e4f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518e4f3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518e4f578"/>
        <function-ref name="write" scoped="" ref="0x7f1518e4f700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518e4f888"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518e4fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1518e472b8" loc="54:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1518e472b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1518e47608"/>
        <function-ref name="changed" scoped="" ref="0x7f1518e47790"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1518e47918"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1518e47aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1518e49d10" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1518e49d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1518e360a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1518e25140" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518e25140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1518e25490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1518e25618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1518e257a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1518e25928"/>
        <function-ref name="setCca" scoped="" ref="0x7f1518e25ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1518e25c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1518e24cb8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1518e24cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518e230a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f1518e26480" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1518e26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518e267d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518e26958"/>
        <function-ref name="modify" scoped="" ref="0x7f1518e26ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518e26c68"/>
        <function-ref name="resend" scoped="" ref="0x7f1518e26df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1518e29c48" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1518e29c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518e26020"/>
        <function-ref name="stop" scoped="" ref="0x7f1518e261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1518e23458" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1518e23458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518e237a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1518dfe4b0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518dfe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1518dfe800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1518dfe988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1518dfeb10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1518dfec98"/>
        <function-ref name="setCca" scoped="" ref="0x7f1518dfee20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1518dfd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1518df6150" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518df6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518df5700"/>
        <function-ref name="clear" scoped="" ref="0x7f1518df5de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518df5020"/>
        <function-ref name="set" scoped="" ref="0x7f1518df34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1518de68a8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518de68a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de6bf8"/>
        <function-ref name="write" scoped="" ref="0x7f1518de6d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1518de5130" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518de5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de5480"/>
        <function-ref name="write" scoped="" ref="0x7f1518de5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1518dfd428" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1518dfd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518dfd778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f1518de9020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518de9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518de9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f1518df29a8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1518df29a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1518df2cf8"/>
        <function-ref name="disable" scoped="" ref="0x7f1518df2e80"/>
        <function-ref name="captured" scoped="" ref="0x7f1518df1030"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1518df11b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f1518dfc648" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f1518dfc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518dfacc0"/>
        <function-ref name="fired" scoped="" ref="0x7f1518dfbd50"/>
        <function-ref name="startAt" scoped="" ref="0x7f1518dfa6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518dfa230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1518df8190"/>
        <function-ref name="start" scoped="" ref="0x7f1518dfb3f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518dfb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1518df8628" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518df8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518df8978"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518df8b00"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1518df8c88"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1518df8e10"/>
        <function-ref name="getPower" scoped="" ref="0x7f1518df7020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1518df71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f1518deb0c8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518deb0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518deb418"/>
        <function-ref name="write" scoped="" ref="0x7f1518deb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1518deb938" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518deb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518debc88"/>
        <function-ref name="write" scoped="" ref="0x7f1518debe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f1518ddf1b8" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518ddf1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518ddf508"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1518ddf690"/>
        <function-ref name="sfd" scoped="" ref="0x7f1518ddf818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1518dff6d0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1518dff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518dffa20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518dffba8"/>
        <function-ref name="modify" scoped="" ref="0x7f1518dffd30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518dfe020"/>
        <function-ref name="resend" scoped="" ref="0x7f1518dfe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f1518ded960" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518ded960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518dedcb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518dede38"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518dec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f1518de9710" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518de9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518de9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1518df0800" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f1518df0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518df0b50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518df0cd8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518df0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518def020"/>
        <function-ref name="get" scoped="" ref="0x7f1518def1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518def330"/>
        <function-ref name="set" scoped="" ref="0x7f1518def4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518def640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518e02808" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518e02808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518e02b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1518df74d8" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518df74d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518df7828"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518df79b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518df7b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1518df3d88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518df3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518df2170"/>
        <function-ref name="isSet" scoped="" ref="0x7f1518df22f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518df2480"/>
        <function-ref name="set" scoped="" ref="0x7f1518df2608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1518de9e10" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518de9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de73e8"/>
        <function-ref name="write" scoped="" ref="0x7f1518de7570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1518deeb58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f1518deeb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518ded020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518ded1a8"/>
        <function-ref name="request" scoped="" ref="0x7f1518ded330"/>
        <function-ref name="granted" scoped="" ref="0x7f1518ded4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518ded640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1518df1500" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f1518df1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518df1950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518df1ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518df1c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518df1de8"/>
        <function-ref name="get" scoped="" ref="0x7f1518df0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518df01a8"/>
        <function-ref name="set" scoped="" ref="0x7f1518df0330"/>
        <function-ref name="clr" scoped="" ref="0x7f1518df04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1518de5960" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518de5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de5cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1518de5e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f1518de4208" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518de4208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de4558"/>
        <function-ref name="write" scoped="" ref="0x7f1518de46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1518dea1b0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518dea1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518dea500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f1518def988" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f1518def988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518defcd8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518defe60"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518dee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518dee1a8"/>
        <function-ref name="get" scoped="" ref="0x7f1518dee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518dee4b8"/>
        <function-ref name="set" scoped="" ref="0x7f1518dee640"/>
        <function-ref name="clr" scoped="" ref="0x7f1518dee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1518ddfad0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1518ddfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1518ddfe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1518de2020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518de21a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518de2330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518de24b8"/>
        <function-ref name="get" scoped="" ref="0x7f1518de2640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518de27c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518de2de8"/>
        <function-ref name="set" scoped="" ref="0x7f1518de2950"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518de2ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518de2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1518de6020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518de6370"/>
        <function-ref name="write" scoped="" ref="0x7f1518de64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1518e02e48" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1518e02e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518dff1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518dff348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f1518dec390" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518dec390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518dec6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518dec868"/>
        <function-ref name="write" scoped="" ref="0x7f1518dec9f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518decb78"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518decd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f1518dea880" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518dea880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518deabd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1518de78f8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518de78f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518de7c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1518dfdb70" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1518dfdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518dfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1518d4aa88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518d4aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d49020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1518d54020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f1518d54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d54370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1518d4ea88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518d4ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4edd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1518d48470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518d48470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d487c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d48948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1518d48c10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f1518d48c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d47020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1518d3c470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518d3c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1518d3f470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518d3f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1518d532e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518d532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d53638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1518d40470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518d40470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d407c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d40948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1518d4da88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f1518d4da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1518d4ca88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518d4ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1518d45c10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f1518d45c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d43020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1518d47470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f1518d47470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d477c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d47948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1518d56948" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518d56948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518d56c98"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518d56e20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518d55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1518d52c50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518d52c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1518d502e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518d502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d50738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1518d50a00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f1518d50a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d50d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1518d40c10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518d40c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3f020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1518d52020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518d52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d52370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1518d4c2e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518d4c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4c638"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1518d4d2e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518d4d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4d638"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1518d55900" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f1518d55900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d55c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1518d3ec10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518d3ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3c020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1518d3fc10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518d3fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3e020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1518d43470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f1518d43470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d437c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d43948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1518d41c10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f1518d41c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d40020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1518d46470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f1518d46470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d467c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d46948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1518d3cc10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518d3cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518d3b5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518d3b770"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3b8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518d3ba80"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518d3bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1518d552e8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518d552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d55638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1518d4e2e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f1518d4e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4e638"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1518d4a2e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518d4a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d4a638"/>
        <function-ref name="write" scoped="" ref="0x7f1518d4a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1518d47c10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f1518d47c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d46020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1518d49470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f1518d49470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d497c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d49948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1518d54638" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f1518d54638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d54988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1518d49c10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518d49c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d48020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518d57cb8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518d57cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518d560a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518d56228"/>
        <function-ref name="request" scoped="" ref="0x7f1518d563b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518d56538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518d566c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1518d4f060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518d4f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d4f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1518d4fc90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f1518d4fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1518d41470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f1518d41470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d417c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d41948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1518d42c10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f1518d42c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d41020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1518d52638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518d52638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d52988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1518d42470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518d42470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d427c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d42948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1518d3e470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f1518d3e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d3e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1518d43c10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518d43c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d42020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1518d54c50" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518d54c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1518d45470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f1518d45470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d457c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518d45948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1518d53900" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f1518d53900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d53c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1518d46c10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f1518d46c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d45020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1518d4f678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518d4f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d4f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1518d3a020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518d3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518d3a370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518d3a4f8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d3a680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518d3a808"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518d3a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1518d2e4b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518d2e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518d2e808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1518d2e990"/>
        <function-ref name="sfd" scoped="" ref="0x7f1518d2eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518d2ede8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518d2ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518d2d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1518d2d578" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1518d2d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518d2d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1518d31b40" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1518d31b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518d2e020"/>
        <function-ref name="stop" scoped="" ref="0x7f1518d2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f1518d26378" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f1518d26378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518d266c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518d26850"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518d269d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518d26b60"/>
        <function-ref name="get" scoped="" ref="0x7f1518d26ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518d26e70"/>
        <function-ref name="set" scoped="" ref="0x7f1518d25020"/>
        <function-ref name="clr" scoped="" ref="0x7f1518d251a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1518d1e4b0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f1518d1e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1518d1e800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1518d1e988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1518d1eb10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1518d1ec98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1518d1ee20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1518d1d020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1518d1d1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1518d1d330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1518d1d4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1518d1d640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1518d1d7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1518d1d950"/>
        <function-ref name="sync" scoped="" ref="0x7f1518d1dad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1518d1dd60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1518d1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f1518d08cb0" loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f1518d08cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518d070a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518d07228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1518d1c5e8" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518d1c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518d1ba88"/>
        <function-ref name="clear" scoped="" ref="0x7f1518d1a190"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518d1b3a8"/>
        <function-ref name="set" scoped="" ref="0x7f1518d1a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f1518d25508" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f1518d25508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518d25858"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518d259e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518d25b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518d25cf0"/>
        <function-ref name="get" scoped="" ref="0x7f1518d25e78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518d23030"/>
        <function-ref name="set" scoped="" ref="0x7f1518d231b8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518d23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1518d171e8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518d171e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d17538"/>
        <function-ref name="write" scoped="" ref="0x7f1518d176c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1518d17a18" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518d17a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d17d68"/>
        <function-ref name="write" scoped="" ref="0x7f1518d16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f1518d16bc0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518d16bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d15020"/>
        <function-ref name="write" scoped="" ref="0x7f1518d151a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1518d20c68" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518d20c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518d1f020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518d1f1a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1518d1f330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1518d1f4b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f1518d1f640"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1518d1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1518d29930" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1518d29930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518d29c80"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1518d29e08"/>
        <function-ref name="sfd" scoped="" ref="0x7f1518d28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f1518d21de8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518d21de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d20170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1518d27120" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f1518d27120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1518d27470"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518d275f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f1518d27780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518d27908"/>
        <function-ref name="get" scoped="" ref="0x7f1518d27a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518d27c18"/>
        <function-ref name="set" scoped="" ref="0x7f1518d27da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1518d26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f1518d15538" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518d15538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d15888"/>
        <function-ref name="write" scoped="" ref="0x7f1518d15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518d2cad8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518d2cad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518d2ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1518d1faf8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518d1faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518d1fe48"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518d1e020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518d1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518d282f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518d282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518d28640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1518d223b0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f1518d223b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518d22700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518d22888"/>
        <function-ref name="request" scoped="" ref="0x7f1518d22a10"/>
        <function-ref name="granted" scoped="" ref="0x7f1518d22b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518d22d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1518d16378" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518d16378"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d166c8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d16850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f1518d21100" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518d21100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518d21450"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518d215d8"/>
        <function-ref name="write" scoped="" ref="0x7f1518d21760"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518d218e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518d21a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1518d15d88" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518d15d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d143e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1518d28a48" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1518d28a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1518d28d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1518d146a0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1518d146a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1518d149f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1518d14b78"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518d14d00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518d13020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518d131a8"/>
        <function-ref name="get" scoped="" ref="0x7f1518d13330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518d134b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518d13ad8"/>
        <function-ref name="set" scoped="" ref="0x7f1518d13640"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518d137c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518d13950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1518d188c0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518d188c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518d18c10"/>
        <function-ref name="write" scoped="" ref="0x7f1518d18d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f1518d181c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518d181c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d18510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f1518d23720" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1518d23720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1518d23a70"/>
        <function-ref name="disable" scoped="" ref="0x7f1518d23bf8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1518d23d80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1518d22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f1518d20510" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518d20510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518d20960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1518d29148" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1518d29148"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518d29498"/>
        <function-ref name="stop" scoped="" ref="0x7f1518d29620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1518caa6b0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1518caa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1518caaa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1518cae4a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518cae4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518cae7f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518cae980"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1518caeb08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1518caec90"/>
        <function-ref name="getPower" scoped="" ref="0x7f1518caee18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1518cab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1518ca9130" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518ca9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518ca8588"/>
        <function-ref name="clear" scoped="" ref="0x7f1518ca8c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518ca9e80"/>
        <function-ref name="set" scoped="" ref="0x7f1518ca6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1518cabd08" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518cabd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518caa0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518caa228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518caa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1518ca2ac8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518ca2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518ca2e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f1518ca1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518ca11a8"/>
        <function-ref name="set" scoped="" ref="0x7f1518ca1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1518ca5020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518ca5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518ca4478"/>
        <function-ref name="clear" scoped="" ref="0x7f1518ca4b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518ca5d70"/>
        <function-ref name="set" scoped="" ref="0x7f1518ca2278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1518cab3b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f1518cab3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1518cab708"/>
        <function-ref name="noAck" scoped="" ref="0x7f1518cab890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1518caba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1518c9c630" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1518c9c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1518c9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1518c9e2e8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518c9e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518c9e638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518c9e7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1518c9e948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1518c9ead0"/>
        <function-ref name="getPower" scoped="" ref="0x7f1518c9ec58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1518c9ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1518c93618" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1518c93618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518c93968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1518c93af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518c93c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518c93e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1518c92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1518c9b060" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1518c9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518c994b8"/>
        <function-ref name="clear" scoped="" ref="0x7f1518c99b98"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518c9bdb0"/>
        <function-ref name="set" scoped="" ref="0x7f1518c982b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1518c9db60" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518c9db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518c9c020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518c9c1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518c9c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1518c94ac8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1518c94ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c94e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f1518c93020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518c931a8"/>
        <function-ref name="set" scoped="" ref="0x7f1518c93330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f1518c92520" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1518c92520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c910f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1518c91788" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1518c91788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c8f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1518c97020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518c97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518c95478"/>
        <function-ref name="clear" scoped="" ref="0x7f1518c95b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518c97d70"/>
        <function-ref name="set" scoped="" ref="0x7f1518c94278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1518c9d210" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f1518c9d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1518c9d560"/>
        <function-ref name="noAck" scoped="" ref="0x7f1518c9d6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1518c9d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1518c43528" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1518c43528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c420f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1518c42720" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1518c42720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c37578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1518c36020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1518c37a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f1518c364a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1518c32d78" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f1518c32d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518c2d088"/>
        <function-ref name="fired" scoped="" ref="0x7f1518c306c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518c2e470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518c2e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518c2d928"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518c2d4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518c30b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518c318f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518c2ea40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518c31d90"/>
        <function-ref name="stop" scoped="" ref="0x7f1518c30278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1518c2b020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1518c2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c2bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518c32080" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518c32080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518c323d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f1518c22338" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f1518c22338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518c210c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1518c219d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1518c21548"/>
        <function-ref name="overflow" scoped="" ref="0x7f1518c21e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518c29618" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518c29618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518c29968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f1518c26020" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1518c26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518c23690"/>
        <function-ref name="fired" scoped="" ref="0x7f1518c256f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f1518c23088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518c25b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1518c23b18"/>
        <function-ref name="start" scoped="" ref="0x7f1518c26d70"/>
        <function-ref name="stop" scoped="" ref="0x7f1518c25270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1518bb8020" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1518bb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518bb5690"/>
        <function-ref name="fired" scoped="" ref="0x7f1518bb76f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f1518bb5088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518bb7b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1518bb5b18"/>
        <function-ref name="start" scoped="" ref="0x7f1518bb8d70"/>
        <function-ref name="stop" scoped="" ref="0x7f1518bb7270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518bb97d8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518bb97d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1519a97388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1519a97388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518bb9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1518bb4128" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1518bb4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518bb4e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1518bb37b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1518bb3330"/>
        <function-ref name="overflow" scoped="" ref="0x7f1518bb3c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f1517cc2020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1517cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f1517cc2370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f1517cc24f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1517cc2680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1517cc2808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1517cc2990"/>
        <function-ref name="setControl" scoped="" ref="0x7f1517cc2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1517ccfda8" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1517ccfda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1517ccb470"/>
        <function-ref name="fired" scoped="" ref="0x7f1517ccc510"/>
        <function-ref name="startAt" scoped="" ref="0x7f1517ccce20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1517ccc998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1517ccb8f8"/>
        <function-ref name="start" scoped="" ref="0x7f1517ccdb38"/>
        <function-ref name="stop" scoped="" ref="0x7f1517ccc088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517ccf600" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517ccf600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517ccf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1517cca020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1517cca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1517ccad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1517cc86b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1517cc8230"/>
        <function-ref name="overflow" scoped="" ref="0x7f1517cc8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f1517cbd0a0" loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f1517cbd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f1517cbd3f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f1517cbd578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f1517cbd700"/>
        <function-ref name="countBusy" scoped="" ref="0x7f1517cbd888"/>
        <function-ref name="getAssr" scoped="" ref="0x7f1517cbda10"/>
        <function-ref name="setAssr" scoped="" ref="0x7f1517cbdb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f1517cc1020" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f1517cc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1517cbf7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f1517cc0560"/>
        <function-ref name="get" scoped="" ref="0x7f1517cc1ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f1517cc09e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f1517cbfc30"/>
        <function-ref name="set" scoped="" ref="0x7f1517cc0088"/>
        <function-ref name="start" scoped="" ref="0x7f1517cc0e70"/>
        <function-ref name="stop" scoped="" ref="0x7f1517cbf320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1517cc7168" loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1517cc7168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1517cc3270"/>
        <function-ref name="test" scoped="" ref="0x7f1517cc5930"/>
        <function-ref name="get" scoped="" ref="0x7f1517cc7ce8"/>
        <function-ref name="setScale" scoped="" ref="0x7f1517cc36f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f1517cc3bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f1517cc6b58"/>
        <function-ref name="overflow" scoped="" ref="0x7f1517cc66d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1517cc5db8"/>
        <function-ref name="set" scoped="" ref="0x7f1517cc61f8"/>
        <function-ref name="start" scoped="" ref="0x7f1517cc5020"/>
        <function-ref name="stop" scoped="" ref="0x7f1517cc54a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1518b825e8" loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f1518b825e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518b82938"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518b82ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1518b86648" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1518b86648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b83cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b85d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f1518b836b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b83230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1518b82190"/>
        <function-ref name="start" scoped="" ref="0x7f1518b853f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b858c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518b8b290" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518b8b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b875f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b8aba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518b898c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518b89470"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518b86020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518b87a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b89020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518b8bdd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518b87020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518b8a2b8"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b8a758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1518b34618" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1518b34618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518b34968"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518b34af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1518b395a0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f1518b395a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b358f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b37020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518b37d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518b378c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518b341c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518b35d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b37470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518b38118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518b35320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518b385b8"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b38a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518b3f0c8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518b3f0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b3b610"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b3ea48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518b3c900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518b3c490"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518b39020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518b3ba80"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b3c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518b3fc30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518b3b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518b3e118"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b3e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1518b32c38" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1518b32c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518b30820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1518b30e48" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1518b30e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518b2fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1518b2e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1518b2e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1518b2e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518b29420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518b29420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b156c8"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b17db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518b16ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518b16688"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518b13020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518b15b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b16238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518b17020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518b150f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518b174c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b17960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1518b1f7d8" loc="49:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f1518b1f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518b1ca18"/>
        <function-ref name="fired" scoped="" ref="0x7f1518b1d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518b1de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518b1d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518b1b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518b1ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518b1d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518b1e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518b1c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518b1e810"/>
        <function-ref name="stop" scoped="" ref="0x7f1518b1ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1518b04a88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1518b04a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b03020"/>
        <function-ref name="write" scoped="" ref="0x7f1518b031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1518b0e100" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f1518b0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1518b08a88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1518b08a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b08dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518b07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1518b02470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1518b02470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b027c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518b02948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1518b02c10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f1518b02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b01020"/>
        <function-ref name="write" scoped="" ref="0x7f1518b011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1518af6470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f1518af6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af67c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518af6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1518af8470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f1518af8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af87c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518af8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1518b0d3a0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f1518b0d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1518afa470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1518afa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afa7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518afa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1518b07a88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f1518b07a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b07dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518b05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1518b05a88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f1518b05a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b05dd8"/>
        <function-ref name="write" scoped="" ref="0x7f1518b04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1518afec10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f1518afec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afd020"/>
        <function-ref name="write" scoped="" ref="0x7f1518afd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1518b01470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f1518b01470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b017c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518b01948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1518b10a18" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1518b10a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1518b10d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1518b0f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1518b0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1518b0bc50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1518b0bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1518b0a2e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f1518b0a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0a738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1518b0aa00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f1518b0aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1518afac10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1518afac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af8020"/>
        <function-ref name="write" scoped="" ref="0x7f1518af81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1518b0b020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1518b0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1518b052e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1518b052e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b05638"/>
        <function-ref name="write" scoped="" ref="0x7f1518b057c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1518b072e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1518b072e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b07638"/>
        <function-ref name="write" scoped="" ref="0x7f1518b077c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1518b0fa88" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f1518b0fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1518af7c10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f1518af7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af6020"/>
        <function-ref name="write" scoped="" ref="0x7f1518af61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1518af8c10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f1518af8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af7020"/>
        <function-ref name="write" scoped="" ref="0x7f1518af71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1518afd470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f1518afd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afd7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518afd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1518afbc10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f1518afbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afa020"/>
        <function-ref name="write" scoped="" ref="0x7f1518afa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1518b00470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f1518b00470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b007c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518b00948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1518af6c10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f1518af6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518af55e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518af5770"/>
        <function-ref name="write" scoped="" ref="0x7f1518af58f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518af5a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518af5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1518b0f470" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f1518b0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1518b082e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f1518b082e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b08638"/>
        <function-ref name="write" scoped="" ref="0x7f1518b087c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1518b042e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1518b042e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b04638"/>
        <function-ref name="write" scoped="" ref="0x7f1518b047c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1518b01c10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f1518b01c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b00020"/>
        <function-ref name="write" scoped="" ref="0x7f1518b001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1518b03470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f1518b03470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b037c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518b03948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1518b0e718" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f1518b0e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1518b03c10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1518b03c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518b02020"/>
        <function-ref name="write" scoped="" ref="0x7f1518b021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518b11db8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518b11db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518b10170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518b102f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518b10480"/>
        <function-ref name="granted" scoped="" ref="0x7f1518b10608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518b10790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1518b09060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f1518b09060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b093b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1518b09c90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f1518b09c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1518afb470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f1518afb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afb7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518afb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1518afcc10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f1518afcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afb020"/>
        <function-ref name="write" scoped="" ref="0x7f1518afb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1518b0b638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1518b0b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1518afc470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1518afc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afc7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518afc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1518af7470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f1518af7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518af77c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518af7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1518afdc10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1518afdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afc020"/>
        <function-ref name="write" scoped="" ref="0x7f1518afc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1518b0ed30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f1518b0ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1518afe470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f1518afe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afe7c0"/>
        <function-ref name="write" scoped="" ref="0x7f1518afe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1518b0d9b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f1518b0d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b0dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1518b00c10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f1518b00c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518afe020"/>
        <function-ref name="write" scoped="" ref="0x7f1518afe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1518b09678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f1518b09678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1518b099c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1518af4020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f1518af4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1518af4370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518af44f8"/>
        <function-ref name="write" scoped="" ref="0x7f1518af4680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1518af4808"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518af4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1518aceb98" loc="46:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f1518aceb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1518acd020"/>
        <function-ref name="rand32" scoped="" ref="0x7f1518acd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1518accb10" loc="45:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f1518accb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518ace6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518ad2db8" loc="44:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518ad2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518acf170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1518ac7a08" loc="48:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f1518ac7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1518ac7d58"/>
        <function-ref name="rand32" scoped="" ref="0x7f1518ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1518ac89f0" loc="47:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f1518ac89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518ac7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518ac8198" loc="46:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518ac8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518ac84e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1518ad0338" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f1518ad0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1518ad0688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1518ad0810"/>
        <function-ref name="isState" scoped="" ref="0x7f1518ad0998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1518ad0b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f1518ad0ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f1518ad0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1518aafa40" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1518aafa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518aafd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518aae020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518aae1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518aae330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518aae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1518ab2d08" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1518ab2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518aaf0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518aaf228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518aaf3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518aaf538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518aaf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1518aaa750" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1518aaa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518aaaaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518aaac28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518aaadb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518aa9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518aa91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1518aab438" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1518aab438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518aab788"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518aab910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518aaba98"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518aabc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518aabda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1518aa82a8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f1518aa82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1518aa85f8"/>
        <function-ref name="rand32" scoped="" ref="0x7f1518aa8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518aaa080" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518aaa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518aaa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1518aa8a70" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518aa8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518aa8dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518aa7020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518aa71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f1518aa9428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f1518aa9428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1518aa9778"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1518aa9900"/>
        <function-ref name="isState" scoped="" ref="0x7f1518aa9a88"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1518aa9c10"/>
        <function-ref name="requestState" scoped="" ref="0x7f1518aa9d98"/>
        <function-ref name="forceState" scoped="" ref="0x7f1518aa8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1518aac978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f1518aac978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1518aaccc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1518aace50"/>
        <function-ref name="isState" scoped="" ref="0x7f1518a97020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1518a971a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f1518a97330"/>
        <function-ref name="forceState" scoped="" ref="0x7f1518a974b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1518a90560" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1518a90560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a908b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518a93750" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518a93750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a93aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1518a93e18" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1518a93e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a901a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1518a8cd30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1518a8cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a8b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518a8c628" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518a8c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518a8c978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518a8f958" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518a8f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a8fca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1518a8b3c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518a8b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a8b718"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518a8b8a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518a8ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1518a8c060" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1518a8c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a8c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1518a5f020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1518a5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a5f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1518a5f670" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1518a5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a5f9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a5fb48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a5fcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a5fe58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1518a63a40" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1518a63a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a63d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a62020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a621a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a62330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1518a62db8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f1518a62db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a61170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a612f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a61480"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a61608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a61790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518a62748" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518a62748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a62a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518a91e20" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518a91e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518a631a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518a63330"/>
        <function-ref name="request" scoped="" ref="0x7f1518a634b8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518a63640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518a637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1518a61ae8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1518a61ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a61e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1518a601a8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f1518a601a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518a604f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1518a60680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a60808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a60990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1518a60b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1518a55528" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1518a55528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a55878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a55a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a55b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a55d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1518a54358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1518a54358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a546a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f1518a27ac0" loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f1518a27ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518a27e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518a26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1518a54970" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518a54970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518a54cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518a54e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1518a53020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1518a531a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f1518a53330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1518a534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1518a57490" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f1518a57490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a577e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a57968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a57af0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a57c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a57e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1518a521c0" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1518a521c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1518a52510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1518a52698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1518a52820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1518a529a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1518a537a8" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1518a537a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a53af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1518a53c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1518a53e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1518a58dc8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f1518a58dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a57170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518a59428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518a59428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518a59778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518a59900"/>
        <function-ref name="request" scoped="" ref="0x7f1518a59a88"/>
        <function-ref name="granted" scoped="" ref="0x7f1518a59c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518a59d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1518a58118" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f1518a58118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518a58468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a585f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a58778"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518a58900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518a58a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1518a56188" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1518a56188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518a564d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1518a56808" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f1518a56808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518a56b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1518a56ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518a56e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518a55020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1518a551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518a08c28" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518a08c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1518a07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1518a072a8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1518a072a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1518a075f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1518a07780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1518a07908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1518a07a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15189fddc8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15189fddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15189fc170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15189fc2f8"/>
        <function-ref name="start" scoped="" ref="0x7f15189fc480"/>
        <function-ref name="stop" scoped="" ref="0x7f15189fc608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15189fb838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15189fb838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189fbb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189fbd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189fa020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189fa1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189fa330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15189fa668" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15189fa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15189fa9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15189fe080" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15189fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189fe3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189fe558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189fe6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189fe868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189fe9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15189fd318" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15189fd318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15189fd668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f15189fd7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15189fd978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f15189fdb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f15189fc928" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f15189fc928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15189fcc78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15189fce00"/>
        <function-ref name="isState" scoped="" ref="0x7f15189fb020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15189fb1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f15189fb330"/>
        <function-ref name="forceState" scoped="" ref="0x7f15189fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f15189fad28" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f15189fad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15189f90a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15189f9228"/>
        <function-ref name="start" scoped="" ref="0x7f15189f93b0"/>
        <function-ref name="stop" scoped="" ref="0x7f15189f9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15189fec80" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15189fec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15189fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15189f6170" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15189f6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15189f64c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f15189f6648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15189f67d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f15189f6958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f15189f8d50" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f15189f8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15189ee0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15189ee260"/>
        <function-ref name="isState" scoped="" ref="0x7f15189ee3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15189ee570"/>
        <function-ref name="requestState" scoped="" ref="0x7f15189ee6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f15189ee880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15189e8020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15189e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189e8370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189e84f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189e8680"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189e8808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15189ec578" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15189ec578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189ec8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189eca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189ecbd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189ecd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f15189e92d0" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f15189e92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f15189e9620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f15189e97a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f15189e9930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15189e9ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f15189e9c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15189e4e18" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15189e4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189e31a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189e3330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189e34b8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189e3640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189e37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f15189da9e8" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x7f15189da9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15189dad38"/>
        <function-ref name="runTask" scoped="" ref="0x7f15189d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f15189e1490" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x7f15189e1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15189dd6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f15189e0db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15189dfad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15189df688"/>
        <function-ref name="getdt" scoped="" ref="0x7f15189dc020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15189ddb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15189df238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15189e0020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15189dd0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15189e04c0"/>
        <function-ref name="stop" scoped="" ref="0x7f15189e0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15189e74c0" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15189e74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15189e7810"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189e7998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189e7b20"/>
        <function-ref name="cancel" scoped="" ref="0x7f15189e7ca8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15189e7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f15189e3ae8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f15189e3ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15189e3e38"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15189e2020"/>
        <function-ref name="isState" scoped="" ref="0x7f15189e21a8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15189e2330"/>
        <function-ref name="requestState" scoped="" ref="0x7f15189e24b8"/>
        <function-ref name="forceState" scoped="" ref="0x7f15189e2640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f15189dc4a0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15189dc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f15189dc7f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f15189dc978"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f15189dcb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f15189e2968" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15189e2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15189e2cb8"/>
        <function-ref name="noAck" scoped="" ref="0x7f15189e2e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15189e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f15189e4128" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f15189e4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f15189e4478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f15189e4600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f15189e4788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15189e4910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f15189e4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f15189b0430" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f15189b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15189b0780"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15189b0908"/>
        <function-ref name="isState" scoped="" ref="0x7f15189b0a90"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15189b0c18"/>
        <function-ref name="requestState" scoped="" ref="0x7f15189b0da0"/>
        <function-ref name="forceState" scoped="" ref="0x7f15189af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15189ae5e8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15189ae5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15189aa8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f15189ac020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15189acd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15189ac8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15189a91c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15189aad40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15189ac470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15189ad158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15189aa320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15189ad5f8"/>
        <function-ref name="stop" scoped="" ref="0x7f15189ada98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1518990358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1518990358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15189906a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1518992528" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1518992528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518992878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518992a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518992b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518992d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518990020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f151898e140" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f151898e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f151898e490"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f151898e618"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f151898e7a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f151898e928"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f151898eab0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f151898ec38"/>
        <function-ref name="setChannel" scoped="" ref="0x7f151898edc0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f151898d020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f151898d1a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f151898d330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f151898d4b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f151898d640"/>
        <function-ref name="sync" scoped="" ref="0x7f151898d7c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f151898da50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f151898dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1518993630" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1518993630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1518993980"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1518993b08"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1518993c90"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1518993e18"/>
        <function-ref name="setCca" scoped="" ref="0x7f1518992020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15189921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1518994ae8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f1518994ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1518994e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f151898cc78" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f151898cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f151898b020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f151898b1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f151898b330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f151898b4b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f151898b640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f151898b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15189958c8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f15189958c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518995c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1518995da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518994020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15189941a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1518994330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1518998020" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1518998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518998370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15189984f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518998680"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518998808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518998990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1518997d10" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1518997d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15189960a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1518990970" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1518990970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1518990cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1518990e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f151898f020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f151898f1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f151898f330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f151898f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f151898c020" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f151898c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f151898c470"/>
        <function-ref name="changed" scoped="" ref="0x7f151898c5f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f151898c780"/>
        <function-ref name="setAddress" scoped="" ref="0x7f151898c908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f151898f7a8" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f151898f7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f151898faf8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f151898fc80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f151898fe08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15189971c8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15189971c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518997518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f151898a740" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f151898a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f151898aa90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f151898ac18"/>
        <function-ref name="led1On" scoped="" ref="0x7f151898ada0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518989020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15189891a8"/>
        <function-ref name="get" scoped="" ref="0x7f1518989330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15189894b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518989ad8"/>
        <function-ref name="set" scoped="" ref="0x7f1518989640"/>
        <function-ref name="led0On" scoped="" ref="0x7f15189897c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518989950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1518996340" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1518996340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1518996690"/>
        <function-ref name="source" scoped="" ref="0x7f1518996818"/>
        <function-ref name="address" scoped="" ref="0x7f15189969a0"/>
        <function-ref name="destination" scoped="" ref="0x7f1518996b28"/>
        <function-ref name="setSource" scoped="" ref="0x7f1518996cb0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1518996e38"/>
        <function-ref name="type" scoped="" ref="0x7f1518995020"/>
        <function-ref name="setType" scoped="" ref="0x7f15189951a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1518995330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15189954b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1518995640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f151898bb30" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f151898bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151898be80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151898a030"/>
        <function-ref name="request" scoped="" ref="0x7f151898a1b8"/>
        <function-ref name="granted" scoped="" ref="0x7f151898a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151898a4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f151886f080" loc="49:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f151886f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151886f3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151886f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151886f6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f151886f868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151886f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f151886fc38" loc="50:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f151886fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151886e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151886e1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151886e330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151886e4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151886e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f151886e888" loc="51:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151886e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f151886ebd8"/>
        <function-ref name="source" scoped="" ref="0x7f151886ed60"/>
        <function-ref name="address" scoped="" ref="0x7f151886d020"/>
        <function-ref name="destination" scoped="" ref="0x7f151886d1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f151886d330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f151886d4b8"/>
        <function-ref name="type" scoped="" ref="0x7f151886d640"/>
        <function-ref name="setType" scoped="" ref="0x7f151886d7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f151886d950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f151886dad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151886dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f151886c020" loc="52:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f151886c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151886c370"/>
        <function-ref name="noAck" scoped="" ref="0x7f151886c4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151886c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1517c17518" loc="49:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1517c17518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1517c17868"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1517c179f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1517c17b78"/>
        <function-ref name="cancel" scoped="" ref="0x7f1517c17d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1517c16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1517c16268" loc="50:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1517c16268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1517c165b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1517c16740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1517c168c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1517c16a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1517c16bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1517c16e20" loc="51:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1517c16e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1517c151a8"/>
        <function-ref name="source" scoped="" ref="0x7f1517c15330"/>
        <function-ref name="address" scoped="" ref="0x7f1517c154b8"/>
        <function-ref name="destination" scoped="" ref="0x7f1517c15640"/>
        <function-ref name="setSource" scoped="" ref="0x7f1517c157c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1517c15950"/>
        <function-ref name="type" scoped="" ref="0x7f1517c15ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f1517c15c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1517c15de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1517c14020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1517c141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1517c14430" loc="52:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f1517c14430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1517c14780"/>
        <function-ref name="noAck" scoped="" ref="0x7f1517c14908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1517c14a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1517c0b7c8" loc="44:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1517c0b7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1517c0bb18"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1517c0bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1517c0be28"/>
        <function-ref name="cancel" scoped="" ref="0x7f1517c0a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1517c0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1517c0a450" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1517c0a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1517c0a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1517c0a928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1517c0aab0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1517c0ac38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1517c0adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1517c09060" loc="47:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1517c09060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1517c093b0"/>
        <function-ref name="source" scoped="" ref="0x7f1517c09538"/>
        <function-ref name="address" scoped="" ref="0x7f1517c096c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1517c09848"/>
        <function-ref name="setSource" scoped="" ref="0x7f1517c099d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1517c09b58"/>
        <function-ref name="type" scoped="" ref="0x7f1517c09ce0"/>
        <function-ref name="setType" scoped="" ref="0x7f1517c09e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1517c08020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1517c081a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1517c08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15188e34f8" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15188e34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15188e3848"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15188e39d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15188e3b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f15188e3ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15188e3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f151889b6f8" loc="48:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f151889b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151889ba68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151889bbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151889bd78"/>
        <function-ref name="cancel" scoped="" ref="0x7f151889a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151889a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f151889c920" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f151889c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f151889cc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151889ce18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151889b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f151889b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f151889b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1518898a10" loc="50:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1518898a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518898d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1518897020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15188971a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518897330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15188974b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1518897780" loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f1518897780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518897ad0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1518897c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1518896020" loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f1518896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518896370"/>
        <function-ref name="runTask" scoped="" ref="0x7f15188964f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f151889a3f0" loc="49:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151889a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f151889a740"/>
        <function-ref name="source" scoped="" ref="0x7f151889a8c8"/>
        <function-ref name="address" scoped="" ref="0x7f151889aa50"/>
        <function-ref name="destination" scoped="" ref="0x7f151889abd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f151889ad60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1518898020"/>
        <function-ref name="type" scoped="" ref="0x7f15188981a8"/>
        <function-ref name="setType" scoped="" ref="0x7f1518898330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15188984b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1518898640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15188987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1518892248" loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1518892248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1518892598"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1518892720"/>
        <function-ref name="start" scoped="" ref="0x7f15188928a8"/>
        <function-ref name="stop" scoped="" ref="0x7f1518892a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1518891208" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1518891208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1518891558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15188916e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1518891868"/>
        <function-ref name="cancel" scoped="" ref="0x7f15188919f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1518891b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f151888f020" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f151888f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151888f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f151888f5f8" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f151888f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151888f948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f151888fad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f151888fc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f151888fde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f151888e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f151888b6b8" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f151888b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f151888ac58"/>
        <function-ref name="clear" scoped="" ref="0x7f1518889380"/>
        <function-ref name="isValid" scoped="" ref="0x7f151888a578"/>
        <function-ref name="set" scoped="" ref="0x7f1518889a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1518883170" loc="66:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1518883170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15188834c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1518883648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15188837d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1518883958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1518890348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1518890348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1518890698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f151888c968" loc="63:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f151888c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f151888ccb8"/>
        <function-ref name="noAck" scoped="" ref="0x7f151888ce40"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f151888b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f151888e2c0" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f151888e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f151888e610"/>
        <function-ref name="source" scoped="" ref="0x7f151888e798"/>
        <function-ref name="address" scoped="" ref="0x7f151888e920"/>
        <function-ref name="destination" scoped="" ref="0x7f151888eaa8"/>
        <function-ref name="setSource" scoped="" ref="0x7f151888ec30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f151888edb8"/>
        <function-ref name="type" scoped="" ref="0x7f151888c020"/>
        <function-ref name="setType" scoped="" ref="0x7f151888c1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f151888c330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f151888c4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f151888c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1518887670" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1518887670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518886ad0"/>
        <function-ref name="clear" scoped="" ref="0x7f15188851f0"/>
        <function-ref name="isValid" scoped="" ref="0x7f15188863f0"/>
        <function-ref name="set" scoped="" ref="0x7f15188858d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15188684a8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f15188684a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518866088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15188666b0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f15188666b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1519a0f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1518865578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1518864020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1518865a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f15188644a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15188638c8" loc="20:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f15188638c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f151885f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518848420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TimeSyncC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518848420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15188446c8"/>
        <function-ref name="fired" scoped="" ref="0x7f1518847db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518845ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518845688"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518843020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518844b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518845238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518847020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15188440f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15188474c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518847960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1518842d58" loc="46:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1518842d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151883f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f151883f390" loc="47:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f151883f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f151883f6e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f151883f868"/>
        <function-ref name="led1On" scoped="" ref="0x7f151883f9f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f151883fb78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f151883fd00"/>
        <function-ref name="get" scoped="" ref="0x7f151883e020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f151883e1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f151883e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f151883e330"/>
        <function-ref name="led0On" scoped="" ref="0x7f151883e4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f151883e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f151880a150" loc="58:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f151880a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1518809020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1518815020" loc="52:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1518815020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1518813478"/>
        <function-ref name="clear" scoped="" ref="0x7f1518813b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f1518815d70"/>
        <function-ref name="set" scoped="" ref="0x7f1518812278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1518812a28" loc="53:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1518812a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1518812d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GlobalTime" ref="0x7f151882a6a8" loc="43:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7f151882a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7f15188273a8"/>
        <function-ref name="global2Local" scoped="" ref="0x7f15188252a8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7f1518827830"/>
        <function-ref name="local2Global" scoped="" ref="0x7f1518827d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1518819080" loc="48:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1518819080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15188193d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518819558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15188196e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518819868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15188199f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1518819c78" loc="49:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1518819c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518818020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15188181a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1518818330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15188184b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1518818640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f151880c890" loc="57:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f151880c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151880cbe0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151880cd68"/>
        <function-ref name="start" scoped="" ref="0x7f151880b020"/>
        <function-ref name="stop" scoped="" ref="0x7f151880b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoRead" ref="0x7f1518811228" loc="54:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoRead" scoped="" ref="0x7f1518811228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518811d70"/>
        <function-ref name="readDone" scoped="" ref="0x7f151880f1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1518820aa8" loc="45:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1518820aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f151881cd60"/>
        <function-ref name="fired" scoped="" ref="0x7f151881e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f151881c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f151881ed10"/>
        <function-ref name="getdt" scoped="" ref="0x7f151881b648"/>
        <function-ref name="gett0" scoped="" ref="0x7f151881b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f151881e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f151881f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f151881c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f151881fac0"/>
        <function-ref name="stop" scoped="" ref="0x7f151881e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Check" ref="0x7f1518825900" loc="44:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Check" scoped="" ref="0x7f1518825900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518822bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f1518823278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1518822020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518823b18"/>
        <function-ref name="getdt" scoped="" ref="0x7f15188204d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518820088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15188236c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518824490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15188225f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518824930"/>
        <function-ref name="stop" scoped="" ref="0x7f1518824dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncInfo" ref="0x7f151881baa0" loc="46:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7f151881baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7f151881bdf0"/>
        <function-ref name="getRootID" scoped="" ref="0x7f151881a020"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7f151881a1a8"/>
        <function-ref name="getOffset" scoped="" ref="0x7f151881a330"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7f151881a4b8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7f151881a640"/>
        <function-ref name="getSkew" scoped="" ref="0x7f151881a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f151881aa58" loc="47:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f151881aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f151881ada8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7f151880f978" loc="55:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x7f151880f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151880e620"/>
        <function-ref name="readDone" scoped="" ref="0x7f151880ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15188175a8" loc="51:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15188175a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15188178f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1518817a80"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518817c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1518817d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518816020"/>
        <function-ref name="get" scoped="" ref="0x7f15188161a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518816330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1518816950"/>
        <function-ref name="set" scoped="" ref="0x7f15188164b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518816640"/>
        <function-ref name="led2On" scoped="" ref="0x7f15188167c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicRead" ref="0x7f151880d210" loc="56:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicRead" scoped="" ref="0x7f151880d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151880dd58"/>
        <function-ref name="readDone" scoped="" ref="0x7f151880c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f15188188f0" loc="50:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f15188188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1518818c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1518818dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1518817020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15188171a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1518817330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x7f1518244898" loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x7f1518244898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518243458"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182438a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelX" ref="0x7f15182416c0" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelX" scoped="" ref="0x7f15182416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518240370"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sounder" ref="0x7f1518248478" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sounder" scoped="" ref="0x7f1518248478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f15182487c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7f151823d508" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7f151823d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151823c088"/>
        <function-ref name="readDone" scoped="" ref="0x7f151823c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Microphone" ref="0x7f1518242020" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Microphone" scoped="" ref="0x7f1518242020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518242b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelY" ref="0x7f1518240e60" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelY" scoped="" ref="0x7f1518240e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151823e9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f151823ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Vref" ref="0x7f1518248b58" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vref" scoped="" ref="0x7f1518248b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182476f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518247b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7f1518245228" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7f1518245228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518245d70"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182441f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7f151823cb78" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7f151823cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151823b6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f151823bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f15187d2db8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f15187d2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f15187ce170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f15187cebb8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f15187cebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f15187cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7f15187c6500" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7f15187c6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187c6850"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187c69d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187c6b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187c6ce8"/>
        <function-ref name="get" scoped="" ref="0x7f15187c6e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187c5020"/>
        <function-ref name="set" scoped="" ref="0x7f15187c51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15187c5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15187cb448" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15187cb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15187c86c8"/>
        <function-ref name="fired" scoped="" ref="0x7f15187cadb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15187c9ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15187c9688"/>
        <function-ref name="getdt" scoped="" ref="0x7f15187c6020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15187c8b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15187c9238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15187ca020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15187c80f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15187ca4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f15187ca960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15187cdb88" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15187cdb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15187bddd8"/>
        <function-ref name="fired" scoped="" ref="0x7f15187be510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15187bd238"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15187bedb0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15187bb6c8"/>
        <function-ref name="gett0" scoped="" ref="0x7f15187bb278"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15187be960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15187cc728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15187bd808"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15187ccbc8"/>
        <function-ref name="stop" scoped="" ref="0x7f15187be0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f15187aaca8" loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f15187aaca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187a9020"/>
        <function-ref name="disable" scoped="" ref="0x7f15187a91a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15187a9330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15187a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f15187a03d8" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f15187a03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a0728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f15187b4180" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f15187b4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b44d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b4658"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b4968"/>
        <function-ref name="get" scoped="" ref="0x7f15187b4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b4c78"/>
        <function-ref name="set" scoped="" ref="0x7f15187b4e00"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f15187b1638" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f15187b1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b1988"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b1b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b1c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b1e20"/>
        <function-ref name="get" scoped="" ref="0x7f15187b0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b01a8"/>
        <function-ref name="set" scoped="" ref="0x7f15187b0330"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f15187a2760" loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f15187a2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f15187a1490" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f15187a1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f15187aeae0" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f15187aeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187aee30"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187ad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187ad330"/>
        <function-ref name="get" scoped="" ref="0x7f15187ad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187ad640"/>
        <function-ref name="set" scoped="" ref="0x7f15187ad7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15187ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f15187a44f8" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f15187a44f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187a4848"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187a49d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187a4b58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187a4ce0"/>
        <function-ref name="get" scoped="" ref="0x7f15187a4e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187a3020"/>
        <function-ref name="set" scoped="" ref="0x7f15187a31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15187a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f15187b7de0" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f15187b7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b6170"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b62f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b6480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b6608"/>
        <function-ref name="get" scoped="" ref="0x7f15187b6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b6918"/>
        <function-ref name="set" scoped="" ref="0x7f15187b6aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f15187b3328" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f15187b3328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b3678"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b3800"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b3988"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b3b10"/>
        <function-ref name="get" scoped="" ref="0x7f15187b3c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b3e20"/>
        <function-ref name="set" scoped="" ref="0x7f15187b2020"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f15187a7548" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f15187a7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187a7898"/>
        <function-ref name="disable" scoped="" ref="0x7f15187a7a20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15187a7ba8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15187a7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f15187a0a48" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f15187a0a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f15187a5370" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f15187a5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187a56c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187a5848"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187a59d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187a5b58"/>
        <function-ref name="get" scoped="" ref="0x7f15187a5ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187a5e68"/>
        <function-ref name="set" scoped="" ref="0x7f15187a4020"/>
        <function-ref name="clr" scoped="" ref="0x7f15187a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f15187b07c0" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f15187b07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b0b10"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b0c98"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187af020"/>
        <function-ref name="get" scoped="" ref="0x7f15187af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187af330"/>
        <function-ref name="set" scoped="" ref="0x7f15187af4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f15187af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f15187aa020" loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f15187aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187aa470"/>
        <function-ref name="disable" scoped="" ref="0x7f15187aa5f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15187aa780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15187aa908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f15187a1d00" loc="51:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f15187a1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f15187adc68" loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f15187adc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187ac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187ac330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187ac4b8"/>
        <function-ref name="get" scoped="" ref="0x7f15187ac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187ac7c8"/>
        <function-ref name="set" scoped="" ref="0x7f15187ac950"/>
        <function-ref name="clr" scoped="" ref="0x7f15187acad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f15187b5020" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f15187b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b5370"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b54f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b5680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b5808"/>
        <function-ref name="get" scoped="" ref="0x7f15187b5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b5b18"/>
        <function-ref name="set" scoped="" ref="0x7f15187b5ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f15187b24b0" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f15187b24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b2800"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b2988"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b2b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b2c98"/>
        <function-ref name="get" scoped="" ref="0x7f15187b2e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b1020"/>
        <function-ref name="set" scoped="" ref="0x7f15187b11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f15187a20f0" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f15187a20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f15187a2dd0" loc="49:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f15187a2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187a1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f15187af958" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f15187af958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187afca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187afe30"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187ae1a8"/>
        <function-ref name="get" scoped="" ref="0x7f15187ae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187ae4b8"/>
        <function-ref name="set" scoped="" ref="0x7f15187ae640"/>
        <function-ref name="clr" scoped="" ref="0x7f15187ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f15187a9858" loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f15187a9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187a9ba8"/>
        <function-ref name="disable" scoped="" ref="0x7f15187a9d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15187a7020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15187a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f15187a60c8" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f15187a60c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187a6418"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187a65a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187a6728"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187a68b0"/>
        <function-ref name="get" scoped="" ref="0x7f15187a6a38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187a6bc0"/>
        <function-ref name="set" scoped="" ref="0x7f15187a6d48"/>
        <function-ref name="clr" scoped="" ref="0x7f15187a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f151879f3c0" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f151879f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f15187bab48" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f15187bab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187b7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187b71a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187b7330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187b74b8"/>
        <function-ref name="get" scoped="" ref="0x7f15187b7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187b77c8"/>
        <function-ref name="set" scoped="" ref="0x7f15187b7950"/>
        <function-ref name="clr" scoped="" ref="0x7f15187b7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f15187acdf0" loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f15187acdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15187ab170"/>
        <function-ref name="isInput" scoped="" ref="0x7f15187ab2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f15187ab480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15187ab608"/>
        <function-ref name="get" scoped="" ref="0x7f15187ab790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15187ab918"/>
        <function-ref name="set" scoped="" ref="0x7f15187abaa0"/>
        <function-ref name="clr" scoped="" ref="0x7f15187abc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f151879e640" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f151879e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f151879ba30" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f151879ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f151879a760" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f151879a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f151879ecb0" loc="19:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f151879ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f151879add0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f151879add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f1518798170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f151879b3c0" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f151879b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f151879a0f0" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f151879a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151879a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f1518798490" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f1518798490"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15187987e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f1518789100" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518789100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518789450"/>
        <function-ref name="fired" scoped="" ref="0x7f15187895d8"/>
        <function-ref name="disable" scoped="" ref="0x7f1518789760"/>
        <function-ref name="edge" scoped="" ref="0x7f15187898e8"/>
        <function-ref name="enable" scoped="" ref="0x7f1518789a70"/>
        <function-ref name="getValue" scoped="" ref="0x7f1518789bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f151878b620" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f151878b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151878b970"/>
        <function-ref name="disable" scoped="" ref="0x7f151878baf8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f151878bc80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f151878be08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f1518786800" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518786800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518786b50"/>
        <function-ref name="fired" scoped="" ref="0x7f1518786cd8"/>
        <function-ref name="disable" scoped="" ref="0x7f1518786e60"/>
        <function-ref name="edge" scoped="" ref="0x7f1518785020"/>
        <function-ref name="enable" scoped="" ref="0x7f15187851a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f1518785330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1518787d00" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f1518787d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187860a0"/>
        <function-ref name="disable" scoped="" ref="0x7f1518786228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15187863b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1518786538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f1518782020" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f1518782020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1518782370"/>
        <function-ref name="fired" scoped="" ref="0x7f15187824f8"/>
        <function-ref name="disable" scoped="" ref="0x7f1518782680"/>
        <function-ref name="edge" scoped="" ref="0x7f1518782808"/>
        <function-ref name="enable" scoped="" ref="0x7f1518782990"/>
        <function-ref name="getValue" scoped="" ref="0x7f1518782b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1518783458" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f1518783458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15187837a8"/>
        <function-ref name="disable" scoped="" ref="0x7f1518783930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1518783ab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1518783c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f151877f780" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f151877f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f151877fad0"/>
        <function-ref name="fired" scoped="" ref="0x7f151877fc58"/>
        <function-ref name="disable" scoped="" ref="0x7f151877fde0"/>
        <function-ref name="edge" scoped="" ref="0x7f151877e020"/>
        <function-ref name="enable" scoped="" ref="0x7f151877e1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f151877e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1518780c80" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f1518780c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f151877f020"/>
        <function-ref name="disable" scoped="" ref="0x7f151877f1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f151877f330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f151877f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bbebc0" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bbebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bbd740"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bbdb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517b7e3f0" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b7e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517b7e740"/>
        <function-ref name="configure" scoped="" ref="0x7f1517b7e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517b804a0" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517b804a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517b7f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517b7f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f1517b7fa28" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b7fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1517b7fd78"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1517b7e020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1517b7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1518761c90" loc="18:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1518761c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151875c820"/>
        <function-ref name="readDone" scoped="" ref="0x7f151875cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1518757a00" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f1518757a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15187595b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518759a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f1518756670" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1518756670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15187569c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1518756b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1518756cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15187554c0" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15187554c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518755810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518755998"/>
        <function-ref name="request" scoped="" ref="0x7f1518755b20"/>
        <function-ref name="granted" scoped="" ref="0x7f1518755ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518755e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151874f890" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151874f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151874fbe0"/>
        <function-ref name="configure" scoped="" ref="0x7f151874fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f15187459b0" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f15187459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1518745d00"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151874f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f151874a0d0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f151874a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f151874a420"/>
        <function-ref name="cancel" scoped="" ref="0x7f151874a5a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151874a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518750020" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518750370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15187504f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518750680"/>
        <function-ref name="granted" scoped="" ref="0x7f1518750808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518750990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f151874ed40" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f151874ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15187420d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f151873e628" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f151873e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f151873e978"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151873eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f1518742b70" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f1518742b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f151873e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f151873e1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151873e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f151872f0d0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f151872f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f151872f420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f151872f5a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f151872f730"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f151872f8b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f151872fa40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f151872fbc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f151872fd50"/>
        <function-ref name="isComplete" scoped="" ref="0x7f151873c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f151873c1a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f151873c330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f151873c4b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f151873c640"/>
        <function-ref name="startConversion" scoped="" ref="0x7f151873c7c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f151873ca50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f151873cbd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f151873cd60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f151873b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f151873b1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f151873b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f15187423b8" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15187423b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1518742708"/>
        <function-ref name="stop" scoped="" ref="0x7f1518742890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f151873b610" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f151873b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f151873b960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f151873bae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f151873bc70"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f151873bdf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f151872e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f1518743a20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f1518743a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f1518743d70"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f15186fc020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f15186fc1a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f15186fc330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f15186fc4b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f15186fc640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f15186fc7c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7f15186fc950"/>
        <function-ref name="cancel" scoped="" ref="0x7f15186fcad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f15186fcc60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f15186fcde8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f15186fb020"/>
        <function-ref name="startConversion" scoped="" ref="0x7f15186fb1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f15186fb430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f15186fb5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f15186fb740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f15186fb8c8"/>
        <function-ref name="getValue" scoped="" ref="0x7f15186fba50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f15186fbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f15186fac40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f15186fac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f15186f7020"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f15186f71a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f15186f7330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f15186f74b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f15186f7640"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f15186f77c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f15186f7950"/>
        <function-ref name="isComplete" scoped="" ref="0x7f15186f7ad8"/>
        <function-ref name="cancel" scoped="" ref="0x7f15186f7c60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f15186f7de8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f15186f6020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f15186f61a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f15186f6330"/>
        <function-ref name="isStarted" scoped="" ref="0x7f15186f65b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f15186f6740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f15186f68c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f15186f6a50"/>
        <function-ref name="getValue" scoped="" ref="0x7f15186f6bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f15186f6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f15186f50c0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f15186f50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f15186f5410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518651698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518651698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518651a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518651b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151864e3c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151864e3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151864e738"/>
        <function-ref name="configure" scoped="" ref="0x7f151864e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1518651dd8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518651dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518650170"/>
        <function-ref name="requested" scoped="" ref="0x7f15186502f8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518650480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518650608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518650790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518652840" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518652840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518652bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518652d38"/>
        <function-ref name="request" scoped="" ref="0x7f1518651020"/>
        <function-ref name="granted" scoped="" ref="0x7f15186511a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518651330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15186509d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15186509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518650d28"/>
        <function-ref name="userId" scoped="" ref="0x7f151864e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517b6e7f0" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517b6e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517b6eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1517b6edc8" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517b6edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517b6d170"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517b6d2f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517b6d480"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517b6d608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517b6bb48" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517b6bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517b6a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517b6a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517b698c0" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517b69c30"/>
        <function-ref name="configure" scoped="" ref="0x7f1517b69db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517b670a0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517b670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517b673f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517b67578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517b67700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517b67888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517b6a3f0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b6a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517b6a740"/>
        <function-ref name="requested" scoped="" ref="0x7f1517b6a8c8"/>
        <function-ref name="granted" scoped="" ref="0x7f1517b6aa50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517b6abd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517b6ad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517b67ad0" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517b67ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517b67e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517b66020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517b661a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517b66330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517b664b8"/>
        <function-ref name="get" scoped="" ref="0x7f1517b66640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517b667c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517b66de8"/>
        <function-ref name="set" scoped="" ref="0x7f1517b66ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517b66950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517b66c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517b6ce20" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517b6ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517b6b1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517b6b348"/>
        <function-ref name="request" scoped="" ref="0x7f1517b6b4d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1517b6b658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517b6b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517b69020" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517b69370"/>
        <function-ref name="userId" scoped="" ref="0x7f1517b694f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517b65100" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517b65100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517b65450"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517b655d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f151864b780" loc="72:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151864b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f151864bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f151864bd18" loc="73:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151864bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15186360a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1518636228"/>
        <function-ref name="granted" scoped="" ref="0x7f15186363b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518636538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15186366c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f151864b060" loc="70:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f151864b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f151864b3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f151864b538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1518636908" loc="74:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518636908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518636c58"/>
        <function-ref name="userId" scoped="" ref="0x7f1518636de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1517b34740" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517b34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1517b34a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1517b34cd8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b34cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517b330a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1517b33228"/>
        <function-ref name="granted" scoped="" ref="0x7f1517b333b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517b33538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517b336c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1517b34020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1517b34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1517b34370"/>
        <function-ref name="stop" scoped="" ref="0x7f1517b344f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1517b33908" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b33908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517b33c58"/>
        <function-ref name="userId" scoped="" ref="0x7f1517b33de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f151862d6a0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f151862d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151862c370"/>
        <function-ref name="readDone" scoped="" ref="0x7f151862c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f151862b428" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f151862b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151862a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f151862a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f15186289a0" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15186289a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1518628cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1518628e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1518627030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f151862ab18" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f151862ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f151862ae68"/>
        <function-ref name="cancel" scoped="" ref="0x7f1518628020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f15186281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f15186174d8" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f15186174d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1518617828"/>
        <function-ref name="runTask" scoped="" ref="0x7f15186179b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1518605680" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1518605680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185ed370"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185ed7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f15185ec060" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f15185ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185ecbc8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185eb088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15185eb720" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15185eb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15185eba90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15185ebc18"/>
        <function-ref name="request" scoped="" ref="0x7f15185ebda0"/>
        <function-ref name="granted" scoped="" ref="0x7f15185e9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15185e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f15185e0438" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15185e0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15185e0788"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15185e0910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15185e0a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bba058" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bba058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bbaba0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x7f15185d08a0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x7f15185d08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185cf458"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185cf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7f15185c8020" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7f15185c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185c8b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x7f15185cd578" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x7f15185cd578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185cc0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185cc548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7f15185cb2b0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7f15185cb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185cbdf8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185ca278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f15185c3b10" loc="21:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f15185c3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15185c3e60"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15185c2020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15185c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f15185c3148" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f15185c3148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15185c3498"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15185c3620"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15185c37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15185c4428" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15185c4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15185c4778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15185c4900"/>
        <function-ref name="request" scoped="" ref="0x7f15185c4a88"/>
        <function-ref name="granted" scoped="" ref="0x7f15185c4c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15185c4d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15185c2cd0" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15185c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15185bf0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15185bf228"/>
        <function-ref name="start" scoped="" ref="0x7f15185bf3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f15185bf538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f15185be388" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f15185be388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15185be6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15185be860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15185be9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x7f15185b66c0" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x7f15185b66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15185b6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x7f15185b6020" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x7f15185b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15185b6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f15185bf8a0" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f15185bf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15185bfbf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15185bfd78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15185be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f15185a9c10" loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f15185a9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15185a8020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15185a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x7f15185b9e30" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x7f15185b9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15185b71a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f15185b7330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15185b74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15185b7640"/>
        <function-ref name="get" scoped="" ref="0x7f15185b77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15185b7950"/>
        <function-ref name="set" scoped="" ref="0x7f15185b7ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f15185b7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15185bee30" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15185bee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15185b90c0"/>
        <function-ref name="fired" scoped="" ref="0x7f15185bb798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15185ba4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15185ba088"/>
        <function-ref name="getdt" scoped="" ref="0x7f15185b9960"/>
        <function-ref name="gett0" scoped="" ref="0x7f15185b9510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15185bbbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15185bc9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15185baaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15185bce80"/>
        <function-ref name="stop" scoped="" ref="0x7f15185bb348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15185a4b68" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15185a4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15185a1d98"/>
        <function-ref name="fired" scoped="" ref="0x7f15185a24d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15185a11f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15185a2d78"/>
        <function-ref name="getdt" scoped="" ref="0x7f15185a0688"/>
        <function-ref name="gett0" scoped="" ref="0x7f15185a0238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15185a2928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15185a36f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15185a17c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15185a3b90"/>
        <function-ref name="stop" scoped="" ref="0x7f15185a2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f151859c510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f151859c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f151859c880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151859ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151859a140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151859a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151859a4b0"/>
        <function-ref name="configure" scoped="" ref="0x7f151859a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f151859cc50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151859cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151859b020"/>
        <function-ref name="requested" scoped="" ref="0x7f151859b1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f151859b330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151859b4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151859b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151859d748" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151859d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151859dab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151859dc40"/>
        <function-ref name="request" scoped="" ref="0x7f151859ddc8"/>
        <function-ref name="granted" scoped="" ref="0x7f151859c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151859c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f151859b888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151859b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151859bbd8"/>
        <function-ref name="userId" scoped="" ref="0x7f151859bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517b13cc0" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517b13cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517b120a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1517b12328" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517b12328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517b12678"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517b12800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517b12988"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517b12b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517b0f200" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517b0f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517b0f570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517b0f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517b0ee18" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b0ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517b0d1c0"/>
        <function-ref name="configure" scoped="" ref="0x7f1517b0d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517b0d5d0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517b0d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517b0d920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517b0daa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517b0dc30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517b0ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517b0f940" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517b0f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517b0fc90"/>
        <function-ref name="requested" scoped="" ref="0x7f1517b0fe18"/>
        <function-ref name="granted" scoped="" ref="0x7f1517b0e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517b0e1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517b0e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517b0c060" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517b0c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517b0c3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517b0c538"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517b0c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517b0c848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517b0c9d0"/>
        <function-ref name="get" scoped="" ref="0x7f1517b0cb58"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517b0cce0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517b0a330"/>
        <function-ref name="set" scoped="" ref="0x7f1517b0a020"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517b0ce68"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517b0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517b104b0" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517b104b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517b10820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517b109a8"/>
        <function-ref name="request" scoped="" ref="0x7f1517b10b30"/>
        <function-ref name="granted" scoped="" ref="0x7f1517b10cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517b10e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517b0e578" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517b0e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517b0e8c8"/>
        <function-ref name="userId" scoped="" ref="0x7f1517b0ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517b0a5f8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517b0a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517b0a948"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517b0aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1518597d50" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1518597d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151856d0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151856d260"/>
        <function-ref name="start" scoped="" ref="0x7f151856d3e8"/>
        <function-ref name="stop" scoped="" ref="0x7f151856d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f151856d7b8" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151856d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f151856db08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f151856dd50" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151856dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151856c0d8"/>
        <function-ref name="requested" scoped="" ref="0x7f151856c260"/>
        <function-ref name="granted" scoped="" ref="0x7f151856c3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151856c570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151856c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f151856c940" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151856c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151856cc90"/>
        <function-ref name="userId" scoped="" ref="0x7f151856ce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1517ad9d58" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1517ad9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1517ad80d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1517ad8260"/>
        <function-ref name="start" scoped="" ref="0x7f1517ad83e8"/>
        <function-ref name="stop" scoped="" ref="0x7f1517ad8570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1517ad87b8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517ad87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1517ad8b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1517ad6120" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f1517ad6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517ad6470"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517ad65f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1517ad8d50" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517ad8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517ad70d8"/>
        <function-ref name="requested" scoped="" ref="0x7f1517ad7260"/>
        <function-ref name="granted" scoped="" ref="0x7f1517ad73e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517ad7570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517ad76f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f1517ad68c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f1517ad68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517ad6c10"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517ad6d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1517ad9638" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1517ad9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1517ad9988"/>
        <function-ref name="stop" scoped="" ref="0x7f1517ad9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1517ad7940" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517ad7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517ad7c90"/>
        <function-ref name="userId" scoped="" ref="0x7f1517ad7e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1518565d98" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1518565d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518564930"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518564da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f1518563628" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f1518563628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15185611e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518561658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1518561cf0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518561cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15185600a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518560228"/>
        <function-ref name="request" scoped="" ref="0x7f15185603b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518560538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15185606c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f151855e2e8" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f151855e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151855ee50"/>
        <function-ref name="readDone" scoped="" ref="0x7f151855d2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f151855db28" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f151855db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151855b6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f151855bb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f151855a240" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151855a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151855a5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151855a738"/>
        <function-ref name="request" scoped="" ref="0x7f151855a8c0"/>
        <function-ref name="granted" scoped="" ref="0x7f151855aa48"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151855abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517b21e80" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517b21e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517b201f8"/>
        <function-ref name="configure" scoped="" ref="0x7f1517b20380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517b22020" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517b22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517b22b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517b21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f1517b215d8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517b215d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1517b21928"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1517b21ab0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1517b21c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bb8498" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bb8498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bb7020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bb7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517aad060" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517aad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517aad3b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1517aad538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517aaf1c8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517aaf1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517aafd10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517aae1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f1517aae778" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f1517aae778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1517aaeac8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1517aaec50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1517aaedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bb68d8" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bb68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bb5458"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bb58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f151853b4c0" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f151853b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151853a088"/>
        <function-ref name="readDone" scoped="" ref="0x7f151853a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7f1518531020" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7f1518531020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518531b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f151852f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7f15185399c0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7f15185399c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518539d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518536020"/>
        <function-ref name="request" scoped="" ref="0x7f15185361a8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518536330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15185364b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7f1518536d70" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f1518536d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15185340f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518534278"/>
        <function-ref name="request" scoped="" ref="0x7f1518534400"/>
        <function-ref name="granted" scoped="" ref="0x7f1518534588"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518534710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7f15185331c8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7f15185331c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518533d10"/>
        <function-ref name="readDone" scoped="" ref="0x7f15185321c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7f151852cb68" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f151852cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f151852b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f151852c158" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151852c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f151852c4a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f151852c630"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f151852c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518526398" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518526398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518526708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518526890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1518523020" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1518523020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1518523390"/>
        <function-ref name="configure" scoped="" ref="0x7f1518523518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1518526ad8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518526ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518526e28"/>
        <function-ref name="requested" scoped="" ref="0x7f1518525020"/>
        <function-ref name="granted" scoped="" ref="0x7f15185251a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518525330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15185254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151852d678" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151852d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151852d9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151852db70"/>
        <function-ref name="request" scoped="" ref="0x7f151852dcf8"/>
        <function-ref name="granted" scoped="" ref="0x7f151852de80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518526030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1518525700" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518525700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518525a50"/>
        <function-ref name="userId" scoped="" ref="0x7f1518525bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517a9a520" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517a9a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517a9a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1517a9aaf8" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a9aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a9ae48"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a99020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a991a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517a969a8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a969a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517a96d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517a946f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a946f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517a94a68"/>
        <function-ref name="configure" scoped="" ref="0x7f1517a94bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517a94e78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517a94e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a931f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a93380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a93508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517a95268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a95268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a955b8"/>
        <function-ref name="requested" scoped="" ref="0x7f1517a95740"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a958c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a95a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a95bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517a938d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517a938d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517a93c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517a93db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517a92020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517a921a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517a92330"/>
        <function-ref name="get" scoped="" ref="0x7f1517a924b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517a92640"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517a92c60"/>
        <function-ref name="set" scoped="" ref="0x7f1517a92950"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517a927c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517a92ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517a97bb8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517a97bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a96020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517a961a8"/>
        <function-ref name="request" scoped="" ref="0x7f1517a96330"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a964b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a96640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517a95e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a95e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517a941a8"/>
        <function-ref name="userId" scoped="" ref="0x7f1517a94330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517a91020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517a91370"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517a914f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518520510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518520510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518520880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518520a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151851e140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151851e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151851e4b0"/>
        <function-ref name="configure" scoped="" ref="0x7f151851e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1518520c50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518520c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151851f020"/>
        <function-ref name="requested" scoped="" ref="0x7f151851f1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f151851f330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151851f4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151851f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15185217c0" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15185217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518521b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518521cb8"/>
        <function-ref name="request" scoped="" ref="0x7f1518521e40"/>
        <function-ref name="granted" scoped="" ref="0x7f1518520020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15185201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f151851f888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151851f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151851fbd8"/>
        <function-ref name="userId" scoped="" ref="0x7f151851fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517a5e980" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517a5e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517a5ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1517a5d020" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a5d370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a5d4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a5d680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a5d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517a5bd58" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a5bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517a5a0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a5a278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517a59980" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a59980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517a59cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f1517a59e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517a57130" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517a57130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a57480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a57608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a57790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a57918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517a5a4c0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a5a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a5a810"/>
        <function-ref name="requested" scoped="" ref="0x7f1517a5a998"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a5ab20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a5aca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a5ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517a57b60" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517a57b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517a56020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517a561a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517a56330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517a564b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517a56640"/>
        <function-ref name="get" scoped="" ref="0x7f1517a567c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517a56950"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517a55020"/>
        <function-ref name="set" scoped="" ref="0x7f1517a56c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517a56ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517a56de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517a5b060" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517a5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a5b3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517a5b558"/>
        <function-ref name="request" scoped="" ref="0x7f1517a5b6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a5b868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a5b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517a590e0" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a590e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517a59430"/>
        <function-ref name="userId" scoped="" ref="0x7f1517a595b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517a552e8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517a552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517a55638"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517a557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f151851a698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f151851a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f151851aa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151851ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15185183c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15185183c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1518518738"/>
        <function-ref name="configure" scoped="" ref="0x7f15185188c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f151851add8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151851add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518519170"/>
        <function-ref name="requested" scoped="" ref="0x7f15185192f8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518519480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518519608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518519790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151851c910" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151851c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151851cc80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151851ce08"/>
        <function-ref name="request" scoped="" ref="0x7f151851a020"/>
        <function-ref name="granted" scoped="" ref="0x7f151851a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151851a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15185199d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185199d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518519d28"/>
        <function-ref name="userId" scoped="" ref="0x7f1518518020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1517a1a570" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1517a1a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517a1a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1517a1ab48" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1517a1ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a19020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a191a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a19330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517a16a28" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517a16a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517a16d98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1517a146f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1517a146f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517a14a68"/>
        <function-ref name="configure" scoped="" ref="0x7f1517a14bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517a14e78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517a14e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1517a131f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517a13380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517a13508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517a13690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517a15268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517a15268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a155b8"/>
        <function-ref name="requested" scoped="" ref="0x7f1517a15740"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a158c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a15a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517a15bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517a138d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517a138d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517a13c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517a13db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517a12020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517a121a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517a12330"/>
        <function-ref name="get" scoped="" ref="0x7f1517a124b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517a12640"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517a12c60"/>
        <function-ref name="set" scoped="" ref="0x7f1517a12950"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517a127c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517a12ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517a18cc8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517a18cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517a160a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517a16228"/>
        <function-ref name="request" scoped="" ref="0x7f1517a163b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1517a16538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517a166c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517a15e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517a15e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517a141a8"/>
        <function-ref name="userId" scoped="" ref="0x7f1517a14330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517a11020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517a11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517a11370"/>
        <function-ref name="runTask" scoped="" ref="0x7f1517a114f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1518516380" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1518516380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15185166d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1518516858"/>
        <function-ref name="start" scoped="" ref="0x7f15185169e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518516b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1518516db0" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518516db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1518515170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15185153b8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15185153b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518515708"/>
        <function-ref name="requested" scoped="" ref="0x7f1518515890"/>
        <function-ref name="granted" scoped="" ref="0x7f1518515a18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518515ba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518515d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1518514020" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518514020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518514370"/>
        <function-ref name="userId" scoped="" ref="0x7f15185144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f15179e0740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15179e0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15179e0a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15179e0c18"/>
        <function-ref name="start" scoped="" ref="0x7f15179e0da0"/>
        <function-ref name="stop" scoped="" ref="0x7f15179df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f15179df268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15179df268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15179df5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f15179ddb90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f15179ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15179dc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15179dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15179df800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15179df800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15179dfb50"/>
        <function-ref name="requested" scoped="" ref="0x7f15179dfcd8"/>
        <function-ref name="granted" scoped="" ref="0x7f15179dfe60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15179dd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15179dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f15179dc470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f15179dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15179dc7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15179dc948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f15179e0020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f15179e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15179e0370"/>
        <function-ref name="stop" scoped="" ref="0x7f15179e04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15179dd3f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15179dd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15179dd740"/>
        <function-ref name="userId" scoped="" ref="0x7f15179dd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1518513d80" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1518513d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1518512170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15185122f8"/>
        <function-ref name="start" scoped="" ref="0x7f1518512480"/>
        <function-ref name="stop" scoped="" ref="0x7f1518512608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1518512850" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518512850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1518512ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1518512de8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518512de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518510170"/>
        <function-ref name="requested" scoped="" ref="0x7f15185102f8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518510480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518510608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518510790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15185109d8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15185109d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518510d28"/>
        <function-ref name="userId" scoped="" ref="0x7f151850f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f15179c9ad8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15179c9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15179c9e28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15179c8020"/>
        <function-ref name="start" scoped="" ref="0x7f15179c81a8"/>
        <function-ref name="stop" scoped="" ref="0x7f15179c8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f15179c8578" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15179c8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15179c88c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f15179c6020" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f15179c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15179c6370"/>
        <function-ref name="runTask" scoped="" ref="0x7f15179c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15179c8b10" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15179c8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15179c8e60"/>
        <function-ref name="requested" scoped="" ref="0x7f15179c7020"/>
        <function-ref name="granted" scoped="" ref="0x7f15179c71a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15179c7330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15179c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f15179c67c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f15179c67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15179c6b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f15179c6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f15179c93b8" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f15179c93b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15179c9708"/>
        <function-ref name="stop" scoped="" ref="0x7f15179c9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15179c7700" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15179c7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15179c7a50"/>
        <function-ref name="userId" scoped="" ref="0x7f15179c7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15184ee270" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15184ee270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15184ee5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15184ee748"/>
        <function-ref name="start" scoped="" ref="0x7f15184ee8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f15184eea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f15184ec638" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f15184ec638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184ec988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15184ecb10"/>
        <function-ref name="request" scoped="" ref="0x7f15184ecc98"/>
        <function-ref name="granted" scoped="" ref="0x7f15184ece20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184ed020" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184edb88"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f15184e3d98" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f15184e3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15184e2170"/>
        <function-ref name="runTask" scoped="" ref="0x7f15184e22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f15184e6438" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f15184e6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15184e6788"/>
        <function-ref name="isInput" scoped="" ref="0x7f15184e6910"/>
        <function-ref name="toggle" scoped="" ref="0x7f15184e6a98"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15184e6c20"/>
        <function-ref name="get" scoped="" ref="0x7f15184e6da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15184e4020"/>
        <function-ref name="set" scoped="" ref="0x7f15184e41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f15184e4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f15184e46c0" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f15184e46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184e3370"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184e37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15184eb370" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15184eb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15184e76c8"/>
        <function-ref name="fired" scoped="" ref="0x7f15184e9db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15184e8ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15184e8688"/>
        <function-ref name="getdt" scoped="" ref="0x7f15184e6020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15184e7b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15184e8238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15184e9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15184e70f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15184e94c0"/>
        <function-ref name="stop" scoped="" ref="0x7f15184e9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15184e0600" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15184e0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15184e0950"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15184e0ad8"/>
        <function-ref name="start" scoped="" ref="0x7f15184e0c60"/>
        <function-ref name="stop" scoped="" ref="0x7f15184e0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f15184de8f0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f15184de8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184dec40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15184dedc8"/>
        <function-ref name="request" scoped="" ref="0x7f15184dc020"/>
        <function-ref name="granted" scoped="" ref="0x7f15184dc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184df288" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184df288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184dfdf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184de2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f15184d5e00" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f15184d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15184d41a8"/>
        <function-ref name="runTask" scoped="" ref="0x7f15184d4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f15184d75d8" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f15184d75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15184d7928"/>
        <function-ref name="isInput" scoped="" ref="0x7f15184d7ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15184d7c38"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15184d7dc0"/>
        <function-ref name="get" scoped="" ref="0x7f15184d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15184d61a8"/>
        <function-ref name="set" scoped="" ref="0x7f15184d6330"/>
        <function-ref name="clr" scoped="" ref="0x7f15184d64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f15184d6848" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f15184d6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184d53d8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184d5828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15184dc680" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15184dc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15184d98f0"/>
        <function-ref name="fired" scoped="" ref="0x7f15184da020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15184dad10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15184da8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15184d71c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15184d9d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15184da470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15184db1f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15184d9320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15184db698"/>
        <function-ref name="stop" scoped="" ref="0x7f15184dbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15184d25e8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15184d25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15184ce8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f15184d0020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15184d0d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15184d08c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15184cd1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15184ced40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15184d0470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15184d1158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15184ce320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15184d15f8"/>
        <function-ref name="stop" scoped="" ref="0x7f15184d1a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15184ca908" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15184ca908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15184cac58"/>
        <function-ref name="configure" scoped="" ref="0x7f15184cade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184ccaa8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184ccaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184cb620"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184cba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f15184ca060" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15184ca3b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15184ca538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15184ca6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184bbd58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184bbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184ba8f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184bad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f15184b85e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f15184b85e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184b7198"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184b7608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15184b7ca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15184b7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184b50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15184b5228"/>
        <function-ref name="request" scoped="" ref="0x7f15184b53b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15184b5538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184b56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bb4d08" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.TempC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bb4d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bb38b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bb3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184ad928" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184ad928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184aa4a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184aa8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15184a8560" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15184a8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184a60f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184a6568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f15184a6da8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f15184a6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184a59e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f15184a5e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15184a4510" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15184a4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184a4880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15184a4a08"/>
        <function-ref name="request" scoped="" ref="0x7f15184a4b90"/>
        <function-ref name="granted" scoped="" ref="0x7f15184a4d18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bb01c8" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bb01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bb0d10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517baf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f1517baf758" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f1517baf758"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f1517bafaa8"/>
        <function-ref name="disable" scoped="" ref="0x7f1517bafc30"/>
        <function-ref name="stopMic" scoped="" ref="0x7f1517bafdb8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f1517bae020"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f1517bae1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f1517bae330"/>
        <function-ref name="muxSel" scoped="" ref="0x7f1517bae4b8"/>
        <function-ref name="startMic" scoped="" ref="0x7f1517bae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1518499e78" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1518499e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15184919f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518491e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f1518490bb0" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f1518490bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151848e728"/>
        <function-ref name="readDone" scoped="" ref="0x7f151848eb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f15184862e0" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f15184862e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f1518486630"/>
        <function-ref name="disable" scoped="" ref="0x7f15184867b8"/>
        <function-ref name="stopMic" scoped="" ref="0x7f1518486940"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f1518486ac8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f1518486c50"/>
        <function-ref name="enable" scoped="" ref="0x7f1518486dd8"/>
        <function-ref name="muxSel" scoped="" ref="0x7f1518485020"/>
        <function-ref name="startMic" scoped="" ref="0x7f15184851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f15184889a0" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15184889a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1518488cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1518488e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1518486030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518489d20" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518489d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184880a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518488228"/>
        <function-ref name="request" scoped="" ref="0x7f15184883b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518488538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184886c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1518485cd8" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1518485cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15184820a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1518482228"/>
        <function-ref name="start" scoped="" ref="0x7f15184823b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518482538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x7f1518479cf8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x7f1518479cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15184780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518478228"/>
        <function-ref name="toggle" scoped="" ref="0x7f15184783b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518478538"/>
        <function-ref name="get" scoped="" ref="0x7f15184786c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518478848"/>
        <function-ref name="set" scoped="" ref="0x7f15184789d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1518478b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x7f1518481be0" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7f1518481be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1518480020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15184801a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1518480330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x7f151847b7f8" loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x7f151847b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151847bb48"/>
        <function-ref name="isInput" scoped="" ref="0x7f151847bcd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f151847be58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151847a020"/>
        <function-ref name="get" scoped="" ref="0x7f151847a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151847a330"/>
        <function-ref name="set" scoped="" ref="0x7f151847a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f151847a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x7f151847a9c8" loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x7f151847a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151847ad18"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518479020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15184791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518479330"/>
        <function-ref name="get" scoped="" ref="0x7f15184794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518479640"/>
        <function-ref name="set" scoped="" ref="0x7f15184797c8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518479950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f1518482828" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f1518482828"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f1518482b78"/>
        <function-ref name="disable" scoped="" ref="0x7f1518482d00"/>
        <function-ref name="stopMic" scoped="" ref="0x7f1518481020"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f15184811a8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f1518481330"/>
        <function-ref name="enable" scoped="" ref="0x7f15184814b8"/>
        <function-ref name="muxSel" scoped="" ref="0x7f1518481640"/>
        <function-ref name="startMic" scoped="" ref="0x7f15184817c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f1518469d48" loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f1518469d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184680d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518468260"/>
        <function-ref name="request" scoped="" ref="0x7f15184683e8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518468570"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15184686f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x7f1518477020" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x7f1518477020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f1518477370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f151846b280" loc="56:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f151846b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151846be00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518469130"/>
        <function-ref name="write" scoped="" ref="0x7f15184759c8"/>
        <function-ref name="readDone" scoped="" ref="0x7f151846a588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x7f1518468ad8" loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x7f1518468ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1518468e28"/>
        <function-ref name="disable" scoped="" ref="0x7f1518467020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15184671a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1518467330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1518480738" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518480738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f151847ca18"/>
        <function-ref name="fired" scoped="" ref="0x7f151847e158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f151847ee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f151847e9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f151847b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f151847ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f151847e5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f151847f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f151847c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f151847f810"/>
        <function-ref name="stop" scoped="" ref="0x7f151847fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151843f1d0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151843f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151843f520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151843f6a8"/>
        <function-ref name="request" scoped="" ref="0x7f151843f830"/>
        <function-ref name="granted" scoped="" ref="0x7f151843f9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151843fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f151830d020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f151830d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151830dba0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1518309020"/>
        <function-ref name="write" scoped="" ref="0x7f151830c790"/>
        <function-ref name="readDone" scoped="" ref="0x7f151830a388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518432538" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518432538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518432888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518432a10"/>
        <function-ref name="request" scoped="" ref="0x7f1518432b98"/>
        <function-ref name="granted" scoped="" ref="0x7f1518432d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518431020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f15184319b0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f15184319b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518430560"/>
        <function-ref name="writeDone" scoped="" ref="0x7f151842d8b0"/>
        <function-ref name="write" scoped="" ref="0x7f151842e130"/>
        <function-ref name="readDone" scoped="" ref="0x7f151842ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518412af8" loc="92:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518412af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518412e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518411020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15184106d8" loc="96:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15184106d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1518410a48"/>
        <function-ref name="configure" scoped="" ref="0x7f1518410bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1518411268" loc="93:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518411268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184115b8"/>
        <function-ref name="requested" scoped="" ref="0x7f1518411740"/>
        <function-ref name="granted" scoped="" ref="0x7f15184118c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518411a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1518411bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518414d80" loc="91:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518414d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518412170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15184122f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518412480"/>
        <function-ref name="granted" scoped="" ref="0x7f1518412608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518412790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1518411e20" loc="94:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1518411e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15184101a8"/>
        <function-ref name="userId" scoped="" ref="0x7f1518410330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15179496e0" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15179496e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1517949a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1517949cb8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1517949cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15179480a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517948228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15179483b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517948538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517946af8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517946af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517946e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517945020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15179446f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15179446f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517944a68"/>
        <function-ref name="configure" scoped="" ref="0x7f1517944bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1517944e78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1517944e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15179421f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517942380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517942508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517942690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1517945268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1517945268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15179455b8"/>
        <function-ref name="requested" scoped="" ref="0x7f1517945740"/>
        <function-ref name="granted" scoped="" ref="0x7f15179458c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517945a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517945bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15179428d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15179428d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517942c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517942db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1517941020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15179411a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1517941330"/>
        <function-ref name="get" scoped="" ref="0x7f15179414b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1517941640"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517941c60"/>
        <function-ref name="set" scoped="" ref="0x7f1517941950"/>
        <function-ref name="led2On" scoped="" ref="0x7f15179417c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517941ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517947d80" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517947d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517946170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15179462f8"/>
        <function-ref name="request" scoped="" ref="0x7f1517946480"/>
        <function-ref name="granted" scoped="" ref="0x7f1517946608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517946790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517945e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517945e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15179441a8"/>
        <function-ref name="userId" scoped="" ref="0x7f1517944330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517940020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517940020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517940370"/>
        <function-ref name="runTask" scoped="" ref="0x7f15179404f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f151840ed20" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151840ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f151840d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f151840d2e8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151840d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151840d638"/>
        <function-ref name="requested" scoped="" ref="0x7f151840d7c0"/>
        <function-ref name="granted" scoped="" ref="0x7f151840d948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151840dad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151840dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f151840e600" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f151840e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f151840e950"/>
        <function-ref name="stop" scoped="" ref="0x7f151840ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f151840c020" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151840c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151840c370"/>
        <function-ref name="userId" scoped="" ref="0x7f151840c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f15183ca420" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f15183ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f15183ca770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f15183cea10" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f15183cea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15183cd5d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15183cb8e8"/>
        <function-ref name="write" scoped="" ref="0x7f15183cc190"/>
        <function-ref name="readDone" scoped="" ref="0x7f15183ccd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15183ca9f8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15183ca9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15183cad48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15183c9020"/>
        <function-ref name="led1On" scoped="" ref="0x7f15183c91a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15183c9330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15183c94b8"/>
        <function-ref name="get" scoped="" ref="0x7f15183c9640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15183c97c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f15183c9de8"/>
        <function-ref name="set" scoped="" ref="0x7f15183c9ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15183c9950"/>
        <function-ref name="led0On" scoped="" ref="0x7f15183c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518409140" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518409140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15184094b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518409638"/>
        <function-ref name="request" scoped="" ref="0x7f15184097c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518409948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518409ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f15183d4020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f15183d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15183d4bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15183d0020"/>
        <function-ref name="write" scoped="" ref="0x7f15183d2790"/>
        <function-ref name="readDone" scoped="" ref="0x7f15183d1388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f15183d0c70" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f15183d0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15183ce020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15183ce1a8"/>
        <function-ref name="request" scoped="" ref="0x7f15183ce330"/>
        <function-ref name="granted" scoped="" ref="0x7f15183ce4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15183ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f151835e318" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f151835e318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f151835e668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f151835e930" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f151835e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f151835ec80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f151835ee08"/>
        <function-ref name="setStart" scoped="" ref="0x7f151835d020"/>
        <function-ref name="status" scoped="" ref="0x7f151835d1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f151835d330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f151835d4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f151835d640"/>
        <function-ref name="read" scoped="" ref="0x7f151835d7c8"/>
        <function-ref name="init" scoped="" ref="0x7f151835d950"/>
        <function-ref name="enableAck" scoped="" ref="0x7f151835dad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f151835dc60"/>
        <function-ref name="hasStart" scoped="" ref="0x7f151835dde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f151835c020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f151835c2a8"/>
        <function-ref name="enable" scoped="" ref="0x7f151835c430"/>
        <function-ref name="write" scoped="" ref="0x7f151835c5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f151835c740"/>
        <function-ref name="off" scoped="" ref="0x7f151835c8c8"/>
        <function-ref name="setStop" scoped="" ref="0x7f151835ca50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f151835cbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f151835cd60"/>
        <function-ref name="hasStop" scoped="" ref="0x7f151835b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f151835b2e8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f151835b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f151835b638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f151835b7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f151835b948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f151835bad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f151835bc58"/>
        <function-ref name="get" scoped="" ref="0x7f151835bde0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f151835a020"/>
        <function-ref name="led2On" scoped="" ref="0x7f151835a640"/>
        <function-ref name="set" scoped="" ref="0x7f151835a330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f151835a1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f151835a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f151835a908" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f151835a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f151835ac58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f151835ade0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1518359020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15183591a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1518359330"/>
        <function-ref name="get" scoped="" ref="0x7f15183594b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1518359640"/>
        <function-ref name="led2On" scoped="" ref="0x7f1518359c60"/>
        <function-ref name="set" scoped="" ref="0x7f1518359950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15183597c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1518359ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f15183c4e60" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15183c4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15183631e8"/>
        <function-ref name="stop" scoped="" ref="0x7f1518363370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1518363700" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f1518363700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15183623a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f151835f790"/>
        <function-ref name="write" scoped="" ref="0x7f1518361020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518361ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f1518356828" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f1518356828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f1518356b78"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f1518356d00"/>
        <function-ref name="setStart" scoped="" ref="0x7f1518353020"/>
        <function-ref name="status" scoped="" ref="0x7f15183531a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f1518353330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f15183534b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1518353640"/>
        <function-ref name="read" scoped="" ref="0x7f15183537c8"/>
        <function-ref name="init" scoped="" ref="0x7f1518353950"/>
        <function-ref name="enableAck" scoped="" ref="0x7f1518353ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1518353c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7f1518353de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1518352020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f15183522a8"/>
        <function-ref name="enable" scoped="" ref="0x7f1518352430"/>
        <function-ref name="write" scoped="" ref="0x7f15183525b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f1518352740"/>
        <function-ref name="off" scoped="" ref="0x7f15183528c8"/>
        <function-ref name="setStop" scoped="" ref="0x7f1518352a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f1518352bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1518352d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7f1518351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f151834e1d8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f151834e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f151834e528"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f151834e6b0"/>
        <function-ref name="setStart" scoped="" ref="0x7f151834e838"/>
        <function-ref name="status" scoped="" ref="0x7f151834e9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f151834eb48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f151834ecd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f151834ee58"/>
        <function-ref name="read" scoped="" ref="0x7f151834d020"/>
        <function-ref name="init" scoped="" ref="0x7f151834d1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x7f151834d330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f151834d4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x7f151834d640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f151834d7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f151834da50"/>
        <function-ref name="enable" scoped="" ref="0x7f151834dbd8"/>
        <function-ref name="write" scoped="" ref="0x7f151834dd60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f151834c020"/>
        <function-ref name="off" scoped="" ref="0x7f151834c1a8"/>
        <function-ref name="setStop" scoped="" ref="0x7f151834c330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f151834c4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f151834c640"/>
        <function-ref name="hasStop" scoped="" ref="0x7f151834c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f151834cb50" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f151834cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f151834a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f151834a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f151834a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f151834a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f151834a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f151834a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f151834a950"/>
        <function-ref name="clr" scoped="" ref="0x7f151834aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f151834ae08" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f151834ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15183491a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f1518349330"/>
        <function-ref name="toggle" scoped="" ref="0x7f15183494b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1518349640"/>
        <function-ref name="get" scoped="" ref="0x7f15183497c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1518349950"/>
        <function-ref name="set" scoped="" ref="0x7f1518349ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f1518349c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518307020" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15183032b8"/>
        <function-ref name="fired" scoped="" ref="0x7f1518306978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15183056c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518305278"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518303b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518303708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518306dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518307b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518305c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518306088"/>
        <function-ref name="stop" scoped="" ref="0x7f1518306528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1518300af8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1518300af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1518300e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15182ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15182fd6d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15182fd6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15182fda48"/>
        <function-ref name="configure" scoped="" ref="0x7f15182fdbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15182ff268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182ff268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182ff5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f15182ff740"/>
        <function-ref name="granted" scoped="" ref="0x7f15182ff8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182ffa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15182ffbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518301d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518301d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518300170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15183002f8"/>
        <function-ref name="request" scoped="" ref="0x7f1518300480"/>
        <function-ref name="granted" scoped="" ref="0x7f1518300608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518300790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15182ffe20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182ffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15182fd1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f15182fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15178bc1d8" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15178bc1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15178bc528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f15178bc7b0" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f15178bc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15178bcb00"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15178bcc88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15178bce10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15178bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15178b9698" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15178b9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15178b9a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15178b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15178b63e8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15178b63e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15178b6758"/>
        <function-ref name="configure" scoped="" ref="0x7f15178b68e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15178b6b68" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f15178b6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15178b5020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15178b51a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15178b5330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15178b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15178b9dd8" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178b9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15178b7170"/>
        <function-ref name="requested" scoped="" ref="0x7f15178b72f8"/>
        <function-ref name="granted" scoped="" ref="0x7f15178b7480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15178b7608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15178b7790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15178b5700" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f15178b5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15178b5a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15178b5bd8"/>
        <function-ref name="led1On" scoped="" ref="0x7f15178b5d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15178b4020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15178b41a8"/>
        <function-ref name="get" scoped="" ref="0x7f15178b4330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15178b44b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f15178b4ad8"/>
        <function-ref name="set" scoped="" ref="0x7f15178b47c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f15178b4640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15178b4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15178ba830" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15178ba830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15178baba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15178bad28"/>
        <function-ref name="request" scoped="" ref="0x7f15178b9020"/>
        <function-ref name="granted" scoped="" ref="0x7f15178b91a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15178b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15178b79d8" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15178b79d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15178b7d28"/>
        <function-ref name="userId" scoped="" ref="0x7f15178b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f15178b4da0" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f15178b4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15178b3170"/>
        <function-ref name="runTask" scoped="" ref="0x7f15178b32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f15182fb6d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15182fb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15182fba28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15182fbbb0"/>
        <function-ref name="start" scoped="" ref="0x7f15182fbd38"/>
        <function-ref name="stop" scoped="" ref="0x7f15182fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f15182fa268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15182fa268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15182fa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15182fa800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15182fa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182fab50"/>
        <function-ref name="requested" scoped="" ref="0x7f15182facd8"/>
        <function-ref name="granted" scoped="" ref="0x7f15182fae60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182f9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15182f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15182f93f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15182f9740"/>
        <function-ref name="userId" scoped="" ref="0x7f15182f98c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f15178825c8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15178825c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1517882918"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1517882aa0"/>
        <function-ref name="start" scoped="" ref="0x7f1517882c28"/>
        <function-ref name="stop" scoped="" ref="0x7f1517882db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1517881020" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1517881020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1517881370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1517880a08" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f1517880a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517880d58"/>
        <function-ref name="runTask" scoped="" ref="0x7f151787e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15178815b8" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517881908"/>
        <function-ref name="requested" scoped="" ref="0x7f1517881a90"/>
        <function-ref name="granted" scoped="" ref="0x7f1517881c18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517881da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517880020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f151787e2e8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f151787e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151787e638"/>
        <function-ref name="runTask" scoped="" ref="0x7f151787e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1517884e80" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1517884e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15178821f8"/>
        <function-ref name="stop" scoped="" ref="0x7f1517882380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1517880268" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517880268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15178805b8"/>
        <function-ref name="userId" scoped="" ref="0x7f1517880740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15182ee020" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15182ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182eeb88"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f15182ed860" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f15182ed860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182ec458"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182ec8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15182ea020" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15182ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182ea390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15182ea518"/>
        <function-ref name="request" scoped="" ref="0x7f15182ea6a0"/>
        <function-ref name="granted" scoped="" ref="0x7f15182ea828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182ea9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151797e3f0" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151797e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151797e740"/>
        <function-ref name="configure" scoped="" ref="0x7f151797e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517980520" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517980520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151797f0c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f151797f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f151797fac8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151797fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f151797fe18"/>
        <function-ref name="getChannel" scoped="" ref="0x7f151797e020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f151797e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517bac6c0" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517bac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517bab370"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517bab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7f1517bada00" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7f1517bada00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7f1517badd50"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7f1517bac020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7f1517bac1a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7f1517bac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7f15182cc4c0" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7f15182cc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182cb088"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182cb4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7f15182d3c90" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7f15182d3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182d2820"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182d2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7f15182d1918" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7f15182d1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182d0490"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182d08e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7f15182d7b00" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7f15182d7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7f15182d7e50"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7f15182d3020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7f15182d31a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7f15182d3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7f15182ce6a8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7f15182ce6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182cd370"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f15182c5a28" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f15182c5a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15182c5d78"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15182c4020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15182c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f15182c5060" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f15182c5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15182c53b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15182c5538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15182c56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15182c6328" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15182c6328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182c6678"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15182c6800"/>
        <function-ref name="request" scoped="" ref="0x7f15182c6988"/>
        <function-ref name="granted" scoped="" ref="0x7f15182c6b10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182c6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7f15182ca358" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7f15182ca358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7f15182ca6a8"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7f15182ca830"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7f15182ca9b8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7f15182cab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15182c4cf8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15182c4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15182c10a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15182c1228"/>
        <function-ref name="start" scoped="" ref="0x7f15182c13b0"/>
        <function-ref name="stop" scoped="" ref="0x7f15182c1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f15182c0dd0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f15182c0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15182bf170"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15182bf2f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15182bf480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagPower" ref="0x7f15182ba9e8" loc="13:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagPower" scoped="" ref="0x7f15182ba9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15182bad38"/>
        <function-ref name="isInput" scoped="" ref="0x7f15182b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15182b91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15182b9330"/>
        <function-ref name="get" scoped="" ref="0x7f15182b94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15182b9640"/>
        <function-ref name="set" scoped="" ref="0x7f15182b97c8"/>
        <function-ref name="clr" scoped="" ref="0x7f15182b9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcX" ref="0x7f15182b9cc8" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcX" scoped="" ref="0x7f15182b9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15182b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcY" ref="0x7f15182b8418" loc="15:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcY" scoped="" ref="0x7f15182b8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f15182b8768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalAdjustDone" ref="0x7f15182a1100" loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalAdjustDone" scoped="" ref="0x7f15182a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15182a1450"/>
        <function-ref name="runTask" scoped="" ref="0x7f15182a15d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f15182c03c8" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f15182c03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15182c0718"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15182c08a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15182c0a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f15182b3828" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f15182b3828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182b3b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15182b3d00"/>
        <function-ref name="request" scoped="" ref="0x7f15182b2020"/>
        <function-ref name="granted" scoped="" ref="0x7f15182b21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182b2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f15182b8be0" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f15182b8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182b77a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15182b4ba0"/>
        <function-ref name="write" scoped="" ref="0x7f15182b5388"/>
        <function-ref name="readDone" scoped="" ref="0x7f15182b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7f15182c17e0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7f15182c17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7f15182c1b30"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7f15182c1cb8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7f15182c1e40"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7f15182c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15182bf888" loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15182bf888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15182bbbc0"/>
        <function-ref name="fired" scoped="" ref="0x7f15182bd238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15182bb020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15182bdad8"/>
        <function-ref name="getdt" scoped="" ref="0x7f15182ba4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f15182ba088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15182bd688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15182be458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15182bb5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15182be8f8"/>
        <function-ref name="stop" scoped="" ref="0x7f15182bed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f151828d468" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151828d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151828d7b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151828d940"/>
        <function-ref name="request" scoped="" ref="0x7f151828dac8"/>
        <function-ref name="granted" scoped="" ref="0x7f151828dc50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151828ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f151828c1c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f151828c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f151848a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f151848a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151828cd48"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15182880f8"/>
        <function-ref name="write" scoped="" ref="0x7f151828a928"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518289530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15182860a0" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MagConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15182860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15182822b8"/>
        <function-ref name="fired" scoped="" ref="0x7f15182859b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15182836c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518283278"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518282b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f1518282708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1518285e00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518286be8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518283c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15182850c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1518285560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f151827eaf8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f151827eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f151827ee68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151827d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151827c6d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151827c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151827ca48"/>
        <function-ref name="configure" scoped="" ref="0x7f151827cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f151827d268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151827d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151827d5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f151827d740"/>
        <function-ref name="granted" scoped="" ref="0x7f151827d8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151827da50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151827dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1518280d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518280d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151827e170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151827e2f8"/>
        <function-ref name="request" scoped="" ref="0x7f151827e480"/>
        <function-ref name="granted" scoped="" ref="0x7f151827e608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151827e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f151827de20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151827de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151827c1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f151827c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f151784a830" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f151784a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f151784ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f151784ae08" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f151784ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15178491a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517849330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15178494b8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517849640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1517847b48" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1517847b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1517846020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15178461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15178448c0" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15178448c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1517844c30"/>
        <function-ref name="configure" scoped="" ref="0x7f1517844db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15178430a0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f15178430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15178433f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1517843578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1517843700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1517843888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15178463f0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15178463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1517846740"/>
        <function-ref name="requested" scoped="" ref="0x7f15178468c8"/>
        <function-ref name="granted" scoped="" ref="0x7f1517846a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1517846bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1517846d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1517843ad0" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1517843ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1517843e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1517842020"/>
        <function-ref name="led1On" scoped="" ref="0x7f15178421a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1517842330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15178424b8"/>
        <function-ref name="get" scoped="" ref="0x7f1517842640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15178427c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f1517842de8"/>
        <function-ref name="set" scoped="" ref="0x7f1517842ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f1517842950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1517842c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1517848e20" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1517848e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15178471c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1517847348"/>
        <function-ref name="request" scoped="" ref="0x7f15178474d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1517847658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15178477e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1517844020" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1517844020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1517844370"/>
        <function-ref name="userId" scoped="" ref="0x7f15178444f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1517841100" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1517841100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1517841450"/>
        <function-ref name="runTask" scoped="" ref="0x7f15178415d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f151827a6d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f151827a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f151827aa28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f151827abb0"/>
        <function-ref name="start" scoped="" ref="0x7f151827ad38"/>
        <function-ref name="stop" scoped="" ref="0x7f1518279020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1518279268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1518279268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15182795b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1518279800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1518279800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1518279b50"/>
        <function-ref name="requested" scoped="" ref="0x7f1518279cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f1518279e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1518278020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15182781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15182783f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15182783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1518278740"/>
        <function-ref name="userId" scoped="" ref="0x7f15182788c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1517810740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1517810740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1517810a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1517810c18"/>
        <function-ref name="start" scoped="" ref="0x7f1517810da0"/>
        <function-ref name="stop" scoped="" ref="0x7f151780f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f151780f268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f151780f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f151780f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f151780eb90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f151780eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151780c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f151780c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f151780f800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f151780f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151780fb50"/>
        <function-ref name="requested" scoped="" ref="0x7f151780fcd8"/>
        <function-ref name="granted" scoped="" ref="0x7f151780fe60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151780e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f151780e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f151780c470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f151780c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f151780c7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f151780c948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1517810020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1517810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1517810370"/>
        <function-ref name="stop" scoped="" ref="0x7f15178104f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f151780e3f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f151780e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f151780e740"/>
        <function-ref name="userId" scoped="" ref="0x7f151780e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f151826f648" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f151826f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151826e1e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f151826e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f151826c020" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f151826c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151826cb88"/>
        <function-ref name="readDone" scoped="" ref="0x7f151826b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f151826b6b8" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f151826b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f151826ba28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f151826bbb0"/>
        <function-ref name="request" scoped="" ref="0x7f151826bd38"/>
        <function-ref name="granted" scoped="" ref="0x7f151826a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f151826a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1518269d58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1518269d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15182678f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518267d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f15182665e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f15182665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1518265198"/>
        <function-ref name="readDone" scoped="" ref="0x7f1518265608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1518265ca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1518265ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15182630a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1518263228"/>
        <function-ref name="request" scoped="" ref="0x7f15182633b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1518263538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15182636c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f151785dac8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f151785dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f151785de18"/>
        <function-ref name="configure" scoped="" ref="0x7f151785c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517860c60" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517860c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f151785e7e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f151785ec38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f151785d220" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f151785d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f151785d570"/>
        <function-ref name="getChannel" scoped="" ref="0x7f151785d6f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f151785d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1517ba9998" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1517ba9998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1517ba7528"/>
        <function-ref name="readDone" scoped="" ref="0x7f1517ba7978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7f1517baada8" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7f1517baada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7f1517ba9170"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7f1517ba92f8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7f1517ba9480"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7f1517ba9608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15177e4a28" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15177e4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15177e4d78"/>
        <function-ref name="configure" scoped="" ref="0x7f15177e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f15177e7ba8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f15177e7ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15177e5728"/>
        <function-ref name="readDone" scoped="" ref="0x7f15177e5b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f15177e4180" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f15177e4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f15177e44d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15177e4658"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f15177e47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1518239ae8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TestFtspAppC.MyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1518239ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1519a10608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1519a10960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1518235d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1518236470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15182351c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1518236d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f1518234648"/>
        <function-ref name="gett0" scoped="" ref="0x7f15182341f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15182368c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1518237658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1518235790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1518237af8"/>
        <function-ref name="stop" scoped="" ref="0x7f1518236020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f15199958a8" loc="62:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1519991580" loc="60:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f1519988810" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f15199885a0" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f151998a020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f151998aa18" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f151998a7a8" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f15199894d0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1519989260" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f1519989d18" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1519976dc0" loc="44:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f15199754c8" loc="45:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1519976070" loc="42:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1519974290" loc="47:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1519976710" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1519975b80" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1519978328" loc="40:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1519978998" loc="41:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1519a9c968" loc="57:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1519a94878" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1519a940d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1519a8c608" loc="67:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1519a8cdf8" loc="75:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f15199d3ca0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f15199b3328" loc="62:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1519a32940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f15199b7e60" loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GlobalTime" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f15197d50f0" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <interfacedef-ref qname="GlobalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15197d50f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getLocalTime" ref="0x7f15197d59e0" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Returns the current local time of this mote.</short>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="global2Local" ref="0x7f15197d3ca8" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>. This method performs the inverse of the&#10; &#60;code>local2Global&#60;/clode> transformation.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15197d3a38" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0x7f15197d4418" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Reads the current global time.</short>
          <long>&#10; Reads the current global time. This method is a combination&#10; of &#60;code>getLocalTime&#60;/code> and &#60;code>local2Global&#60;/code>.&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15197d41a8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="local2Global" ref="0x7f15197d3020" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>. The following equation is used to compute the&#10; conversion:&#10;&#10;&#9;globalTime = localTime + offset + skew * (localTime - syncPoint)&#10;&#10; The skew is normalized to 0.0 (1.0 is subtracted) to increase the&#10; machine precision. The syncPoint value is periodically updated to&#10; increase the machine precision of the floating point arithmetic and&#10; also to allow time wrap.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15197d4c60" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncInfo" loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
      <function command="" provided="0" name="getSyncPoint" ref="0x7f15197ceb50" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the local time of the last synchronization point.</short>
          <long>&#10; Returns the local time of the last synchronization point. This &#10; value is close to the current local time and updated when a new&#10; time synchronization message arrives.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRootID" ref="0x7f15197cc3a0" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the current root to which this node is synchronized.</short>
          <long>&#10; Returns the current root to which this node is synchronized. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSeqNum" ref="0x7f15197ccb40" loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the latest seq number seen from the current root.</short>
          <long>&#10; Returns the latest seq number seen from the current root.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOffset" ref="0x7f15197d9b78" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="38:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current offset of the local time wrt global time.</short>
          <long>&#10; Returns current offset of the local time wrt global time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumEntries" ref="0x7f15197cb328" loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the number of entries stored currently in the &#10; regerssion table.</short>
          <long>&#10; Returns the number of entries stored currently in the &#10; regerssion table.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeartBeats" ref="0x7f15197cbb08" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the value of heartBeats variable.</short>
          <long>&#10; Returns the value of heartBeats variable. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSkew" ref="0x7f15197ce328" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current skew of the local time wrt global time.</short>
          <long>&#10; Returns current skew of the local time wrt global time.&#10; This value is normalized to 0.0 (1.0 is subtracted) to get maximum &#10; representation precision.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncMode" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <short>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period.</short>
        <long>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period. from the timer&#10;            - TS_USER_MODE: TS msgs sent only when explic. asked by user &#10;                            via TimeSyncMode.send() command, TimeSync.Timer &#10;                            is stopped in this mode&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15197c8970" loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; command to send out time synchronization message.</short>
          <long>&#10; command to send out time synchronization message.&#10; returns FAIL if TimeSync not in TS_USER_MODE&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f15197c8258" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Gets the current mode of the TimeSync module.</short>
          <long>&#10; Gets the current mode of the TimeSync module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f15197cfaa8" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Sets the current mode of the TimeSync module.</short>
          <long>&#10; Sets the current mode of the TimeSync module.&#10; returns FAIL if didn't succeed&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f15197cf838" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncNotify" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <short>&#10; time sync module (TimeSyncM) provides notification of arriving&#10; and transmitted time-sync msgs through TimeSyncNotify interface:&#10;</short>
      </documentation>
      <function event="" provided="0" name="msg_received" ref="0x7f15197c5020" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is received and accepted&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="msg_sent" ref="0x7f15197c56e8" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is sent by TimeSyncM or the sending did not&#10; succeed&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f15197d8810" loc="95:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15197d6020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1519737498" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1519737498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1519737d28" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f15197b9290" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15197b9020" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f15197b7690" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15197b7420" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15197ba510" loc="104:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15197b9a78" loc="130:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1519768a68" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1519768a68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1519768c98" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519768c98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f15197652c0" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519768c98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1519767520" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1519767880" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1519767b90" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x7f1519765020" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519768c98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1519762708" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519762140" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1519762450" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15197638f0" loc="103:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f15197640a8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519765de8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1519763020" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15197649d8" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1519764d00" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f15197495a0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f151974dde8" loc="46:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f151975cd48" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
              <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151975c448" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f151975c770" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151975ca80" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1519745af8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1519744258" loc="67:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f15197449c8" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1519743848" loc="83:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1519741e70" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1519740630" loc="117:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1519743110" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f151973f290" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f151973f020" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f15197453e0" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1519741020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1519741738" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f151975a338" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f151975a338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1519751020" loc="136:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1519756710" loc="83:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f15197535b8" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1519753020" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1519753338" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f15197547b8" loc="98:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1519750020" loc="151:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1519751740" loc="144:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1519754020" loc="92:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f151975ae08" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f151975ab98" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f15197525b8" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1519752020" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1519752338" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f15197578a0" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1519757630" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1519756070" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f15197483d0" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15197483d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1519748600" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519748600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x7f151973b118" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519748e78" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x7f151973bcd8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519748600"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151973ba68" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f15196924e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519692278" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f15196914e8" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519691278" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f151968e690" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151968e0c8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151968e3d8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f151968d7c8" loc="106:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f15196908d8" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519690348" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1519690658" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1519672ad0" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15196724e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1519672850" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1519670bc0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519670950" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1519673d38" loc="57:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f15196733e0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1519673170" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f15196793a0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15196793a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15196795d0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15196795d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f151966b290" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15196795d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151966b020" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f151966a370" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151966a100" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f151966d118" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519679e80" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15196695e0" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15196795d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519669020" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1519669360" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15196795d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1519678290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519678020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f15196773b0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519677140" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1519676468" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15196761f8" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f151967e930" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f151967e6c0" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1519687a88" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519687818" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1519689020" loc="68:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1519689a78" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519689808" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f15196842a0" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519688c98" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1519684020" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1519686dc0" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519686808" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1519686b40" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f15196815c8" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519681358" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1519680840" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15196802c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f15196805c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15197795d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1519683478" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1519683208" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f151967cd20" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f151967c770" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f151967caa0" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f151967bac8" loc="195:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1519622020" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15196235c8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1519623928" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1519623c38" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f151961d380" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151961ed48" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151961d0c8" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f151961e540" loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f15196212d0" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519621060" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f151961f708" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151961f160" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f151961f488" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f151960d020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151960eca8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f151960e020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519611ca0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1519609020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151960bc88" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f151960b020" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151960dc78" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f151957c290" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151957c020" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f151957f578" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151957f308" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f1519581d30" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1519581ac0" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f1519581290" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1519581020" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f1519580728" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f15195804b8" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f151957d3b0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151957d140" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1519570830" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1519570250" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f15195705b0" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f151958b6a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f151958b100" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f151958b428" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f1519587b80" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f15195875b0" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f1519587900" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f151958a290" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f151a42a908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f151958a020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f1519588b60" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f15195888f0" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f151958c930" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f151958c6c0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f151958ad30" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f151958aac0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1519574290" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519574020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1519578480" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151957be70" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1519578200" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1519575290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519575020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f15195777e0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15195771f8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1519577560" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1519573290" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519573020" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1519583338" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15195830c8" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1519563020" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f151956aa48" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151956ad58" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f151955e2d8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519560cc8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151955e020" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15195604c0" loc="112:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1519562290" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519562020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1519561670" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15195610c8" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f15195613f0" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f15195671d8" loc="120:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f15195682a8" loc="97:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f151956c988" loc="88:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1519568a30" loc="102:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1519567bc0" loc="128:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1519541838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f15195412a0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f15195415b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f151953fa58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f151953b0c8" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f151953d318" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f151953daf0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f151953de00" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f151953eb00" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f151953e558" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f151953e880" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f151953f290" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f151953f020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f1519535ad8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519535830" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f15195350a8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f15197b4928"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f15197b1228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519536d90" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f1519533ce8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f15197b1cc8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f15197afa88"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1519533a00" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f15195477e8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f1519545778" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f1519545020" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f1519549020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f1519547020" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f1519546020" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f15195467d0" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1519549818" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f151952d178" loc="71:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f151952f798" loc="56:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f151952e9b0" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f151952e740" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f151952e020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1519531508" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1519531298" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f151952f020" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1519531cc0" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f15194d6680" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f15194d60c8" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f15194d6400" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f15194d7178" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f15194d8840" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f15194d8200" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f15194d85c0" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f15194de0a8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15194dfe00" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f15194d7980" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f15194db990" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f15194db720" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f15194dc108" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f15194dee40" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f15194d5828" loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f15194daa30" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f15194da7c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f15194d5070" loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f15194dc828" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f15195a4648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f15195a4d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f15194db020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f15194df6d0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f15194de790" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f15194da110" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f15194d02a0" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15194d02a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f15194d0ad8" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f15194cf7c8" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15194d02a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f15194cf248" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f15194cf548" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15194d02a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f15194a6290" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15194a6020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15194a6ce8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15194a6a78" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f15194c34d0" loc="48:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f15195a4648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f15195a4d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15194c5668" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15194c5668"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15194c5898" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f15194bd178" loc="109:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15194bf328" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f15194be810" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15194be270" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f15194be590" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f15194bfa98" loc="88:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f15194bd8f8" loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15194c1378" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15194c1108" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15194c5898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15194c1b48" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f15194af020" loc="50:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f15194afe70" loc="60:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f15194af780" loc="55:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f15194b0730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f15194b0178" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1519779988"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f15194b04b0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1519779d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f15194a00d8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f15194ab5e0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f15194ac6b0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f15194ab020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15194ab350" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15194aac60" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f15194abe30" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f15194aa6a0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15194aa9d0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f15194b2770" loc="68:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f15194b2020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f15194b3868" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f15194b3020" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f15193ec378" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199dd928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f15199ddd30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f15193ee020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ec478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f15199ec880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15193f0cf8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ec478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f15199ec880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f15193ed1d8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199df578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f15199df980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f15193f4ab0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199f4da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f15199f3228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f15193edb98" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199df578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f15199df980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f15193ed928" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199df578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f15199df980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f15193ecd38" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199dd928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f15199ddd30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15193ecac8" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199dd928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f15199ddd30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f15193f1ad8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ea890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f15199eac98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f15193f1328" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ec478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f15199ec880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f15193f0570" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199f4da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f15199f3228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15193f0300" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199f4da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f15199f3228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f15193ee9f0" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ea890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f15199eac98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15193ee780" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199ea890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f15199eac98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f15193f2b60" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f15193e3648" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f15193e33d8" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f15193e5568" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15193e8438" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f15193e7748" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15193e74d8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15193e6020" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15193e5cb8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15193e8d70" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15193e8b00" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193f2b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15193e6718" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15193e6e00" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f15193e0820" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193e0820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f15193dae20" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15193dc1d8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15193dd110" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193e0820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15193dc8e0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15193d95c0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15193dda58" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193e0820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15193dd7e8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15193e0820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15193da020" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15193da708" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f15193ff458" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15193ff458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f15193fa900" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f15193fba40" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15193ffcf8" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15193ff458"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f15193f8290" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f15193f8020" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f15193f8a10" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15193fc500" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15193feda8" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15193fa1d8" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15193fe688" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15193ff458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15193fe418" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15193ff458"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15193fcbf8" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15193fb328" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f15193cb7c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a05a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1519a05e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f15193c9c10" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fa100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f15199fa508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f15193caa38" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fe980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f15199fed88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f15193c9470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f15199fed88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f15193c9200" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f15199fed88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f15193c85f8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fa100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f15199fa508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15193c8388" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f15199fa100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f15199fa508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f15193ca290" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a05a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1519a05e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15193ca020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a05a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1519a05e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f15193bf020" loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f15193bf7e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f15193c07f0" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f15193be020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f15193c2570" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a00118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1519a00520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f15193c0020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a00118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1519a00520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f15193c2cb0" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1519a00118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1519a00520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15192613f8" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15192613f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1519261628" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519261628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1519260020" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1519261628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f151925f070" loc="76:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1519260838" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f151925f760" loc="82:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f15191c0e28" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f15191bd020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f15191be780" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15191be510" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f15191c0640" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f151919fb10" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f151919c450" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f151919f428" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f151919dc60" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f151919d9f0" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f15191a2ce8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f151919d290" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1519183e58" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f151910d020" loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f151910d800" loc="31:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f151910c020" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f15190ef348" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190f0d58" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15190ef0c8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f15190e92b0" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190eb940" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15190ebc70" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15190e9020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15190ecc50" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190ec6a0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15190ec9d0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f15190f0020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f15197bcb80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190f1908" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15190f1c38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f15190ed948" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190ed060" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15190ed390" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15190ed6b8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15190d0930" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f15190d0020" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f15190d0380" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15190d06a0" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f15190cfcc8" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f15190cf060" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f15190cf3c0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15190cf6e0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15190cfa28" loc="83:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f15190d59a0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f15190d5730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f1519043020" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1519047c58" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f1519042338" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15190420c8" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f1519043820" loc="68:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1519042d40" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1519042ad0" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f151902e020" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f1519025a60" loc="126:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f1519028538" loc="117:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f1519023458" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f15190231e8" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f151902f880" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f1519026108" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f1519027e18" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f151902bd50" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f151902bae0" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f151902c020" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f1519020b98" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1519020928" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f151902a4d0" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f15190224b0" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f1519022240" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1519021360" loc="136:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f1519025338" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f15190250c8" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f1519020258" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f1519027020" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f1519028c18" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f151902c978" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f151902c708" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f151902ade0" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f151902ab70" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f1519026918" loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f1519023b60" loc="129:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f1519022ba0" loc="132:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f1519021aa8" loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f1519027738" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f151902e738" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f151902b338" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f151902b0c8" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f151901c9f8" loc="90:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1519019258" loc="98:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1518fc4748" loc="95:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1518fc2020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1518f727d0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1518f710d8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1518f6d020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1518f6e6f8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1518f65c80" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1518f6b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1518f65a10" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1518f6b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1518f6ae10" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1518f678f0" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1518f6b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1518f67680" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1518f6b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1518f651d8" loc="70:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1518f6b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f1518e248c8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1518de0e40" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1518de04f0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f1518de0bc0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1519769150"/>
                <typename><typedef-ref name="message_t" ref="0x7f15197686c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f1518de1d70" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1518de1600" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1518de1390" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f151a428608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f1518acf9b8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1518acf9b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f1518acc4c8" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1518acf9b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1518acc258" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1518acf9b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f151880bc90" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f151880bc90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1518808020" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1518808020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1518808ab8" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1518808020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1518808848" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1518808020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7f15187e1ca8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7f15187e1a38" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f15187a0020" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f1518760178" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1518763928" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f1518760958" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f151875b940" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f151875b940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f15187581d8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1518757020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f151875b940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1518758920" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1518758c20" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f151875b940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1518747768" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1518749a60" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f1518749db8" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f1518747178" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f15187474c8" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f15187453f0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1518746368" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f1518746688" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f15187469c0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f1518746d70" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f1518745140" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f151874c440" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f151874d738" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f151874da90" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f151874ddf8" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f151874c1a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f151874bc80" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f151874b408" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f151874ce48" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f151874b188" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f1518734868" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f151873d9e8" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a19020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1519a194d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f1518731a88" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f1518731818" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f15187330d8" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f1518738548" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f151873a3e8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a19020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1519a194d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f151873a178" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a19020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1519a194d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f15187363a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f1518731020" loc="133:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1518730258" loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f1518738c38" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f1518735258" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f1518736ae8" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f1518735980" loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f1518733838" loc="127:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f1518739608" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a13a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f1519a11178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f1518739398" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a13a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f1519a11178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f1518734178" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f151873abc0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1519a13a10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f1519a11178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1518739da8" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1518730d68" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1518730af8" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f15186ba890" loc="56:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f15186b98a0" loc="73:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f15186ba070" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f15186b90d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f15186b81d8" loc="81:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1518649c18" loc="62:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x7f15184941d8" loc="110:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1518495360" loc="97:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x7f15184974e0" loc="87:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x7f1518498708" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1518498498" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x7f1518497c08" loc="92:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1518495a58" loc="102:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x7f151849bdb0" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x7f151849bb40" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x7f1518498de0" loc="82:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x7f1518477af8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f1518477af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1518473030" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f151848a680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15184743b0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f151848a680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f15184746e0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1518474a10" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1518474d68" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f151846d618" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f151846c998" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f151846ccc8" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f151846d020" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f151846d378" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1518471d20" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f151848a680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15184710c8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f151848a680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f15184713f8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1518471728" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1518471a80" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f151846fa98" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1518470df8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f151846f170" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f151a429b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f151846f4a0" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f151846f7f8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f15183fb910" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f15183b9db8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f15183b84c0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f15183b74c8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f15183b7258" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f15183b96f8" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f15183b4b68" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f15183af700" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f15183b34d8" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f15183b3268" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f15183aee18" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f15183bb8f0" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f15183bb680" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f15183b44a0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f15183b4230" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f15183b3d10" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f15183b7ba0" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f15183b2c50" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f15183b8ba8" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f15183af020" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f15183b0d00" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15183ae750" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15183ae4e0" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f15183b24f8" loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f15183b9020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f15183b54b0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f15183b5240" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f15183b06c0" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f15183b0450" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f15183afe28" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f15183b5b78" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1519a9a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mag" loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
      <documentation loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function command="" provided="0" name="gainAdjustY" ref="0x7f15182d9108" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f15182dbe60" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustYDone" ref="0x7f15182d83b8" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f15182d8148" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustXDone" ref="0x7f15182d9a38" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f15182d97c8" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjustX" ref="0x7f15182db7a0" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1519a8f1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f15182db530" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f151a429160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
