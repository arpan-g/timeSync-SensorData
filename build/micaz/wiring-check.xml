<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15cc55830"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ccc71d8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15cd756e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ce25570"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ce69980"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15cea5520"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15cf1fcc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15cf799f8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ddc6c28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15de4a628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15de68080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15de86198"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15dff0080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e0eaad8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e1c0808"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e7dd3c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15d198620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e424438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e88a020"/></to>
    </wire>
    <wire loc="45:TestFtspAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15eb98628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15eb98628"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ea74910"/></to>
    </wire>
    <wire loc="46:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd15eb98020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd15ed4e940"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd15ed4e940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd15ed4ce20"/></to>
    </wire>
    <wire loc="51:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd15dc0bca8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd15ed4e940"/></to>
    </wire>
    <wire loc="54:TestFtspAppC.nc">
      <from><interface-ref name="Check" scoped="" ref="0x7fd15dc19900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d639ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d639ae8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:TestFtspAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fd15dc05b08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15dc85248"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15dc85248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15e958818"/></to>
    </wire>
    <wire loc="56:TestFtspAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15dc128d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15dc83348"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:TestFtspAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15dc11020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15dc84208"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:TestFtspAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15dc11c18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15dc825f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15dc825f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15e94d0c0"/></to>
    </wire>
    <wire loc="60:TestFtspAppC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15dc0e268"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15dc7b670"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15dc7b670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e063020"/></to>
    </wire>
    <wire loc="61:TestFtspAppC.nc">
      <from><interface-ref name="PhotoRead" scoped="" ref="0x7fd15dc0a498"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x7fd15d645898"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Light" scoped="" ref="0x7fd15d645898"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfc1d08"/></to>
    </wire>
    <wire loc="62:TestFtspAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fd15dc09bf0"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7fd15d646228"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x7fd15d646228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfbe1c8"/></to>
    </wire>
    <wire loc="63:TestFtspAppC.nc">
      <from><interface-ref name="MicRead" scoped="" ref="0x7fd15dc063a0"/></from>
      <to><interface-ref name="Microphone" scoped="" ref="0x7fd15d643020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Microphone" scoped="" ref="0x7fd15d643020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfbb618"/></to>
    </wire>
    <wire loc="67:TestFtspAppC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7fd15dc1d6a8"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7fd15eb8e298"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7fd15eb8e298"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7fd15ea73848"/></to>
    </wire>
    <wire loc="68:TestFtspAppC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15dc13930"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15eb88e00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15eb88e00"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15ea70748"/></to>
    </wire>
    <wire loc="69:TestFtspAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15dc108b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2b8c38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd15eba6490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd15ee51be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd15ee51be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd15ed93c00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd15eba6e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ed51cc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15ed51cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ed424f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15eba5560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd15ed4a9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15db4dd40"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd15ed4a9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e66f190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15ed45b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15ebc57e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fd15ed41398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15ebc51b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd15ed42b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e295020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd15ed42b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd15ed44a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd15ed44a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd15ed38428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd15ed3c108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd15ed4a9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fd15ed315f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fd15ed261a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fd15ed261a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15eca3430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd15ed377f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd15ed3c108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fd15ecf4c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15ec12970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fd15ed0e7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15ec7a020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15ec7a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4bd100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fd15ed037e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15ec69d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15ec69d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d450100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fd15ecfa4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15ec5a5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15ec5a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3e7100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fd15ed244d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15eca1740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15eca1740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5e8020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fd15ecfc1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15ec5c2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15ec5c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3ed100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fd15ed227e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15ec99930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15ec99930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d58e180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fd15ed17968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15ec88740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15ec88740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d521100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fd15ed0bc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15ec76430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15ec76430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4b4100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fd15ed00c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15ec65120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15ec65120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d447100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fd15ed2ac78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15eca6020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15eca6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5f7020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fd15ed1fc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15ec96d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15ec96d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d585100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fd15ed14e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15ec84bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15ec84bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d518100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fd15ed071a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15ec738c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15ec738c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4ab100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fd15ecf6968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15ec57a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15ec57a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3de100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fd15ecf07e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15ec03020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fd15ed054d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15ec6ba50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15ec6ba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d456100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15eca3430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5ee020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fd15ed1b348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15ec92120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15ec92120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d57c100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fd15ecf24d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15ec0dab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fd15ed19658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15ec8a500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15ec8a500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d527180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fd15ed0d968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15ec78120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15ec78120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4ba100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fd15ed02968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15ec68e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15ec68e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d44d100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fd15ecf9658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15ec59740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15ec59740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3e4100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fd15ed23658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15eca08c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15eca08c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5e4020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fd15ed21968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15ec98a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15ec98a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d58b100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fd15ed16af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15ec878c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15ec878c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d51e100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fd15ed0ae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15ec755b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15ec755b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4b1100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fd15ecffe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15ec642a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15ec642a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d444100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fd15ed29e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15eca5120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15eca5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5f4020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fd15ed1ee00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15ec95e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15ec95e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d582100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fd15ed11020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15ec83d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15ec83d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d515100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fd15ecf5af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15ec56bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15ec56bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3db100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fd15ed0f348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15ec7ce40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15ec7ce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4c0180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fd15ed04658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15ec6abd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15ec6abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d453100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fd15ecfb348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15ec5b430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15ec5b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3ea100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fd15ecef968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15ebfe180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fd15ed25348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15eca25b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15eca25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5eb020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fd15ed1a4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15ec912a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15ec912a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d579100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fd15ecfd020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15ec5d1e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15ec5d1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3f0180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fd15ed187e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd15ec895b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd15ec895b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d524100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fd15ed0caf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15ec772a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15ec772a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4b7100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fd15ed01af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15ec66020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15ec66020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d44a100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fd15ecf87e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15ec588c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15ec588c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d3e1100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fd15ed3bab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15eca8dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15eca8dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5fa020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fd15ed20af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd15ec97bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd15ec97bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d588100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fd15ed15c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd15ec86a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd15ec86a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d51b100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fd15ed08020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd15ec74740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd15ec74740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d4ae100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fd15ecf1658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15ec09c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fd15ed06348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd15ec6c930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd15ec6c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d459180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fd15ed101a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd15ec82e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd15ec82e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d512100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fd15ed27020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd15eca42a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd15eca42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d5f1020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fd15ed1c100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd15ec93020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd15ec93020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd15d57f100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ed92b08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd15ed8f020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd15ee47dd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd15ed707b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd15e770790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncMode" scoped="" ref="0x7fd15eb85ca8"/></from>
      <to><interface-ref name="TimeSyncMode" scoped="" ref="0x7fd15ea6f700"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fd15eb829d8"/></from>
      <to><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fd15ea6e020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd15eb93438"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd15ea73020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd15ea6e7a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd15eb98020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fd15ea6ed78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea586f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea586f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea0eb80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15ea6ca20"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15ea18610"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15ea685e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15ea557a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncPacket" scoped="" ref="0x7fd15ea61da8"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15ea145c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15ea145c0"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15e9fb020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd15ea5f5c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc568c8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc568c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15dfe9020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15ea68c88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15dc3c420"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15dc3c420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd15ea63d00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd15de8cb98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd15de8cb98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd15de85a08"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15ea62470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15dc32390"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="sendMsg" scoped="" ref="0x7fd15ea5d5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="processMsg" scoped="" ref="0x7fd15ea5dd88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea0eb80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15e958818"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15e9fb020"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15e9eae30"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15ea49740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15ea0cdf0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15ea0cdf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15e9eeb50"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15ea18610"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15e9ff020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15e9ff020"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15e9f1020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd15ea54348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd15ea0c818"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd15ea0c818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd15e9e55e8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ea2c418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ea09af8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ea09af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e943ac0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15ea32260"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e059060"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15ea557a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15ea0dc38"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15ea0dc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15e9e7a58"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15ea34de0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15ea091a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15ea091a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e94cc78"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15ea1f498"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15ea06020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15ea06020"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15e9f7918"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15ea39e08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15ea0ba30"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15ea0ba30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15e9ed8e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15ea1b4f8"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15ea02020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15ea02020"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15e9eb368"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15ea23130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e063020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e063020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e055020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15e958818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15e92b3a0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e943ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e917668"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e94cc78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e918658"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15e9d8320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15dc62080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15dc62080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15d024400"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7fd15e9e4ce0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc61888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc61888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15d022bd8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd15e9e4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15dc62c38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15dc62c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15d022020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e9d7510"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e9d3478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e063020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e9c8850"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e060ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e060ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e052ac8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15dc5a6b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e61dd70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15e61dd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e5de878"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd15e9ce668"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc5b4a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd15e9cd870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc568c8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e9c7898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15e9da358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15dc83348"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7fd15e9da9d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd15dc82020"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15e92b3a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15ddbbdc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e93ab48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15dd86020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd15e92d658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd15dd87400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15e94d0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15dd882a8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15e9577a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15dd8d980"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd15e954498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd15dd8a628"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e945e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e9197e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e9197e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e917668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ddbb318"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15e956928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15dd8cab0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e918658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd15e0693b8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd15e931a98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd15e916128"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd15e916128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd15dda72d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15e954a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15dd8ac18"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e942ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e917020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e917020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e0686b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fd15dd7e698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e9294f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15dd84020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd15e9234c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd15e9234c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd15de20db8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15dd84cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15e9191d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15e9191d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15de1fae8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15dd808d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15e2052b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15dd83368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e05c2e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15dd82188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e05bb60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd15dd82ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e893af8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e893af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e889328"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd15dd7f6a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e911678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e911678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e90c948"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15dd7d2a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15ddbbdc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd15ddb8d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e0686b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e05a630"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd15dda72d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd15dda5540"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd15de20db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd15de15490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ddbb318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ddb4170"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd15e924020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15de20748"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15de20748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fd15de16dc8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd15e0693b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd15e05b210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e9294f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15de50e20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15de50e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15de17428"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd15e91a330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15de21a40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15de21a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd15de16118"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd15e9246a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd15de1e1a8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd15de1e1a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd15de14808"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15de1fae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15de14188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd15ddb8d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15e915770"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15e915770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15e90d140"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15de1d670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15de70d08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15de70d08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15de69438"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15de6da40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15ddaa5c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15ddaa5c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd15dda6020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15dda6020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15ddbc080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15ddbc080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd15ddb9838"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15ddb9838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15e9122d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15e9122d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15e90dbe0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15de1d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15ddbcc80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15ddbcc80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd15ddb8668"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15ddb8668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15de52750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15de52750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15de4d958"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15de4e560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15e911020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15e911020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15e0ecde8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15e0ecde8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15e0e62f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e90b798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e8a3e00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e8a3e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e88a650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e903a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e89e8b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e89e8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e886080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd15e909ce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd15e1e7c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd15e909ce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd15e0efb40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd15e0efb40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd15e0e7148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd15e1e7c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd15e1c0e48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd15e8f94b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd15e1e4480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd15e1e4480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15e1be6d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd15e902208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e1e3140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e1e3140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e1bc4b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e8f8de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e8f6020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd15e900020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd15de8cb98"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fd15e8eb540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15de8e338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15de8e338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e428790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e9007b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fd15e8e7b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fd15e8e9cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fd15e8eae68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fd15e88dd28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fd15e8854d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fd15e882060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd15e7ddd38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd15e7ddd38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15e7d63b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd15e878020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd15e58f638"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd15e58f638"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd15ed227e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd15e8771b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd15e58cae0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd15e58cae0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fd15ed244d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd15e876378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fd15e58adf0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd15e58adf0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7fd15ed25348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd15e870b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fd15e580020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd15e580020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd15e4e4420"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd15e85f3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e274280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e274280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15e85e518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fd15e272a50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15e272a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e85ebf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e270cd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e270cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e860ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e273de8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e273de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e8603c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e26f368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e26f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e867120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e267838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e267838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e867990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e2637c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e2637c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e866230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e261020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e261020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e866ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e26cdd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e26cdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e8633d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e26a5c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e26a5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15e873a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fd15e25d7c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15e25d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e873128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e25d020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e25d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e863c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e268c90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e268c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15e862530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fd15e26ad60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15e26ad60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e862da0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e269cc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e269cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fd15e85ce50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e24da48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e24da48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fd15e85c140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e2291a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e2291a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15e86b1b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15e2052b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd15e8817f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd15e207d10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fd15e8513f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fd15e852598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15e7dd3c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e593438"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15e593438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e5983a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd15e7d63b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15d29ec18"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd15d29ec18"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15d291020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd15d28b450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15d2972d0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd15d2972d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15d282420"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15d28e1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e61dd70"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd15d27e540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e7bf020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15e7bf020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e715490"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd15d2795a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd15e79d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e7b10c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e710568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fd15e7a1b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd15e70eca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd15e79d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fd15e709540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd15e79d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fd15e7068e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd15e79d020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fd15e702b88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fd15e6fd020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e786950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e786950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e775558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd15e77c470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd15e76f020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd15e78c980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd15e774670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15e794d90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e77a400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15e66f8b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e7bf020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd15e5dcb10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e61bad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15e61bad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e613a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15e601b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e7bf020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd15e58e7d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fd15ed1a4d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd15e58d960"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fd15ed00c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd15e590428"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fd15ed08020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd15e58bc58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fd15ed0bc78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd15e57b3c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd15e579180"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd15e580be8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd15e5639a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7fd15e579d38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd15e7a1b68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15e562480"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fd15e546518"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fd15e546518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e4f5970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7fd15e4e3020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd15e590428"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fd15e54b518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e50a7a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fd15e548518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e4fecd8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fd15e545518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e4f06a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fd15e54a518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e5053e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fd15e547518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e4f99d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fd15e54e550"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e520a70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fd15e549518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd15e501020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e50d908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fd15e53e208"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e5095f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fd15e53e940"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e5042e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fd15e5400a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e501de0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fd15e5407e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4fcb10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fd15e53f020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4f8908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fd15e53f758"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4f4780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fd15e53d020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4ef5f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fd15e53d758"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7fd15e4e18e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd15e272438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e2667c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd15e263020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e2587c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e25a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e2706b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e25b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd15e25f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e274e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e49dde8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e26e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15e26e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e26ed50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e25a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e269528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e258020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e259020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd15e25f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e25b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e2617c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e257020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e2737d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd15e26c638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e2684f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e266020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e26d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd15e26c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e26f980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e25e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd15e2597c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e25e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15e2700a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd15e2607c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e260020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15e26d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e2560a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e499e50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e496040"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e496d40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e49ac10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e495a98"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fd15e491838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e42d978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15e42d978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e428790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd15e4941e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e2c1020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e2c1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e2d3870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd15e493d08"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd15e2c1c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd15e2c1c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd15e408a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e491020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e2c02a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e2c02a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e3febc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e490730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fd15e4855d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15e428790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e423020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e3febc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e3f9020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd15e408a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd15e3fbd80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15e2c2960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e408400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15e408400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e3fb7a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fd15e2d0700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e404978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fd15e2cf4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd15ed227e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd15e3fe0f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd15e3fa428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e404978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e3f9c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7fd15e3db208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e2db200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e2db200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d196a28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15e3d75d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15e2da760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15e2da760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d193020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fd15e3f6020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fd15e38d020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fd15e38d020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fd15e38adc8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fd15e3d7d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd15ed71240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fd15e3b8b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fd15e37d350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd15ed71240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fd15e380c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd15ed227e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fd15e384de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fd15ed21968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fd15e37f020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fd15ed20af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fd15e37e190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fd15ed1fc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15e2da020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d194820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d1938c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15e2d9020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15d1920a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15d198bf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15d192b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15e295020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15e2b8670"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd15e2b63b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd15e2b9b08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd15e2b9b08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fd15ed29e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd15e2b5648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd15e298ca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd15e298ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fd15ed2ac78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd15e2b47d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd15e297e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd15e297e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fd15ed3bab0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e2407c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd15e24acd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e2437c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e23d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd15e23da88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e2312e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e2342e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e248020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e2352e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15e2427c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e2417c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd15e23aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e23c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e24b740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e247900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15e246020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e246738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e235a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e248c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e241020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e242020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e24a6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e233a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e234a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd15e2392e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e236a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e23b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e231a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e24a0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd15e243020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e240020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e23ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e23e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15e249368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e23ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e246d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd15e2449b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15e2362e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e237a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e2472e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e2372e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd15e2332e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e239a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15e249980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd15e23a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e248638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e23ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15e2443a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e22f020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e21dc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd15e2273a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e221dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e21b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd15e21a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e20f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e2127c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e226638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e2137c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15e220d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e21ecc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd15e216020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e21a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e229da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e223020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15e223638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e223d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e212020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e2242e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e21e528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e2205c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e228d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e20f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e210020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd15e2167c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e213020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e2197c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e20e020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e228748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd15e221638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e21d4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e219020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e21c838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15e2279b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e21b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e2223a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd15e221020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15e2147c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e214020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e224900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e2157c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd15e2107c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e215020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15e226020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd15e2177c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e226c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e217020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15e2229b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e20d0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd15e1e2cb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd15e1bb428"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fd15e1e1458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fd15e1bbb70"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fd15e1ba648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd15e7ddd38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd15e1af500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd15e590428"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd15e1ae800"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd15e58f638"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd15e1ad988"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fd15e58bc58"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd15e1b09a8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fd15e57b3c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd15e1acb58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e116cb8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15e116cb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e1ab960"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e114948"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e114948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e1a81b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd15e1132e8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e1132e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15e1a8880"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fd15e112c50"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15e112c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e1a7020"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e1112e8"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e1112e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e1a7710"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e110c50"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e110c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e1a9938"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e10aa88"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e10aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e1aa390"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e0f8020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e0f8020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e1a90c8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e0fe470"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e0fe470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e1a7e10"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e10b2e8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e10b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e1a4020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e107c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e107c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e1a48a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e106470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e106470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15e1a68f8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fd15e10d678"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15e10d678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e1a2208"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e0fcc10"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e0fcc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e1a3130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd15e0fd470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e0fd470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e1a3960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd15e0fdc10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e0fdc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e19d1b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e0ec4b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e0ec4b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e0e7930"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e1b6628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e1b54d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15e1b4150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e1b1d88"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e060ac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e19dad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e109a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd15e112020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e10ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd15e106c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e0fa470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15e10ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd15e103c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e105470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15e10e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e10ea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e0fec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e110020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e10a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e113900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd15e101470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e0ffc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e104470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e0fac10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd15e10c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e1092e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e105c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e107470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15e112638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e10d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd15e10dc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15e0ff470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e100c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e110638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e100470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd15e0fc470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e101c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd15e103470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e111900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e104c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fd15e0eb578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fd15e0e6a48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd15e0d26a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd15e0e5120"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd15e58f638"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd15e0e4378"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fd15e58e7d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd15e0e3508"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fd15e58d960"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd15e0e2720"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd15e580be8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd15e0e13b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15decfdb8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15decfdb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e0df100"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fd15deb4c10"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd15deb4c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e0de510"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15deca638"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15deca638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15e0dfde8"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fd15dec82e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd15dec82e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e0dec68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e0ddaf8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15e0da5e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e0dc4b0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e893af8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e0d68c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15dec1c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15dec1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e0d51e8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15dec0470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15dec0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e0d61c0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fd15dec7060"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd15dec7060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e0d4bc0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fd15deb4470"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd15deb4470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15e0d5a18"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd15deb7470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd15deb7470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15e0d4378"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd15deb7c10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd15deb7c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e0d3538"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15deb8c10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15deb8c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15e0d3d88"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd15decd470"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd15decd470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fd15e0c6cb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15e000720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15e61dd70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd15e050520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15e001528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd15e04f788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15dfe9020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd15dfe9020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd15def0c38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dff0d78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15defd0c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15dff0080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15dfe7618"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15dfe7618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15df777d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd15def75a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15df49290"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd15df44648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd15dfe4020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd15dfe4020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15df76020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15deefe48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fd15dfe0338"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fd15dfe0338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15df72128"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd15df72128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd15d0cd020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15df777d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15d0d2600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd15df76020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd15d0d2da8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d0ca168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15e794d90"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15d0c5020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e786950"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd15d0c4020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd15e78c980"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd15d0c00a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd15e77c470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd15df405e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd15def2618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15dee7420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dff0d78"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15dec2a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd15decc100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15dec6a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd15dec0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd15decb3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15deb8470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd15dec5a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd15dec3a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd15debcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd15debf470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15decea18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15decac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd15dec8a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15deca020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15dec32e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15dec52e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd15decda88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd15deb5c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd15debb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd15deb9c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd15debe470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd15dec62e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15dec22e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd15debfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd15dec1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd15decc718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd15dec7c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd15deb9470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd15debac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15deba470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd15deb5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15debbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd15deccd30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd15debc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd15decb9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd15debec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd15dec7678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd15deb2020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd15de8ab10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd15de869f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd15de90db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd15de86198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15de68750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd15de6da40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15de67428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15de6a978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15de6a978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e428790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd15de662a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd15de8cb98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de66a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd15de52e18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd15de4a060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15de4ad30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd15de4e560"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de493c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd15de13528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd15de1d670"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd15de12358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd15de1d020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15de12970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de117a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15de101c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15ddc52a8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fd15dde5ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fd15ddba928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15ddb6d50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd15ddb6d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd15e428790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15dda23c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e918658"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15d024400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15d015530"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15d022020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15dc825f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15d022bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc812c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd15dc5f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd15d01e2a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd15d01e2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15dc80968"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc812c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15e954a88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15dc80968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e94cc78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15d0142c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15dcd64f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15d014e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc812c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd15dcd64f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd15dc8f920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15dc8e6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15dc84208"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd15dc84208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd15e9577a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc8d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc812c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd15dc8ca10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd15dc825f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fd15dc8b780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fd15dc89020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd15dc82020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd15e954498"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15dc7f6b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15dc77170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e943ac0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd15dc83348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd15e956928"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfc1d08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d93d4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelX" scoped="" ref="0x7fd15d6416c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfc5498"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfc5498"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x7fd15d9d18a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Sounder" scoped="" ref="0x7fd15d648478"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7fd15dbd1598"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7fd15dbd1598"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7fd15dbce358"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7fd15d63e508"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfb7b98"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfb7b98"/></from>
      <to><interface-ref name="MagX" scoped="" ref="0x7fd15d6d4c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfbb618"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d89ae78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelY" scoped="" ref="0x7fd15d640e60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfc38d8"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfc38d8"/></from>
      <to><interface-ref name="ReadY" scoped="" ref="0x7fd15d9ce578"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Vref" scoped="" ref="0x7fd15d648b58"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfc8058"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfc8058"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cf8b6e8"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfbe1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8ae928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7fd15d63db78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cfb4c98"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cfb4c98"/></from>
      <to><interface-ref name="MagY" scoped="" ref="0x7fd15d6d2918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15dbcead0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15dbcc1c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15dbcc1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7fd15dbc7b28"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7fd15dbb67c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7fd15dbb67c0"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7fd15ed17968"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fd15dba9548"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd15db87728"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7fd15dba3b78"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7fd15db9b020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7fd15dbb5948"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7fd15ed16af0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7fd15dbb2de0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7fd15ed11020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7fd15dba1060"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7fd15db9a3c0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7fd15dba1d40"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7fd15db990f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fd15dbad338"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fd15ed01af0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7fd15dba5ca0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7fd15ed0caf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7fd15dbb7638"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7fd15ed187e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7fd15dbb4ad0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7fd15ed15c78"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fd15dba8cd8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd15db80728"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7fd15dba2340"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fd15db9b690"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7fd15dba6b18"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fd15ed0d968"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7fd15dbaf020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7fd15ed101a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fd15dbaa878"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd15db8a020"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7fd15dba0708"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7fd15db99760"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fd15dbac4c0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fd15ed00c78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7fd15dbb3c58"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7fd15ed14e00"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7fd15dba29b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fd15db9bd00"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7fd15dba16d0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7fd15db9aa30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fd15dbae190"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fd15ed02968"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fd15dba8150"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd15db83020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7fd15dba7888"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7fd15ed0ae00"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7fd15dba0d78"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7fd15db99dd0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7fd15dbba4e0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7fd15ed19658"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fd15dbab648"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fd15ecffe00"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db8aad0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7fd15e548518"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db862e8"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7fd15e547518"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db83ad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fd15e546518"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db7e2e8"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7fd15e545518"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cf8b6e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf8ad78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d9e0438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf8ad78"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf89648"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15da05680"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fd15db59a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fd15da2b428"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d9eb720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15da299a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d9ed060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15da2e6a0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15da2ab18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15db480d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15db480d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15db40b70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fd15db449b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fd15db3f628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15da53840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15da53840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15cf76060"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15da4f3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15db2f0d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15db41a20"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15db41a20"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15dafcc40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15db3c610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15ed45b98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15da4c060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15db403b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da4cd18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da51dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da51dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf754c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fd15daf50c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd15ed71240"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15da51698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cf76d58"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15da509d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf740e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf74980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15da4f3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15cf72130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cf78020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15cf702e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15cf3f020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15da4c060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cf3f740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15da4c780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf3fcd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da4cd18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf3e908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15da36908"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7fd15da184d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7fd15d9cc2b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cf2d020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cf2d020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf2c5d8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fd15d9c3148"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7fd15d9c3148"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fd15d9bf8a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x7fd15d9d18a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d966d98"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x7fd15d9ce578"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d95f2e8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d962cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d9c5428"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d9c5428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d99e748"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d963628"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7fd15d9cc2b0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d95a240"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d9c5428"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d95db28"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7fd15d9c9020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7fd15d9c3b10"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fd15d9be388"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d99e748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15cf1b4b0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d96ed50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d99dc50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d99dc50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf1a940"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d96d940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d99c888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d99c888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf19578"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15d997d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d9c2cd0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d9bee30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d9a5b68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d9a5b68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x7fd15d9b9e30"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x7fd15dbb4ad0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x7fd15d9b7020"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7fd15dba1060"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x7fd15d9b76c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7fd15dba16d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fd15d9aac10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d99d510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cf1a200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf19e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d99a140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15cf185d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cf1d328"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15cf155f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15cee4d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d997d50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cee37b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d96e7b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cee3d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d96ed50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cee2940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d96d940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd15cee1120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fd15cee18c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf2c5d8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf2ce80"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7fd15d9c9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15ceba1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15ceba1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15ceb9778"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fd15d9c3b10"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15ceb9778"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ceb8060"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15d93d4c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8bbd58"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d8b95e8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7fd15d9341c8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7fd15d9341c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8ee020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d8b8ca0"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7fd15d93a9c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7fd15d93a9c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d9227c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7fd15d931020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8e0288"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d9227c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15ce66060"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fd15d936d70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d91c910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d91c910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15ce23cc8"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d9163b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d921c50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d921c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ce654c0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d914020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d920888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d920888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ce640e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15d917380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d8ef270"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7fd15d8ec638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d92e678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d8eb370"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d8d35e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d8d35e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7fd15d8e6438"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7fd15dbad338"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fd15d8e56c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8ccaa8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15d8ccaa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d912de8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d91bdd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d91bdd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ce20268"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d9119d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d91a9d8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d91a9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ce20e20"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15d913d80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d8e1600"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7fd15d8de8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d92e678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d8dd680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d8d35e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7fd15d8d85d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x7fd15dbba4e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fd15d8d7848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8ccaa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8ca060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d92d158"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7fd15d92db68"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fd15dba2340"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d926398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cea19a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d926ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cea0268"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d92e678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15cea2bb8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d925700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cea0e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce9f6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d924020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15ce9fe78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cea5af8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce9c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d921510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ce66d58"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce64980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d91e140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15ce63130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ce68020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce602e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d91b698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ce21a28"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce1f6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d9193c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15ce1fe78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ce25b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce1c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15cdeb740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d917380"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cdea268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d917db0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cdea800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d9163b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cde83f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d914020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd15cde8b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fd15cde7470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15cdd4ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d913d80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cdd3578"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d912850"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cdd3b10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d912de8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cdd2700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d9119d8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd15cdd1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fd15cdd17c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fd15d8e4d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fd15d8d6e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8ca060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d8ca908"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15d8ae928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d8a8560"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d8a7da8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x7fd15d931020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d8a4510"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x7fd15d936d70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7fd15cfbab80"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7fd15d8872e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7fd15d8872e0"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7fd15d883828"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fd15d890bb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cd8c520"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cd8c520"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cd8aac8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8889a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8889a0"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7fd15d882be0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15d89ae78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d6ef020"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d6eb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d889d20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d889d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d702d88"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d6ee860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x7fd15d890bb0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d702d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15ccc5830"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6fb800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6ff268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6ff268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ccc4dd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6fa3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6ffe20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6ffe20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ccc29d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15d6fc6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d886cd8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d881738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d708020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d708020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x7fd15d87c7f8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7fd15dbb5948"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x7fd15d87b9c8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x7fd15dbb2de0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x7fd15d87acf8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fd15dbab648"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x7fd15d878020"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fd15dba29b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d86c280"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d70e020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d70e020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d8329b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fd15d86ad48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d8401d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d8401d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d833538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x7fd15d869ad8"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fd15dba8cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d833538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d809140"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d8329b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d7d4020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fd15d7d0c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d814d80"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d814d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15cd73d80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd15d7cfa10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d763700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fd15d7ca420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fd15d75f318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15d80f600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15d7c5e60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d80d2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d812268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d812268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cd50268"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fd15d75f930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fd15d756828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fd15d756828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fd15d74e1d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fd15d75b2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15dc32390"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fd15d75a908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd15dc32390"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d813af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cd51af8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d812e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cd50e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cd4f6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d8116d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15cd4fe78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15cd75cb8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15cd4b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fd15d74cb50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fd15ed0f348"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fd15d74be08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fd15ed0e7e0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d700af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ccc4698"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ccc13e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d6fe6d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15ccc1b68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ccc77b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15ccbfda0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15cc8d5c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d6fc6d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cc8c020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d6fb268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc8c5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6fb800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc8b268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6fa3f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd15cc8ba08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fd15cc892e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cd8aac8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cd893f0"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fd15cfb7020"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fd15d6d7b00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fd15d6d7b00"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fd15d6ca358"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7fd15d6cf6a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cc6bc60"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cc6bc60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cc68220"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fd15d6c6060"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7fd15d6c6060"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fd15d6c13c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7fd15d6d4c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d670648"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7fd15d6d2918"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15d669d58"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fd15d6ca358"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fd15d6c27e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d66c6b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d6c7328"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d6c7328"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d680d88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d66d020"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7fd15d6cf6a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d665ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d6c7328"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fd15d6675e8"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7fd15d6cd4c0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7fd15d6c6a28"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fd15d6c1dd0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d680d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15cc53e20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67a800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67e268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67e268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc513f0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6783f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d67ee20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d67ee20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc4f020"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15d67b6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d6c5cf8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d6b8be0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d68c1c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d68c1c8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d8329b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fd15d6b4828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d68d468"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15d68d468"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15d833538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d6c0888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd15d6860a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd15d6860a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagPower" scoped="" ref="0x7fd15d6bb9e8"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x7fd15dbb3c58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcX" scoped="" ref="0x7fd15d6b9cc8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7fd15dba0708"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcY" scoped="" ref="0x7fd15d6b8418"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7fd15dba1d40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <from><interface-ref name="signalAdjustDone" scoped="" ref="0x7fd15d6a1100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d67faf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cc52b48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cc4f8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d67d6d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd15cc4e0a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cc55e08"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd15cc4c100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd15cc1b740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd15d67b6d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cc1a268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d67a268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc1a800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67a800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc193f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6783f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd15cc19b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fd15cc17470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cc68220"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cc68ac8"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fd15cfb4120"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fd15d6d7b00"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7fd15d6cd4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15cbf2ba8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fd15cbf2ba8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cbef180"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fd15d6c6a28"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cbef180"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cbefa28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimeSyncC" loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimeSyncP" loc="37(TimeSyncC.TimeSyncP):/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <instance number="0">
        <component-ref qname="TimeSyncP"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimeSyncMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaz platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaz platform. This is a naming wrapper&#10; around the CC2420 Active Message layer that implemets timesync interface (TEP 133).&#10;&#10; @author Philip Levis&#10; @author Brano Kusy&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7fd15ed96020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2//tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2//tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd15dfda110"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimerC" loc="44(TimeSyncC.TimerC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspC" loc="39:TestFtspC.nc">
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C" loc="39(TestFtspAppC.SensorMts300C):/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensorMts300C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC" loc="39(TestFtspAppC.SensorMts300C.VoltageC):/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC" loc="18(TestFtspAppC.SensorMts300C.AccelXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.AccelXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC" loc="18(TestFtspAppC.SensorMts300C.AccelYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.AccelYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.PhotoC" loc="18(TestFtspAppC.SensorMts300C.PhotoC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.TempC" loc="18(TestFtspAppC.SensorMts300C.TempC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC" loc="40(TestFtspAppC.SensorMts300C.MicC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.MicC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC" loc="16(TestFtspAppC.SensorMts300C.MagXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagReadP" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagConfigP" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagP" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.I2CPot" loc="43(MagConfigP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.WarmupTimer" loc="44(MagConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter" loc="89(MagConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.mag">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter.Queue" loc="42(MagConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.Arbiter.Arbiter" loc="52(MagConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.PowerManager" loc="67(MagConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.PowerManager.PowerManager" loc="58(MagConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcX" loc="23(MagReadP.AdcX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcY" loc="23(MagReadP.AdcY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.MagXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC" loc="16(TestFtspAppC.SensorMts300C.MagYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.MagYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.MyTimer" loc="44(TestFtspAppC.MyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd15ececb98" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd15ece9020" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd15ece9368" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd15ecde608" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd15ecde970" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd15ecdecd8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd15ecdb060" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd15ec4d020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd15ec4d388" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd15ec4d6f0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd15ec4da20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimeSyncP" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eb86c80" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
          <component-ref qname="TimeSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eb86c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd15e66e1f8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e66e1f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fd15e66e548" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd15e672a20" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd15e672a20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd15e65a198" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e65a198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fd15e65a498" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd15e615e28" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd15e615e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd15e6125c8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e6125c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd15e5f6020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd15e5f6020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd15e5f6788" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd15e5f6788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd15e5f6b50" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd15e5f6b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd15e5f5348" loc="58:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd15e5f5348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd15e5f56f0" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd15e5f5e80" loc="60:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd15e5f5e80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd15e622c00" loc="52:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd15e622c00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd15e5d4398" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd15e5d4398"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd15e5d4760" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd15e5d4760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd15e5d3020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd15e5d3020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd15e5d33c8" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fd15e5427e0" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fd15e542b48" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fd15e51f020" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd15e51f350" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2//tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd15e334578" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd15e329510" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15dfff110" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15dfff110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd15dfda110" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd15dfda110"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd15dfda400" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd15dfd1720" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd15dfd1720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd15dfd1a10" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15df6d300" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15df6d300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15df3e698" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15df3e698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd15df3e9a8" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd15dcfb348" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd15dcf2020" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd15dcee8b0" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd15dcd4730" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorMts300C" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd15dac11c8" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fd15dab7860" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fd15da9b5c0" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7fd15da041d0" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7fd15da041d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AccelYC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MicC" loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd15d8285a0" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MagXC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MagYC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd15ed52d50" loc="58:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15ed52d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed510d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd15ed4e940" loc="57:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd15ed4e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd15ed4ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd15ed4a9a0" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd15ed4a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed4acf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ed51cc8" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ed51cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed4b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd15ed45b98" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15ed45b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd15ed4a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd15ed4a1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd15ed4a330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd15ed4a4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd15ed4a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd15ed42b90" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fd15ed42b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ed424f0" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ed424f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed42840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fd15ed41398" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fd15ed41398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed416e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd15ed3c108" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd15ed3c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed3c458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd15ed44a08" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd15ed44a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed44d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd15ed377f8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd15ed377f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed37b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fd15ed315f8" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fd15ed315f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed31948"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed31ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed31c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed31de0"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed371a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed37330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed374b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd15ed38428" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd15ed38428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed38778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fd15ecf4c78" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fd15ecf4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf35e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf3770"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf38f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf3a80"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf3d90"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf2020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fd15ed0e7e0" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fd15ed0e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed0eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed0ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed0ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed0d020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed0d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed0d330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed0d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fd15ed037e0" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fd15ed037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed03b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed03cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed03e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed02020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed02330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed024b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed02640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fd15ecfa4d0" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fd15ecfa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecfa820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecfa9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecfab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecfacb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecfae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf9020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf91a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fd15ed244d0" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fd15ed244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed24820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed249a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed24b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed24cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed24e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed23020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed231a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fd15ecfc1a0" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fd15ecfc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecfc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecfc678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecfc800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecfc988"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecfcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecfcc98"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecfce20"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fd15ed227e0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fd15ed227e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed22b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed22cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed22e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed21020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed21330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed214b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed21640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fd15ed17968" loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fd15ed17968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed17cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed17e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed16020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed161a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed16330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed164b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed16640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fd15ed0bc78" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fd15ed0bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed0a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed0a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed0a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed0a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed0a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed0a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed0a950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fd15ed00c78" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fd15ed00c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecff020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecff330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecff4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecff7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecff950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fd15ed2ac78" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fd15ed2ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed29020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed291a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed29330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed294b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed29640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed297c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed29950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed29ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fd15ed1fc78" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fd15ed1fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed1e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed1e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed1e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed1ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fd15ed14e00" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fd15ed14e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed131a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed13330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed134b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed13640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed137c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed13950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed13ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed13c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fd15ed071a0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fd15ed071a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed074f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed07678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed07800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed07988"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed07b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed07c98"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed07e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fd15ecf6968" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fd15ecf6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf6e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf51a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf54b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf5640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fd15ecf07e0" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fd15ecf07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf0b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecef020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecef330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecef4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fd15ed054d0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fd15ed054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed05820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed059a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed05b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed05cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed05e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed04020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed041a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fd15ed261a0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fd15ed261a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed264f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed26678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed26800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed26988"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed26b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed26c98"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed26e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fd15ed1b348" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fd15ed1b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed1b698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1b820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1bb30"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed1be40"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed1a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fd15ecf24d0" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fd15ecf24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf2820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf29a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf2cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf1020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf11a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fd15ed19658" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fd15ed19658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed199a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed19b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed19cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed19e40"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed18020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed181a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed18330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fd15ed0d968" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fd15ed0d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed0dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed0de40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed0c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed0c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed0c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed0c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed0c640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fd15ed02968" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fd15ed02968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed02cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed02e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed01020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed011a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed01330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed014b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed01640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed017c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fd15ecf9658" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fd15ecf9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf99a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf9b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf9e40"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf81a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf8330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fd15ed23658" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fd15ed23658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed239a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed23b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed23cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed23e40"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed221a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed22330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fd15ed21968" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fd15ed21968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed21cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed21e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed201a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed20330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed204b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed20640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fd15ed16af0" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fd15ed16af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed16e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed15020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed151a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed15330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed154b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed15640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed157c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed15950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fd15ed0ae00" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fd15ed0ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed091a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed09330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed09640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed09950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed09ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed09c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fd15ecffe00" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fd15ecffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecfe1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecfe330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecfe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecfe640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecfe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecfe950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecfead8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecfec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fd15ed29e00" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fd15ed29e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed281a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed28330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed28640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed28950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed28ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed28c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fd15ed1ee00" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fd15ed1ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed1d2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1d470"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1d5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1d780"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1d908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed1da90"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed1dc18"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed1dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fd15ed11020" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fd15ed11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed11370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed114f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed11680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed11808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed11990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed11b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed11ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed11e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fd15ecf5af0" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fd15ecf5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf5e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf4330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf4640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf47c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fd15ed0f348" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fd15ed0f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed0f898"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed0fa20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed0fba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed0fd30"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed0e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed0e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed0e330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fd15ed04658" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fd15ed04658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed049a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed04b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed04cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed04e40"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed03020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed031a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed03330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fd15ecfb348" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fd15ecfb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecfb698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecfb820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecfb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecfbb30"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecfbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecfbe40"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecfa020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecfa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fd15ecef968" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fd15ecef968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecefcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecefe40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecee1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecee4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecee640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fd15ed25348" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fd15ed25348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed25698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed25820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed259a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed25b30"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed25cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed25e40"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed24020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fd15ed1a4d0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fd15ed1a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed1a820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1acb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed19020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed191a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fd15ecfd020" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fd15ecfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecfd370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecfd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecfd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecfd808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecfd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecfdb18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecfdca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecfde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fd15ed187e0" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fd15ed187e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed18b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed18cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed18e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed17020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed17330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed174b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed17640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fd15ed0caf0" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fd15ed0caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed0ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed0b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed0b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed0b330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed0b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed0b640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed0b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fd15ed01af0" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fd15ed01af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed01e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed00020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed001a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed00330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed004b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed00640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed007c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed00950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fd15ecf87e0" loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fd15ecf87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf8b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf6020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf6330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf64b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fd15ed3bab0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fd15ed3bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed3be00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed2a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed2a330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed2a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed2a640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed2a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed2a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fd15ed20af0" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fd15ed20af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed20e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1f330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed1f640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed1f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed1f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fd15ed15c78" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fd15ed15c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed14020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed141a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed14330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed144b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed14640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed147c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed14950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed14ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fd15ed08020" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fd15ed08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed08370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed084f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed08680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed08808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed08990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed08b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed08ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed08e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fd15ecf1658" loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fd15ecf1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ecf19a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ecf1b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ecf1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ecf1e40"/>
        <function-ref name="get" scoped="" ref="0x7fd15ecf0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ecf01a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ecf0330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ecf04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fd15ed06348" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fd15ed06348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed06698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed06820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed069a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed06b30"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed06cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed06e40"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed05020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fd15ed101a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fd15ed101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed104f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed10678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed10800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed10988"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed10b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed10c98"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed10e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fd15ed27020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fd15ed27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed27370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed274f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed27680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed27808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed27990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed27b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed27ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed27e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fd15ed1c100" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fd15ed1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ed1c450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ed1c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ed1c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ed1c8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ed1ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ed1cbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ed1cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ed1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15eca5120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15eca5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca5470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca55f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca5780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca5908"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca5c18"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15eca25b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15eca25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca2908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca2a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca2da0"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca11a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca1330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15eca8dc0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15eca8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca7170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca72f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca7480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca7608"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca7790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca7918"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca7aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15eca42a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15eca42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca45f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca4780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca4a90"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca4da0"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca3020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15eca1740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15eca1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca1c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca0020"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca0330"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca04b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15eca6020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15eca6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca6370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca64f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca6680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca6808"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca6b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca6ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15eca3430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15eca3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca3780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca3908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15eca3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15eca3c18"/>
        <function-ref name="get" scoped="" ref="0x7fd15eca3da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15eca2020"/>
        <function-ref name="set" scoped="" ref="0x7fd15eca21a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15eca2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15eca08c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15eca08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15eca0c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15eca0da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec9f1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec9f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec9f4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec9f640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec9f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5fa020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5fa370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5fa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5fa680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5fa808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5fa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5fab18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5faca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5fae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5f7020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5f7370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5f74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5f7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5f7808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5f7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5f7b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5f7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5f7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5f4020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5f4370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5f4808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5f4b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5f1020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5f1370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5f14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5f1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5f1808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5f1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5f1b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5f1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5f1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5ee020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5ee370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5ee4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5ee680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5ee808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5ee990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5eeb18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5eeca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5eee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5eb020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5eb370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5eb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5eb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5eb808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5eb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5ebb18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5ebca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5ebe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5e8020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5e8370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5e84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5e8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5e8808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5e8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5e8b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5e8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5e8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d5e4020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d5e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5e4370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5e4808"/>
        <function-ref name="get" scoped="" ref="0x7fd15d5e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d5e4b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15d5e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d5e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15ec97bd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15ec97bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec96020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec961a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec96330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec964b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec96640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec967c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec96950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec96ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15ec93020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15ec93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec93370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec934f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec93680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec93808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec93990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec93b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec93ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec93e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15ec99930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15ec99930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec99c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec99e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec98020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec981a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec98330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec984b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec98640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15ec96d60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15ec96d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec950d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec95260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec953e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec95570"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec956f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec95880"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec95a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec95b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15ec92120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15ec92120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec92470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec925f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec92780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec92908"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec92a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec92c18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec92da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15ec98a50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15ec98a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec98da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec97020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec97330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec97640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec977c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15ec95e18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15ec95e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec941a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec94330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec94640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec94950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec94ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec94c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15ec912a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15ec912a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec915f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec91780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec91908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec91a90"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec91c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec91da0"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec8f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d58e180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d58e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d58e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d58e658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d58e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d58e968"/>
        <function-ref name="get" scoped="" ref="0x7fd15d58eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d58ec78"/>
        <function-ref name="set" scoped="" ref="0x7fd15d58ee00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d58d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d58b100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d58b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d58b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d58b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d58b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d58b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d58ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d58bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d58bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d58a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d588100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d588100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d588450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5885d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d588760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5888e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d588a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d588bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d588d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d585100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d585100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d585450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5855d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d585760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5858e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d585a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d585bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d585d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d584020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d582100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d582100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d582450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5825d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d582760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5828e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d582a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d582bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d582d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d57f100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d57f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d57f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d57f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d57f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d57f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d57fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d57fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d57fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d57e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d57c100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d57c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d57c450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d57c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d57c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d57c8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d57ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d57cbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d57cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d57b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d579100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d579100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d579450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5795d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d579760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5798e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d579a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d579bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d579d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15ec88740" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15ec88740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec88a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec88c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec88da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec87020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec87330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec874b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15ec84bd8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15ec84bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec83020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec831a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec83330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec834b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec83640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec837c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec83950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec83ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15ec8a500" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15ec8a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec8a850"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec8a9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec8ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec8ace8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec8ae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec89020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec891a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec89330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15ec878c8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15ec878c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec87c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec87da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec86020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec861a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec86330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec864b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec86640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec867c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15ec83d60" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15ec83d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec820d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec82260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec823e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec82570"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec826f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec82880"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec82a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec82b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15ec895b8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15ec895b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec89908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec89a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec89c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec89da0"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec88020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec881a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec88330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15ec86a50" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15ec86a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec86da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec84020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec841a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec84330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec844b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec84640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec847c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec84950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15ec82e18" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15ec82e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec811a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec81330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec81640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec81950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec81ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec81c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d527180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d527180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d5274d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d527658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d5277e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d527968"/>
        <function-ref name="get" scoped="" ref="0x7fd15d527af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d527c78"/>
        <function-ref name="set" scoped="" ref="0x7fd15d527e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d526020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d524100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d524100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d524450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5245d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d524760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5248e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d524a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d524bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d524d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d523020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d521100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d521100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d521450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5215d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d521760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5218e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d521a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d521bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d521d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d520020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d51e100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d51e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d51e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d51e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d51e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d51e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d51ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d51ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d51ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d51d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d51b100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d51b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d51b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d51b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d51b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d51b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d51ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d51bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d51bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d51a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d518100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d518100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d518450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5185d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d518760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5188e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d518a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d518bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d518d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d517020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d515100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d515100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d515450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5155d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d515760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5158e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d515a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d515bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d515d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d514020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d512100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d512100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d512450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d5125d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d512760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d5128e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d512a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d512bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d512d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d510020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15ec78120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15ec78120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec78470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec785f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec78780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec78908"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec78a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec78c18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec78da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15ec755b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15ec755b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec75908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec75a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec75c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec75da0"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec74020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec741a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec74330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15ec7ce40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15ec7ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec7b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec7b348"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec7b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec7b658"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec7b7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec7b968"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec7baf0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec7bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15ec772a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15ec772a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec775f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec77780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec77908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec77a90"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec77c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec77da0"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec76020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15ec74740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15ec74740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec74a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec74c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec74da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec73020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec73330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec734b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15ec7a020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15ec7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec7a370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec7a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec7a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec7a808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec7a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec7ab18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec7aca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec7ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15ec76430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15ec76430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec76780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec76908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec76a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec76c18"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec76da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec75020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec751a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec75330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15ec738c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15ec738c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec73c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec73da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec72020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec721a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec72330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec724b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec72640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4c0180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4c0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4c04d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4c0658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4c07e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4c0968"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4c0af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4c0c78"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4c0e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4bd100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4bd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4bd450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4bd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4bd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4bd8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4bda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4bdbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4bdd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4ba100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4ba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4ba450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4ba5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4ba760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4ba8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4baa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4babf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4bad80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4b7100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4b7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4b7450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4b75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4b7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4b78e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4b7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4b7bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4b7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4b4100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4b4450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4b45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4b4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4b48e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4b4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4b4bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4b4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4b1100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4b1450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4b15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4b1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4b18e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4b1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4b1bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4b1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4ae100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4ae450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4ae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4ae760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4ae8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4aea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4aebf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4aed80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d4ab100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d4ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4ab450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4ab5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4ab760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4ab8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d4aba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d4abbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d4abd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d4aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15ec6abd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15ec6abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec69020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec691a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec69330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec694b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec69640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec697c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec69950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec69ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15ec66020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15ec66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec66370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec664f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec66680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec66808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec66990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec66b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec66ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec66e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15ec6c930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15ec6c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec6cc80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec6ce08"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec6b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec6b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec6b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec6b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec6b640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec6b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15ec69d60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15ec69d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec680d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec68260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec683e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec68570"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec686f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec68880"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec68a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec68b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15ec65120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15ec65120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec65470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec655f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec65780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec65908"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec65a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec65c18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec65da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15ec6ba50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15ec6ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec6bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec6a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec6a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec6a330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec6a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec6a640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec6a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec6a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15ec68e18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15ec68e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec671a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec67330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec67640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec67950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec67ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec67c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15ec642a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15ec642a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec645f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec64780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec64908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec64a90"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec64c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec64da0"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec63020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d459180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d459180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d4594d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d459658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d4597e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d459968"/>
        <function-ref name="get" scoped="" ref="0x7fd15d459af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d459c78"/>
        <function-ref name="set" scoped="" ref="0x7fd15d459e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d456100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d456100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d456450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4565d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d456760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4568e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d456a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d456bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d456d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d455020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d453100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d453100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d453450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4535d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d453760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4538e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d453a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d453bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d453d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d452020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d450100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d450100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d450450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4505d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d450760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4508e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d450a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d450bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d450d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d44f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d44d100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d44d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d44d450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d44d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d44d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d44d8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d44da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d44dbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d44dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d44c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d44a100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d44a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d44a450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d44a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d44a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d44a8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d44aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d44abf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d44ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d449020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d447100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d447100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d447450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4475d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d447760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4478e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d447a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d447bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d447d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d446020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d444100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d444100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d444450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d4445d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d444760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d4448e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d444a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d444bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d444d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d443020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd15ec5b430" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd15ec5b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec5b780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec5b908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec5ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec5bc18"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec5bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec5a020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec5a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd15ec588c8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd15ec588c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec58c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec58da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec571a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec57330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec574b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec57640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd15ec5d1e8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd15ec5d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec5d538"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec5d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec5d848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec5d9d0"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec5db58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec5dce0"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec5de68"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd15ec5a5b8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd15ec5a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec5a908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec5aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec5ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec5ada0"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec591a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec59330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd15ec57a50" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd15ec57a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec57da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec56020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec561a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec56330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec564b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec56640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec567c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec56950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd15ec5c2a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd15ec5c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec5c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec5c780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec5c908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec5ca90"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec5cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec5cda0"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec5b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd15ec59740" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd15ec59740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec59a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec59c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec59da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec58020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec58330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec584b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec58640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd15ec56bd8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd15ec56bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec54020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec541a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec54330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec544b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec54640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec547c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec54950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec54ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3f0180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3f0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3f04d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3f0658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3f07e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3f0968"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3f0af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3f0c78"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3f0e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3ed100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3ed450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3ed5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3ed760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3ed8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3eda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3edbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3edd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3ea100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3ea450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3ea5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3ea760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3ea8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3eaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3eabf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3ead80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3e7100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3e7450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3e75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3e7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3e78e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3e7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3e7bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3e7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3e4100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3e4450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3e48e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3e4bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3e4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3e1100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3e1450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3e15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3e1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3e18e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3e1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3e1bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3de100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3de450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3de5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3de760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3de8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3dea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3debf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3ded80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15d3db100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15d3db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d3db450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d3db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d3db760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d3db8e8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d3dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d3dbbf8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d3dbd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d3da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec4eac0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec4eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec4ee10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec38020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec381a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec38330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec384b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec38640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec387c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec38950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec35db8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec35db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec33170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec332f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec33480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec33608"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec33790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec33918"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec33aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec33c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec2f3e0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec2f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec2f730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec2f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec2fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec2fbc8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec2fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec2e020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec2e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec2e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec2a7e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec2a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec2ab38"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec2acc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec2ae48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec29020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec29330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec294b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec29640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec26c38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec26c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec25020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec251a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec25330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec254b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec25640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec257c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec25950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec25ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec20020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec20370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec204f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec20680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec20808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec20990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec20b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec20ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec20e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec1b480" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec1b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec1b958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec1bc68"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec1bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec1a020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec1a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec177e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec177e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec17b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec17cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec17e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec16020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec16330"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec164b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec12970" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec12970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec12cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec12e48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec11020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec111a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec11330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec114b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec11640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec0dab0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec0dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec0de00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec0c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec0c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec0c330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec0c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec0c640"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec0c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec0c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec09c38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec09c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec08020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec081a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec08330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec084b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec08640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec087c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec08950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec08ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ec03020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ec03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ec03370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ec034f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ec03680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ec03808"/>
        <function-ref name="get" scoped="" ref="0x7fd15ec03990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ec03b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15ec03ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ec03e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd15ebfe180" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd15ebfe180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15ebfe4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15ebfe658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15ebfe7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15ebfe968"/>
        <function-ref name="get" scoped="" ref="0x7fd15ebfeaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15ebfec78"/>
        <function-ref name="set" scoped="" ref="0x7fd15ebfee00"/>
        <function-ref name="clr" scoped="" ref="0x7fd15ebfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ebc51b8" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ebc51b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd15ee546f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd15ee546f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ebc5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd15ebc57e8" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15ebc57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd15ebc5b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd15ebc5cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd15ebc5e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd15ebc4020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd15ebc41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd15eba5560" loc="60:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd15eba5560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15eba58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd15ed4ce20" loc="57:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd15ed4ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd15eba61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd15eba6e68" loc="59:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd15eba6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15eba51e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd15eba6490" loc="58:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd15eba6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15eba67e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd15eba6968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd15eba6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd15ee48728" loc="48:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ee48728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ee48a78"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ee48c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd15ee51be8" loc="47:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd15ee51be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ee53020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd15ee531a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd15ee53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd15ed92b08" loc="56:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd15ed92b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ed92e58"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ed90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd15ed8f020" loc="57:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd15ed8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd15ed8f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd15ed93c00" loc="55:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd15ed93c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ed92020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd15ed921a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd15ed92330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd15ed707b8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd15ed707b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd15ed70b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd15ee47dd0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd15ee47dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd15ed74170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd15ed71240" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd15ed71240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd15ed71590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd15eb98020" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd15eb98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd15eb98370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7fd15eb8e298" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fd15eb8e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fd15eb8ee18"/>
        <function-ref name="global2Local" scoped="" ref="0x7fd15eb97d30"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fd15eb97310"/>
        <function-ref name="local2Global" scoped="" ref="0x7fd15eb97820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7fd15eb88e00" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15eb88e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fd15eb8d1a8"/>
        <function-ref name="getRootID" scoped="" ref="0x7fd15eb8d330"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fd15eb8d4b8"/>
        <function-ref name="getOffset" scoped="" ref="0x7fd15eb8d640"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fd15eb8d7c8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fd15eb8d950"/>
        <function-ref name="getSkew" scoped="" ref="0x7fd15eb8dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15eb98628" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15eb98628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15eb98978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7fd15eb85ca8" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7fd15eb85ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15eb87020"/>
        <function-ref name="getMode" scoped="" ref="0x7fd15eb871a8"/>
        <function-ref name="setMode" scoped="" ref="0x7fd15eb87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7fd15eb829d8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fd15eb829d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7fd15eb82d28"/>
        <function-ref name="msg_sent" scoped="" ref="0x7fd15eb86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15eb93438" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15eb93438"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15eb93788"/>
        <function-ref name="stop" scoped="" ref="0x7fd15eb93910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd15ea6e7a0" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd15ea6e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd15ea6eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7fd15ea73848" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fd15ea73848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fd15ea71410"/>
        <function-ref name="global2Local" scoped="" ref="0x7fd15ea702e8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fd15ea71898"/>
        <function-ref name="local2Global" scoped="" ref="0x7fd15ea71da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fd15ea5f5c8" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15ea5f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15ea5d190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fd15ea6ed78" loc="53:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fd15ea6ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15ea6c0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15ea6c278"/>
        <function-ref name="start" scoped="" ref="0x7fd15ea6c400"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ea6c588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd15ea6ca20" loc="54:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15ea6ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ea6b770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea68020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea6ab00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ea6a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ea6a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd15ea63d00" loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd15ea63d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd15ea620a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd15ea62228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7fd15ea70748" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15ea70748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fd15ea70a98"/>
        <function-ref name="getRootID" scoped="" ref="0x7fd15ea70c20"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fd15ea70da8"/>
        <function-ref name="getOffset" scoped="" ref="0x7fd15ea6f020"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fd15ea6f1a8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fd15ea6f330"/>
        <function-ref name="getSkew" scoped="" ref="0x7fd15ea6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ea74910" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ea74910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ea74c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fd15ea685e8" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15ea685e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ea68938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7fd15ea6f700" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7fd15ea6f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ea6fa50"/>
        <function-ref name="getMode" scoped="" ref="0x7fd15ea6fbd8"/>
        <function-ref name="setMode" scoped="" ref="0x7fd15ea6fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMsg" ref="0x7fd15ea5d5e8" loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMsg" scoped="" ref="0x7fd15ea5d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ea5d938"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ea5dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processMsg" ref="0x7fd15ea5dd88" loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processMsg" scoped="" ref="0x7fd15ea5dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ea5c170"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ea5c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15ea62470" loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15ea62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15ea628c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15ea62a48"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15ea62bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15ea62d58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15ea61020"/>
        <function-ref name="get" scoped="" ref="0x7fd15ea611a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15ea61330"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15ea61950"/>
        <function-ref name="set" scoped="" ref="0x7fd15ea61640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15ea614b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15ea617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7fd15ea6e020" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fd15ea6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7fd15ea6e370"/>
        <function-ref name="msg_sent" scoped="" ref="0x7fd15ea6e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15ea73020" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15ea73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15ea73370"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ea734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15ea68c88" loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15ea68c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15ea63088"/>
        <function-ref name="fired" scoped="" ref="0x7fd15ea665e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15ea65470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15ea65020"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15ea63928"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15ea634d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15ea66a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15ea67820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15ea65a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15ea67cc0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ea66198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncPacket" ref="0x7fd15ea61da8" loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket" scoped="" ref="0x7fd15ea61da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea60b00"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15ea5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15ea586f0" loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea586f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15ea58a40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15ea58bc8"/>
        <function-ref name="start" scoped="" ref="0x7fd15ea58d50"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ea55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fd15ea145c0" loc="71:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15ea145c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea13540"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15ea13a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15ea49740" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15ea49740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15ea49a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15ea49c18"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea49da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea53020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15ea531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fd15ea18610" loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15ea18610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ea17370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea16b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea16700"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ea17bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ea160f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15ea54348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15ea54348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ea54698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15ea2c418" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ea2c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15ea2c768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15ea2c8f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15ea2ca78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15ea2cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd15ea32260" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15ea32260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15ea2d700"/>
        <function-ref name="clear" scoped="" ref="0x7fd15ea2dde0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea2d020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ea264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15ea557a0" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15ea557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ea55af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd15ea34de0" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15ea34de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15ea38170"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15ea382f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15ea38480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fd15ea1f498" loc="67:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15ea1f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ea1e1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea1da78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea1d628"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ea1ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ea1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15ea39e08" loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15ea39e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15ea4a1a8"/>
        <function-ref name="source" scoped="" ref="0x7fd15ea4a330"/>
        <function-ref name="address" scoped="" ref="0x7fd15ea4a4b8"/>
        <function-ref name="destination" scoped="" ref="0x7fd15ea4a640"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15ea4a7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15ea4a950"/>
        <function-ref name="type" scoped="" ref="0x7fd15ea4aad8"/>
        <function-ref name="setType" scoped="" ref="0x7fd15ea4ac60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15ea4ade8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15ea48020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15ea481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fd15ea1b4f8" loc="68:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15ea1b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea1a370"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15ea1a848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd15ea23130" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15ea23130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15ea22588"/>
        <function-ref name="clear" scoped="" ref="0x7fd15ea22c68"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea23e80"/>
        <function-ref name="set" scoped="" ref="0x7fd15ea21380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15ea0eb80" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15ea0eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15ea0d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15ea0d1a8"/>
        <function-ref name="start" scoped="" ref="0x7fd15ea0d330"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ea0d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fd15e9fb020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15e9fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15e9fbd38"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15e9fa238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15ea0cdf0" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15ea0cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15ea0b170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15ea0b2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea0b480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea0b608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15ea0b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15ea0c818" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15ea0c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ea0cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15ea09af8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ea09af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15ea09e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15ea08020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15ea081a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15ea08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fd15e9ff020" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15e9ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e9ffd38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9fd548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9fd0f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e9fe5d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e9feaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15ea0dc38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15ea0dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ea0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd15ea091a0" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15ea091a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15ea094f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15ea09678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15ea09800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fd15ea06020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15ea06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ea06d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ea04548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ea040f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ea055d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ea05aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15ea0ba30" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15ea0ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15ea0bd80"/>
        <function-ref name="source" scoped="" ref="0x7fd15ea0a020"/>
        <function-ref name="address" scoped="" ref="0x7fd15ea0a1a8"/>
        <function-ref name="destination" scoped="" ref="0x7fd15ea0a330"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15ea0a4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15ea0a640"/>
        <function-ref name="type" scoped="" ref="0x7fd15ea0a7c8"/>
        <function-ref name="setType" scoped="" ref="0x7fd15ea0a950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15ea0aad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15ea0ac60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15ea0ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fd15ea02020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15ea02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15ea02d38"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15ea01238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15e9da358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15e9da358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e9da6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15e9d8320" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15e9d8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e9d8670"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9d87f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9d8980"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e9d8b08"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e9d8c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fd15e9eae30" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fd15e9eae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15e9e8bb0"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15e9e70c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fd15e9f1020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fd15e9f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e9f1d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9ee548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9ee0f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e9f05d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e9f0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15e9eeb50" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15e9eeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e9ed020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15e9ed1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9ed330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9ed4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15e9ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15e9e55e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15e9e55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e9e5938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd15e9e4020" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd15e9e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e9e4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15e9e44f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9e4680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9e4808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15e9e4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x7fd15e9d7510" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e9d7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e9d6a88"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e9d4190"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e9d63a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e9d4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7fd15e9e4ce0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7fd15e9e4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15e9e20a0"/>
        <function-ref name="source" scoped="" ref="0x7fd15e9e2228"/>
        <function-ref name="address" scoped="" ref="0x7fd15e9e23b0"/>
        <function-ref name="destination" scoped="" ref="0x7fd15e9e2538"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15e9e26c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15e9e2848"/>
        <function-ref name="type" scoped="" ref="0x7fd15e9e29d0"/>
        <function-ref name="setType" scoped="" ref="0x7fd15e9e2b58"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15e9e2ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15e9e2e68"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15e9da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15e9e7a58" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15e9e7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e9e7da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd15e9c8850" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e9c8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e9c8ba0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd15e9c8d28"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e9ce020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e9ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd15e9ce668" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd15e9ce668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e9cd220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e9c7898" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e9c7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e9c7be8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e9c7d70"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e9c5020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e9c51a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e9c5330"/>
        <function-ref name="get" scoped="" ref="0x7fd15e9c54b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e9c5640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e9c5c60"/>
        <function-ref name="set" scoped="" ref="0x7fd15e9c57c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e9c5950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e9c5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd15e9cd870" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd15e9cd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e9c7490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fd15e9f7918" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fd15e9f7918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e9f5660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9f3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e9f4b00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e9f4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e9f44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15e9ed8e0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15e9ed8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15e9edc30"/>
        <function-ref name="source" scoped="" ref="0x7fd15e9eddb8"/>
        <function-ref name="address" scoped="" ref="0x7fd15e9ec020"/>
        <function-ref name="destination" scoped="" ref="0x7fd15e9ec1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15e9ec330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15e9ec4b8"/>
        <function-ref name="type" scoped="" ref="0x7fd15e9ec640"/>
        <function-ref name="setType" scoped="" ref="0x7fd15e9ec7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15e9ec950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15e9ecad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15e9ecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fd15e9eb368" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fd15e9eb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fd15e9ea0c0"/>
        <function-ref name="eventTime" scoped="" ref="0x7fd15e9ea598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7fd15e9da9d0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7fd15e9da9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e9dae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x7fd15e9d3478" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e9d3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e9d2900"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e9d0020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e9d2220"/>
        <function-ref name="set" scoped="" ref="0x7fd15e9d0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15e958818" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15e958818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15e958b68"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15e958cf0"/>
        <function-ref name="start" scoped="" ref="0x7fd15e958e78"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e957030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15e93ab48" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e93ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e943020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e9431a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e943330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e9434b8"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e943640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e9437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd15e92d658" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd15e92d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd15e92daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15e94d0c0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15e94d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e94d410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15e94d598"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e94d720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e94d8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15e94da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15e9577a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15e9577a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e957af8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e957c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e957e08"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e956020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e9561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15e954498" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15e954498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e9547e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd15e945e18" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e945e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e94c1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e94c330"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e94c4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e94c640"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e94c7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e94c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15e943ac0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e943ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15e943e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15e939020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15e9391a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15e939330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15e956928" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15e956928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e956c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd15e94cc78" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e94cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15e94b020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15e94b1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15e94b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd15e931a98" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd15e931a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd15e931de8"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd15e938020"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd15e9381a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd15e938330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd15e9384b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15e954a88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15e954a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15e954dd8"/>
        <function-ref name="source" scoped="" ref="0x7fd15e953020"/>
        <function-ref name="address" scoped="" ref="0x7fd15e9531a8"/>
        <function-ref name="destination" scoped="" ref="0x7fd15e953330"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15e9534b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15e953640"/>
        <function-ref name="type" scoped="" ref="0x7fd15e9537c8"/>
        <function-ref name="setType" scoped="" ref="0x7fd15e953950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15e953ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15e953c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15e953de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd15e942ca8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e942ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd15e944020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15e92b3a0" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15e92b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15e92b6f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15e92b878"/>
        <function-ref name="start" scoped="" ref="0x7fd15e92ba00"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e92bb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd15e917020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e917020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd15e917370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd15e916128" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd15e916128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd15e916478"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd15e916600"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd15e916788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd15e916910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd15e916a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd15e9197e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e9197e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e919b38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e919cc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e919e48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e918020"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e9181a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e918330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd15e9234c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd15e9234c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e923818"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9239a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e923b28"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e923cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e923e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15e917668" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15e917668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15e9179b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15e917b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15e917cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15e917e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd15e924020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd15e924020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e924370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd15e918658" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15e918658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15e9189a8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15e918b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15e918cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e9294f8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e9294f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e929848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e9299d0"/>
        <function-ref name="request" scoped="" ref="0x7fd15e929b58"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e929ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e929e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd15e91a330" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd15e91a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e91a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e91a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e91a990"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e91ab18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e91aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd15e9246a0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd15e9246a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e9249f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15e924b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e924d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e923020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15e9231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd15e9191d0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15e9191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e919520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15e915770" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15e915770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15e915ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15e915c48"/>
        <function-ref name="start" scoped="" ref="0x7fd15e915dd0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e912020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15e911678" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e911678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e9119c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e911b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e911cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e911e60"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e910020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e9101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15e9122d8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15e9122d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e912628"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e9127b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e912938"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e912ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e912c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15e911020" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15e911020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e911370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15e90d140" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15e90d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15e90d490"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15e90d618"/>
        <function-ref name="start" scoped="" ref="0x7fd15e90d7a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e90d928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15e90c948" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e90c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e90cc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e90ce20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e90b020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e90b1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e90b330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e90b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd15e902208" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fd15e902208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e902558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e9026e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e902868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e9029f0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e902b78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e902d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd15e8f8de0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e8f8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e8f7170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e8f72f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e8f7480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e8f7608"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e8f7790"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e8f7918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fd15e8f94b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd15e8f94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e8f9808"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e8f9990"/>
        <function-ref name="modify" scoped="" ref="0x7fd15e8f9b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e8f9ca0"/>
        <function-ref name="resend" scoped="" ref="0x7fd15e8f9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15e90dbe0" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15e90dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e90c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e90c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e90c330"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e90c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e90c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd15e900020" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd15e900020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd15e900370"/>
        <function-ref name="rand32" scoped="" ref="0x7fd15e9004f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd15e909ce8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd15e909ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e9080a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e908228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15e8f6020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e8f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e8f6370"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15e8f64f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15e8f6680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fd15e903a78" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e903a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd15e903dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd15e909020"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd15e9091a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd15e909330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd15e9094b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd15e909640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd15e9097c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd15e909950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e9007b0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e9007b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e900b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e900c88"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e900e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e8f8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e8f81a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e8f8330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e8f84b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e8f8ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e8f8640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e8f87c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e8f8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15e90b798" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e90b798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e90bae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e90bc70"/>
        <function-ref name="request" scoped="" ref="0x7fd15e90bdf8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e90a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e90a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fd15e8eb540" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7fd15e8eb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15e8eb990"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15e8ebb18"/>
        <function-ref name="isState" scoped="" ref="0x7fd15e8ebca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15e8ebe28"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15e8f5020"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15e8f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fd15e8e7b80" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7fd15e8e7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e8e6020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e8e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fd15e8e9cf8" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7fd15e8e9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e8e70a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e8e7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fd15e8eae68" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7fd15e8eae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e8e91e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e8e9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd15e893af8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e893af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd15e893e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd15e89f020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd15e89f1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd15e89f330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd15e89f4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd15e89f640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd15e89f7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd15e89f950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd15e89fad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd15e89fc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd15e89fde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd15e89e020"/>
        <function-ref name="sync" scoped="" ref="0x7fd15e89e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15e89e430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd15e89e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd15e88dd28" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fd15e88dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e8908b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e890d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd15e89e8b0" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e89e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd15e89ec00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd15e89ed88"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd15e891020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd15e8911a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd15e891330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd15e8914b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd15e891640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd15e8917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e8a3e00" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e8a3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e8a01a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e8a0330"/>
        <function-ref name="request" scoped="" ref="0x7fd15e8a04b8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e8a0640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e8a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd15e889328" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e889328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd15e889678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd15e889800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd15e889988"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd15e889b10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd15e889c98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd15e889e20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd15e888020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd15e8881a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd15e888330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd15e8884b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd15e888640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd15e8887c8"/>
        <function-ref name="sync" scoped="" ref="0x7fd15e888950"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15e888bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd15e888d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fd15e863c48" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e863c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e862020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e8621a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fd15e8817f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd15e8817f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd15e881b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fd15e882060" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7fd15e882060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15e879690"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e87a738"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15e879088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15e87abc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15e879b18"/>
        <function-ref name="start" scoped="" ref="0x7fd15e882db0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e87a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fd15e866ab8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e866ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e866e08"/>
        <function-ref name="write" scoped="" ref="0x7fd15e863020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd15e8771b0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd15e8771b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e877500"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e877688"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e877810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e877998"/>
        <function-ref name="get" scoped="" ref="0x7fd15e877b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e877ca8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e877e30"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e876020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd15e8854d0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fd15e8854d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e884088"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e8844d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fd15e8513f0" loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7fd15e8513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e851740"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e8518c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fd15e862530" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15e862530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e862880"/>
        <function-ref name="write" scoped="" ref="0x7fd15e862a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd15e862da0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e862da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e861170"/>
        <function-ref name="write" scoped="" ref="0x7fd15e8612f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fd15e867990" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e867990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e867ce0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e867e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd15e86b1b0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15e86b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd15e86b500"/>
        <function-ref name="changed" scoped="" ref="0x7fd15e86b688"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd15e86b810"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd15e86b998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd15e878020" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd15e878020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e878370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e8784f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e878680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e878808"/>
        <function-ref name="get" scoped="" ref="0x7fd15e878990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e878b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15e878ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e878e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fd15e8603c0" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e8603c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e860910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fd15e876378" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fd15e876378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e8766c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e876850"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e8769d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e876b60"/>
        <function-ref name="get" scoped="" ref="0x7fd15e876ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e876e70"/>
        <function-ref name="set" scoped="" ref="0x7fd15e875020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e8751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e88a020" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e88a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e88a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd15e8633d0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e8633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e863720"/>
        <function-ref name="write" scoped="" ref="0x7fd15e8638a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fd15e860ca0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e860ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e85f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd15e85f3b0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd15e85f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e85f700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e85f888"/>
        <function-ref name="request" scoped="" ref="0x7fd15e85fa10"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e85fb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e85fd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fd15e85ce50" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7fd15e85ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e85b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e85b370"/>
        <function-ref name="request" scoped="" ref="0x7fd15e85b4f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e85b680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e85b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd15e886080" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd15e886080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd15e8863d0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd15e886558"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd15e8866e0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd15e886868"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd15e8869f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd15e886b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd15e886d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd15e885020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fd15e866230" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e866230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e866580"/>
        <function-ref name="write" scoped="" ref="0x7fd15e866708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fd15e867120" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e867120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e867470"/>
        <function-ref name="write" scoped="" ref="0x7fd15e8675f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fd15e85e518" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15e85e518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e85e868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e85bac0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e85bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e85be10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e85a020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e85a1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e85a330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e85a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e85a640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e85a7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e85ade8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e85a950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e85aad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e85ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fd15e852598" loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7fd15e852598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e8528e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e852a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e88a650" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e88a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e88a9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e88ab28"/>
        <function-ref name="request" scoped="" ref="0x7fd15e88acb0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e88ae38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e889020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fd15e873a60" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15e873a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e873db0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e86f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fd15e873128" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e873128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e873578"/>
        <function-ref name="write" scoped="" ref="0x7fd15e873700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fd15e870b78" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd15e870b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e874020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e8741a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e874330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e8744b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fd15e85c140" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7fd15e85c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e85c490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e85c618"/>
        <function-ref name="request" scoped="" ref="0x7fd15e85c7a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e85c928"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e85cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fd15e85ebf0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e85ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e7dd3c0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e7dd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e7dd710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd15e7ddd38" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd15e7ddd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15e7d9410"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e7db4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15e7dbdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15e7db930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15e7d9898"/>
        <function-ref name="start" scoped="" ref="0x7fd15e7dcac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e7db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15e7d63b8" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15e7d63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15e595ab0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e599a90"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15e5954a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15e595020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15e593020"/>
        <function-ref name="start" scoped="" ref="0x7fd15e599130"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e599608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e593438" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e593438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e593788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15d29ec18" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15d29ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d29b410"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d29c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d29cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d29c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d29b898"/>
        <function-ref name="start" scoped="" ref="0x7fd15d29d9f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d29c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15d2972d0" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15d2972d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d295928"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d2969e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d295320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d296e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d295db0"/>
        <function-ref name="start" scoped="" ref="0x7fd15d296088"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d296560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd15e7b10c0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e7b10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15e7b1410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fd15e7b1598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15e7b1720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fd15e7b18a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15e7b1a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15e7b1bb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fd15e7b1d40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fd15e7b0020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fd15e7b01a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fd15e7b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd15e7a1b68" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd15e7a1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd15e7a0db8"/>
        <function-ref name="test" scoped="" ref="0x7fd15e7a04a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e7a9728"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e7a80c0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e7a8598"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e7a0930"/>
        <function-ref name="set" scoped="" ref="0x7fd15e7a9bb0"/>
        <function-ref name="start" scoped="" ref="0x7fd15e7a8a20"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e7a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd15e79d020" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd15e79d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e7957a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e79c560"/>
        <function-ref name="get" scoped="" ref="0x7fd15e79dba0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e79c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e795c30"/>
        <function-ref name="set" scoped="" ref="0x7fd15e79c088"/>
        <function-ref name="start" scoped="" ref="0x7fd15e79ce70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e795320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15e7bf020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e7bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e7b30f8"/>
        <function-ref name="test" scoped="" ref="0x7fd15e7b57a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e7bfba0"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e7b3580"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e7b3a58"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e7be9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e7be560"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e7b5c30"/>
        <function-ref name="set" scoped="" ref="0x7fd15e7be088"/>
        <function-ref name="start" scoped="" ref="0x7fd15e7bee70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e7b5320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd15e786950" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e786950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd15e786ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15e786e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15e78c020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15e78c1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15e78c330"/>
        <function-ref name="setControl" scoped="" ref="0x7fd15e78c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd15e77c470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd15e77c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd15e77c7c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd15e77c948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd15e77cad0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd15e77cc58"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd15e77cde0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd15e782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd15e78c980" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd15e78c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e783270"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e784020"/>
        <function-ref name="get" scoped="" ref="0x7fd15e78b560"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e7844a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e7836f8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e78b9e8"/>
        <function-ref name="start" scoped="" ref="0x7fd15e784930"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e784db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15e794d90" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e794d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e78ee58"/>
        <function-ref name="test" scoped="" ref="0x7fd15e78e548"/>
        <function-ref name="get" scoped="" ref="0x7fd15e791940"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e78d310"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e78d7e8"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e78f778"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e78f2f0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e78e9d0"/>
        <function-ref name="set" scoped="" ref="0x7fd15e791dc8"/>
        <function-ref name="start" scoped="" ref="0x7fd15e78fc00"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e78e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd15e775558" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e775558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd15e7758a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15e775a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15e775bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15e775d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15e774020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd15e7741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd15e770790" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd15e770790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd15e770ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd15e76f020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd15e76f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd15e76f370"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd15e76f4f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd15e76f680"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd15e76f808"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd15e76f990"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd15e76fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd15e774670" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd15e774670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e771e20"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e772b80"/>
        <function-ref name="get" scoped="" ref="0x7fd15e772220"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e771088"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e770310"/>
        <function-ref name="set" scoped="" ref="0x7fd15e7726a8"/>
        <function-ref name="start" scoped="" ref="0x7fd15e771510"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e771998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15e77a400" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e77a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e776580"/>
        <function-ref name="test" scoped="" ref="0x7fd15e777c20"/>
        <function-ref name="get" scoped="" ref="0x7fd15e779020"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e776a08"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e775020"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e779e08"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e779980"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e7760f8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e7794a8"/>
        <function-ref name="start" scoped="" ref="0x7fd15e777310"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e777798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd15e710568" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15e710568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15e7108b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fd15e710a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15e710bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fd15e710d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15e70e020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15e70e1a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fd15e70e330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fd15e70e4b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fd15e70e640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fd15e70e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7fd15e6fd020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fd15e6fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd15e6fd370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15e6fd4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15e6fd680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15e6fd808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15e6fd990"/>
        <function-ref name="setControl" scoped="" ref="0x7fd15e6fdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fd15e709540" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fd15e709540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e707db8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e708a58"/>
        <function-ref name="get" scoped="" ref="0x7fd15e7080f8"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e707020"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e706270"/>
        <function-ref name="set" scoped="" ref="0x7fd15e708580"/>
        <function-ref name="start" scoped="" ref="0x7fd15e7074a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e707930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd15e70eca0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd15e70eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd15e70be20"/>
        <function-ref name="test" scoped="" ref="0x7fd15e70b510"/>
        <function-ref name="get" scoped="" ref="0x7fd15e70d858"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e70c238"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e70c710"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e70b998"/>
        <function-ref name="set" scoped="" ref="0x7fd15e70dce0"/>
        <function-ref name="start" scoped="" ref="0x7fd15e70cb98"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e70b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fd15e7068e8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fd15e7068e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e702088"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e704df0"/>
        <function-ref name="get" scoped="" ref="0x7fd15e704490"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e7032b0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e702510"/>
        <function-ref name="set" scoped="" ref="0x7fd15e704918"/>
        <function-ref name="start" scoped="" ref="0x7fd15e703738"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e703bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fd15e702b88" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fd15e702b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15e6fe4a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e6ff0f8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e700760"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e6ff580"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e6fe930"/>
        <function-ref name="set" scoped="" ref="0x7fd15e700be8"/>
        <function-ref name="start" scoped="" ref="0x7fd15e6ffa08"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e6fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15e715490" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e715490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e711580"/>
        <function-ref name="test" scoped="" ref="0x7fd15e712c30"/>
        <function-ref name="get" scoped="" ref="0x7fd15e714088"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e711a08"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e710020"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e714e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e7149e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e7110f8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e714510"/>
        <function-ref name="start" scoped="" ref="0x7fd15e712320"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e7127a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e66f190" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e66f190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd15ee54388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd15ee54388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e66f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15e66f8b0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e66f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e65f998"/>
        <function-ref name="test" scoped="" ref="0x7fd15e65f088"/>
        <function-ref name="get" scoped="" ref="0x7fd15e662490"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e65fe20"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e65e350"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e6612b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e662df0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e65f510"/>
        <function-ref name="set" scoped="" ref="0x7fd15e662918"/>
        <function-ref name="start" scoped="" ref="0x7fd15e661738"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e661bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15d282420" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15d282420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fd15ee54020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fd15ee54020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d280ab0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d281b30"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d2804a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d280020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d27e020"/>
        <function-ref name="start" scoped="" ref="0x7fd15d2811d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d2816a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fd15d2795a8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd15d2795a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15d274db8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d278ab0"/>
        <function-ref name="get" scoped="" ref="0x7fd15d278150"/>
        <function-ref name="reset" scoped="" ref="0x7fd15d274020"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15d273270"/>
        <function-ref name="set" scoped="" ref="0x7fd15d2785d8"/>
        <function-ref name="start" scoped="" ref="0x7fd15d2744a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d274930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fd15d27e540" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd15d27e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15d27b6f8"/>
        <function-ref name="test" scoped="" ref="0x7fd15d27cdb8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d27d0f8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15d27bb80"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15d279088"/>
        <function-ref name="reset" scoped="" ref="0x7fd15d27c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15d27da58"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15d27b270"/>
        <function-ref name="set" scoped="" ref="0x7fd15d27d580"/>
        <function-ref name="start" scoped="" ref="0x7fd15d27c4a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d27c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15e61dd70" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15e61dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e620af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15e61c4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15e61c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e61c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15e61bad0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15e61bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e618860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15e6171f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15e618ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e617680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15e613a98" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15e613a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e602828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15e601190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15e602cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e601618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15e601b78" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15e601b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15e5fdc20"/>
        <function-ref name="test" scoped="" ref="0x7fd15e5fd310"/>
        <function-ref name="get" scoped="" ref="0x7fd15e600728"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15e5fc0f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15e5fc5d0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e5fe548"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e5fe0c0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e5fd798"/>
        <function-ref name="set" scoped="" ref="0x7fd15e600bb0"/>
        <function-ref name="start" scoped="" ref="0x7fd15e5fe9d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e5fee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd15e5dcb10" loc="63:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fd15e5dcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e5da8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15e5d9230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15e5dad80"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e5d96b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15e5de878" loc="62:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15e5de878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e5dd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15e5dc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15e5ddae8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15e5dc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15d291020" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15d291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d28f690"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d2906f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d28f088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d290b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d28fb18"/>
        <function-ref name="start" scoped="" ref="0x7fd15d291d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d290270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd15d28b450" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd15d28b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd15ed97720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d289ab0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d28ab30"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d2894a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d289020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d288020"/>
        <function-ref name="start" scoped="" ref="0x7fd15d28a1d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d28a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd15d28e1a8" loc="68:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15d28e1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15d28d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15d28d930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15d28d4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15d28ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e5983a0" loc="18:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e5983a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e5986f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fd15e58e7d0" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fd15e58e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e58eb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e58eca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e58ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e58d020"/>
        <function-ref name="get" scoped="" ref="0x7fd15e58d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58d330"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fd15e58d960" loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fd15e58d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e58dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e58de38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e58c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e58c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e58c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58c640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd15e58cae0" loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd15e58cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e58ce30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e58b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e58b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e58b330"/>
        <function-ref name="get" scoped="" ref="0x7fd15e58b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58b640"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fd15e58f638" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd15e58f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e58f988"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e58fb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e58fc98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e58fe20"/>
        <function-ref name="get" scoped="" ref="0x7fd15e58e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58e330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fd15e58adf0" loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fd15e58adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e589170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e5892f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e589480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e589608"/>
        <function-ref name="get" scoped="" ref="0x7fd15e589790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e589918"/>
        <function-ref name="set" scoped="" ref="0x7fd15e589aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e589c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd15e590428" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd15e590428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e590778"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e590900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e590a88"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e590c10"/>
        <function-ref name="get" scoped="" ref="0x7fd15e590d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58f020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fd15e58bc58" loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fd15e58bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e58a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e58a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e58a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e58a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e58a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e58a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e58a950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e58aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fd15e57b3c0" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd15e57b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd15e57b710"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e57b898"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e57ba20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd15e57bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fd15e580020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd15e580020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e580370"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e5804f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e580680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e580808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fd15e580be8" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd15e580be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e57f020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e57f1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e57f330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e57f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd15e579180" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd15e579180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd15e5794d0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e579658"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e5797e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd15e579968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7fd15e579d38" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7fd15e579d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd15e566e58"/>
        <function-ref name="test" scoped="" ref="0x7fd15e566548"/>
        <function-ref name="get" scoped="" ref="0x7fd15e5698f0"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e5682b0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15e568788"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15e5669d0"/>
        <function-ref name="set" scoped="" ref="0x7fd15e569d78"/>
        <function-ref name="start" scoped="" ref="0x7fd15e568c10"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e5660c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd15e562480" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15e562480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e5627d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e562958"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e562ae0"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e562c68"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e562df0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e54f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd15e5639a0" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd15e5639a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e563cf0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e563e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e562030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e5621b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fd15e546518" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fd15e546518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e546868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5469f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e546b78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e546d00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e545020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fd15e54b518" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fd15e54b518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e54b868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e54b9f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e54bb78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e54bd00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e54a020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e54a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fd15e548518" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fd15e548518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e548868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5489f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e548b78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e548d00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e547020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fd15e545518" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fd15e545518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e545868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5459f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e545b78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e545d00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e544020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fd15e54a518" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fd15e54a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e54a868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e54a9f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e54ab78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e54ad00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e549020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fd15e547518" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fd15e547518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e547868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5479f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e547b78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e547d00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e546020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fd15e54e550" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fd15e54e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e54e8a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e54ea28"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e54ebb0"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e54ed38"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e54b020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e54b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fd15e549518" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fd15e549518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e549868"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5499f0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e549b78"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e549d00"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e548020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e5481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fd15e53d020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fd15e53d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fd15e53e940" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fd15e53e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fd15e53f020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fd15e53f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fd15e53d758" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fd15e53d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fd15e5400a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fd15e5400a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e5403f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fd15e53f758" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fd15e53f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fd15e53e208" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fd15e53e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e53e558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fd15e5407e0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fd15e5407e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e540b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e520a70" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e520a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e520dc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e50d020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e50d1a8"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e50d330"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e50d4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e50d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e50d908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e50d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e50dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e50a7a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e50a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e50aaf8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e50ac80"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e50ae08"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e509020"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e5091a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e509330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e5095f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e5095f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e509948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e5053e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e5053e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e505730"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5058b8"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e505a40"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e505bc8"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e505d50"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e504020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e5042e8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e5042e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e504638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e501020" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e501370"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e5014f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e501680"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e501808"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e501990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e501b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e501de0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e501de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e500170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e4fecd8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e4fecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e4fc0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e4fc228"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e4fc3b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e4fc538"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e4fc6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e4fc848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e4fcb10" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4fcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e4fce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e4f99d8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e4f99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e4f9d28"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e4f8020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e4f81a8"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e4f8330"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e4f84b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e4f8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e4f8908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4f8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e4f8c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e4f5970" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e4f5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e4f5cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e4f5e48"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e4f4020"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e4f41a8"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e4f4330"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e4f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e4f4780" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4f4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e4f4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd15e4f06a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd15e4f06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e4f09f8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e4f0b80"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e4f0d08"/>
        <function-ref name="edge" scoped="" ref="0x7fd15e4ef020"/>
        <function-ref name="enable" scoped="" ref="0x7fd15e4ef1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15e4ef330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd15e4ef5f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd15e4ef5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e4ef948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7fd15e4e3020" loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7fd15e4e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e4e3370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e4e34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e4e3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e4e3808"/>
        <function-ref name="get" scoped="" ref="0x7fd15e4e3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e4e3b18"/>
        <function-ref name="set" scoped="" ref="0x7fd15e4e3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e4e3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd15e4e4420" loc="47:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd15e4e4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e4e4770"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e4e48f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e4e4a80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e4e4c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7fd15e4e18e0" loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7fd15e4e18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e4e1c30"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e4e1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd15e268c90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e268c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e2673e8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e267570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd15e272438" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd15e272438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e272788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd15e26cdd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e26cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e26a170"/>
        <function-ref name="write" scoped="" ref="0x7fd15e26a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd15e2667c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e2667c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e266b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e266c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd15e263020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd15e263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e263370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd15e2587c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e2587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e258b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e258c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd15e25a7c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e25a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25ab10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd15e2706b8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e2706b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e270a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd15e25b7c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e25b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25bb10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd15e26ad60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15e26ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e2690d8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e269260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd15e269cc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e269cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e2680a0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e268228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd15e25f020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd15e25f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25f370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd15e2637c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e2637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e263b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e263c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e274e78" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e274e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e2731f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e273380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e273508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd15e26e020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e26e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd15e26e638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15e26e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd15e26ed50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e26ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd15e25a020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e25a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25a370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd15e26f368" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e26f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd15e269528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e269528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e269878"/>
        <function-ref name="write" scoped="" ref="0x7fd15e269a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd15e26a5c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e26a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e26a910"/>
        <function-ref name="write" scoped="" ref="0x7fd15e26aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd15e273de8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e273de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e272170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd15e258020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e258370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd15e259020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e259020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e259370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd15e25f7c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd15e25f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25fb10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd15e25b020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e25b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25b370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd15e2617c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e2617c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e261b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e261c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd15e257020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e257770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e2578f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e257a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e257c08"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e257d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd15e2737d0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e2737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e273b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd15e26c638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd15e26c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e26c988"/>
        <function-ref name="write" scoped="" ref="0x7fd15e26cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd15e2684f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e2684f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e268840"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2689c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd15e261020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e261370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd15e267838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e267838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e267b88"/>
        <function-ref name="write" scoped="" ref="0x7fd15e267d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd15e272a50" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15e272a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e272da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd15e266020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e266020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e266370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2664f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e274280" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e274280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2745d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e274758"/>
        <function-ref name="request" scoped="" ref="0x7fd15e2748e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e274a68"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e274bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd15e26d3a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e26d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd15e26c020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd15e26c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd15e25d7c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15e25d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25db10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd15e25d020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e25d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25d370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd15e26f980" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e26f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd15e25e7c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e25e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25eb10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd15e2597c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd15e2597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e259b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e259c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd15e25e020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e25e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e25e370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e25e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd15e2700a0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15e2700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2703f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd15e2607c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd15e2607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e260b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e260c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd15e270cd0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e270cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd15e260020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e260020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e260370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd15e26d9b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15e26d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e26dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd15e2560a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e2560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e2563f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e256578"/>
        <function-ref name="write" scoped="" ref="0x7fd15e256700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e256888"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e256a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd15e4a2d48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fd15e4a2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e4a10d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e4a1260"/>
        <function-ref name="write" scoped="" ref="0x7fd15e4a13e8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e4a1570"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e4a16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e4a3e58" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e4a3e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e4a21e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e4a2370"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e4a24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd15e49f020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fd15e49f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e49f370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e49f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd15e49fd60" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fd15e49fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e49e0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e49e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e4a31c8" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e4a31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e4a3518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e4a36a0"/>
        <function-ref name="request" scoped="" ref="0x7fd15e4a3828"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e4a39b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e4a3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd15e49ead8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fd15e49ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e49ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fd15e491020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e491020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e491370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e4914f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd15e499e50" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fd15e499e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e4981e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e498370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e4984f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e498680"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e498808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e49dde8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e49dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e49a170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e49a2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e49a480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fd15e493d08" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd15e493d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd15e4920a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fd15e491838" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7fd15e491838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15e491b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15e491d10"/>
        <function-ref name="isState" scoped="" ref="0x7fd15e490020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15e4901a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15e490330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15e4904b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd15e4941e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd15e4941e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e494538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e4946c0"/>
        <function-ref name="request" scoped="" ref="0x7fd15e494848"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e4949d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e494b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd15e496040" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fd15e496040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e496390"/>
        <function-ref name="write" scoped="" ref="0x7fd15e496518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd15e496d40" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fd15e496d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e4950d8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e495260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e490730" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e490730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e490a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e490c08"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e490d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e489020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e4891a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e489330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e4894b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e489ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e489640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e4897c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e489950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e49ac10" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e49ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e499020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e4991a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e499330"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e4994b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e499640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fd15e4855d0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7fd15e4855d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e485920"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e485aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd15e495a98" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fd15e495a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e495de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15e42d978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15e42d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15e42dcc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15e42de50"/>
        <function-ref name="isState" scoped="" ref="0x7fd15e42c020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15e42c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15e42c330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15e42c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15e428790" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15e428790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15e428ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15e428c68"/>
        <function-ref name="isState" scoped="" ref="0x7fd15e428df0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15e427020"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15e4271a8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15e427330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e424438" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e424438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e424788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15e423020" loc="67:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15e423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15e423370"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15e4234f8"/>
        <function-ref name="isState" scoped="" ref="0x7fd15e423680"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15e423808"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15e423990"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15e423b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd15e2c02a8" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e2c02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e2c05f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e2c0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd15e2c1c18" loc="42:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd15e2c1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd15e2c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e2c2960" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e2c2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e2c2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e2c1020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e2c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2c1370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e2c14f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e2c1680"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e2c1808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e2c1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd15e3febc0" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e3febc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e404020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e4041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd15e408a20" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd15e408a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd15e408d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e408400" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e408400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e408750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd15e3fe0f0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd15e3fe0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd15e3fe440"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd15e3fe5c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd15e3fe750"/>
        <function-ref name="write" scoped="" ref="0x7fd15e3fe8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e404978" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e404978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e404cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e404e50"/>
        <function-ref name="request" scoped="" ref="0x7fd15e402020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e4021a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e402330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fd15e3b8b58" loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fd15e3b8b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e3b7020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e3b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd15e3f9020" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd15e3f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e3f9370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e3f94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7fd15e3db208" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7fd15e3db208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e3db558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e3db6e0"/>
        <function-ref name="request" scoped="" ref="0x7fd15e3db868"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e3db9f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e3dbb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd15e3fbd80" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd15e3fbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd15e3fa170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e3fb7a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e3fb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e3fbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fd15e3f6020" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fd15e3f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd15e3f6370"/>
        <function-ref name="sleep" scoped="" ref="0x7fd15e3dc7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd15e3f6680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15e3dc950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd15e3f6990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd15e3f6b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15e3f6ca0"/>
        <function-ref name="read" scoped="" ref="0x7fd15e3f6e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd15e3f5020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15e3f51a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fd15e3f5330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15e3f54b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd15e3f5640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd15e3f58c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd15e3f5a50"/>
        <function-ref name="write" scoped="" ref="0x7fd15e3f5bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd15e3f5d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd15e3dc020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd15e3dc1a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fd15e3dc330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15e3dc4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd15e3f64f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd15e3f6808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd15e3dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd15e3fa428" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd15e3fa428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd15e3fa778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd15e3fa900"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd15e3faa88"/>
        <function-ref name="write" scoped="" ref="0x7fd15e3fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e3f9c88" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e3f9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e3f8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e3f81a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e3f8330"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e3f84b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e3f8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15e3d75d0" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15e3d75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15e3d7920"/>
        <function-ref name="userId" scoped="" ref="0x7fd15e3d7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fd15e3d7d78" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd15e3d7d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd15e3d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fd15e38d020" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fd15e38d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd15e38d370"/>
        <function-ref name="sleep" scoped="" ref="0x7fd15e38b7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd15e38d680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15e38b950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd15e38d990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd15e38db18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15e38dca0"/>
        <function-ref name="read" scoped="" ref="0x7fd15e38de28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd15e38c020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15e38c1a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fd15e38c330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15e38c4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd15e38c640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd15e38c8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd15e38ca50"/>
        <function-ref name="write" scoped="" ref="0x7fd15e38cbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd15e38cd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd15e38b020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd15e38b1a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fd15e38b330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15e38b4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd15e38d4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd15e38d808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd15e38b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fd15e37e190" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fd15e37e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e37e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e37e668"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e37e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e37e978"/>
        <function-ref name="get" scoped="" ref="0x7fd15e37eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e37ec88"/>
        <function-ref name="set" scoped="" ref="0x7fd15e37ee10"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e37d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fd15e384de0" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fd15e384de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e383170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e3832f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e383480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e383608"/>
        <function-ref name="get" scoped="" ref="0x7fd15e383790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e383918"/>
        <function-ref name="set" scoped="" ref="0x7fd15e383aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e383c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fd15e380c70" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fd15e380c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e384020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e3841a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e384330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e3844b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e384640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e3847c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e384950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e384ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd15e380438" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15e380438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e380788"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e380910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fd15e37d350" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fd15e37d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd15e37d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fd15e38adc8" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fd15e38adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd15e387170"/>
        <function-ref name="sleep" scoped="" ref="0x7fd15e385640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd15e387480"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15e3857c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd15e387790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd15e387918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15e387aa0"/>
        <function-ref name="read" scoped="" ref="0x7fd15e387c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd15e387db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15e386020"/>
        <function-ref name="setClock" scoped="" ref="0x7fd15e3861a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15e386330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd15e3864b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd15e386740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd15e3868c8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e386a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd15e386bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd15e386d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd15e385020"/>
        <function-ref name="getClock" scoped="" ref="0x7fd15e3851a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15e385330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd15e3872f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd15e387608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd15e3854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fd15e37f020" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fd15e37f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e37f370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e37f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e37f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e37f808"/>
        <function-ref name="get" scoped="" ref="0x7fd15e37f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e37fb18"/>
        <function-ref name="set" scoped="" ref="0x7fd15e37fca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e37fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15e2da020" loc="86:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15e2da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15e2da390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15e2da518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15e2d9020" loc="89:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15e2d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15e2d9390"/>
        <function-ref name="configure" scoped="" ref="0x7fd15e2d9518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e2db200" loc="85:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e2db200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2db570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e2db6f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e2db880"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e2dba08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e2dbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15e2da760" loc="87:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15e2da760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15e2daab0"/>
        <function-ref name="userId" scoped="" ref="0x7fd15e2dac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15d198620" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15d198620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15d198970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd15d198bf8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15d198bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15d197020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15d1971a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15d197330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15d1974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d194820" loc="52:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d194820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d194b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d194d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d1938c0" loc="56:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d1938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d193c30"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d193db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15d1920a0" loc="57:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15d1920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15d1923f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15d192578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15d192700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15d192888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d196a28" loc="51:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d196a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d196d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d194020"/>
        <function-ref name="request" scoped="" ref="0x7fd15d1941a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d194330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d1944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d193020" loc="53:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d193370"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d1934f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15d192b50" loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15d192b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15d191020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15d1911a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fd15e2cf4a8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fd15e2cf4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2cf7f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e2cf980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2cfb08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e2cfc90"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2cfe18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e2ce020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2ce1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e2ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e2d3870" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e2d3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2d3bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e2d3d48"/>
        <function-ref name="request" scoped="" ref="0x7fd15e2d0020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e2d01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e2d0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fd15e2d0700" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fd15e2d0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2d0a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e2d0bd8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e2d0d60"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e2cf020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e2cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd15e2be3b8" loc="46:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e2be3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e2be708"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e2be890"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e2bea18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e2beba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e2bed28"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2bb020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e2bb1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e2bb7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2bb330"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e2bb4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e2bb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd15e2b63b8" loc="50:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd15e2b63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2b6708"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e2b6890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2b6a18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e2b6ba0"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2b6d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e2b5020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2b51a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e2b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e2b8670" loc="46:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e2b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e2b89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd15e2b5648" loc="51:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd15e2b5648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2b5998"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e2b5b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2b5ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e2b5e30"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2b4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e2b41a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2b4330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e2b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd15e2b8c38" loc="47:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e2b8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e2b7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e2b71a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e2b7330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e2b74b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e2b7640"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2b77c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e2b7950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e2b6020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2b7ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e2b7c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e2b7de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd15e2b47d0" loc="52:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd15e2b47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2b4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e2b4ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2b4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e2b3020"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e2b3330"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2b34b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e2b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd15e2b9b08" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd15e2b9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2b9e58"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e298020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e298330"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e298640"/>
        <function-ref name="set" scoped="" ref="0x7fd15e2987c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e298950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd15e298ca8" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd15e298ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e297020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e2971a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e297330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e2974b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e297640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e2977c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e297950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e297ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd15e295020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e295370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd15e297e30" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd15e297e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e2961a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e296330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e2964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e296640"/>
        <function-ref name="get" scoped="" ref="0x7fd15e2967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e296950"/>
        <function-ref name="set" scoped="" ref="0x7fd15e296ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e296c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd15e2407c0" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e2407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e240d10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd15e24acd0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd15e24acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2490a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd15e2437c0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e2437c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e243b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e243c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd15e23d2e8" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e23d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23d638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd15e23da88" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd15e23da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23ddd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd15e2312e8" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e2312e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e231638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2317c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd15e2342e8" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e2342e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e234638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd15e248020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e248370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd15e2352e8" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e2352e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e235638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2357c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd15e2427c0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15e2427c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e242b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e242c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd15e2417c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e2417c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e241b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e241c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd15e23aa88" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd15e23aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23add8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e239020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd15e23c2e8" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e23c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23c638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e24b740" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e24b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e24ba90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e24bc18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e24bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd15e247900" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e247900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e247c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd15e246020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15e246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e246470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd15e246738" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e246738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e246a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd15e235a88" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e235a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e235dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e234020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd15e248c50" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e248c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e247020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd15e241020" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e241370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd15e242020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e242020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e242370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2424f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd15e24a6b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e24a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e24aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd15e233a88" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e233a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e233dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e231020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd15e234a88" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e234a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e234dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd15e2392e8" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd15e2392e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e239638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2397c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd15e236a88" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e236a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e236dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd15e23b2e8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e23b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23b638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd15e231a88" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e231a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e2305e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e230770"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2308f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e230a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e230c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd15e24a0a0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e24a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e24a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd15e243020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd15e243020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e243370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2434f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd15e240020" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e240020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e240370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2404f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd15e23ca88" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e23ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23cdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd15e23e2e8" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e23e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23e638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd15e249368" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15e249368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2496b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd15e23ea88" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e23ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23edd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e24da48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e24da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e24dd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e24b020"/>
        <function-ref name="request" scoped="" ref="0x7fd15e24b1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e24b330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e24b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd15e246d50" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e246d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2440d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd15e2449b8" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd15e2449b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e244d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd15e2362e8" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15e2362e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e236638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2367c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd15e237a88" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e237a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e237dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e236020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd15e2472e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e2472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e247638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd15e2372e8" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e2372e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e237638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2377c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd15e2332e8" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd15e2332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e233638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2337c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd15e239a88" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e239a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e239dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e237020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd15e249980" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15e249980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e249cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd15e23a2e8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd15e23a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23a638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd15e248638" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e248638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e248988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd15e23ba88" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e23ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e23bdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e23a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd15e2443a0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15e2443a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2446f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd15e22f020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e22f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e22f370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e22f4f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e22f680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e22f808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e22f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd15e21dc90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e21dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21c3e8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd15e2273a0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd15e2273a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd15e221dd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e221dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e220170"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2202f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd15e21b7c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e21b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21bb10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd15e21a020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd15e21a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21a370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd15e20f7c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e20f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e20fb10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e20fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd15e2127c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e2127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e212b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e212c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd15e226638" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e226638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e226988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd15e2137c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e2137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e213b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e213c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd15e220d60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15e220d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21e0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd15e21ecc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e21ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21d0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21d228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd15e216020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd15e216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e216370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd15e21a7c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e21a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21ab10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e229da0" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e229da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e228170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e2282f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e228480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd15e223020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e223370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd15e223638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15e223638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e223a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd15e223d50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e223d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2220d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd15e212020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e212370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd15e2242e8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e2242e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e224638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd15e21e528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e21e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21e878"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd15e2205c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e2205c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e220910"/>
        <function-ref name="write" scoped="" ref="0x7fd15e220a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd15e228d60" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e228d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2270d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd15e20f020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e20f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e20f370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e20f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd15e210020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e210020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e210370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd15e2167c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd15e2167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e216b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e216c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd15e213020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e213370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd15e2197c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e2197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e219b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e219c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd15e20e020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e20e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e20e770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e20e8f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e20ea80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e20ec08"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e20ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd15e228748" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e228748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e228a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd15e221638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd15e221638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e221988"/>
        <function-ref name="write" scoped="" ref="0x7fd15e221b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd15e21d4f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e21d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21d840"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd15e219020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e219370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2194f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd15e21c838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e21c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21cb88"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd15e2279b8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15e2279b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e227d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd15e21b020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e21b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e21b370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e21b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e2291a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e2291a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e2294f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e229680"/>
        <function-ref name="request" scoped="" ref="0x7fd15e229808"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e229990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e229b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd15e2223a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e2223a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e2226f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd15e221020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd15e221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e221370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd15e2147c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15e2147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e214b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e214c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd15e214020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e214020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e214370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2144f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd15e224900" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e224900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e224c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd15e2157c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e2157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e215b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e215c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd15e2107c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd15e2107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e210b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e210c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd15e215020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e215020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e215370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2154f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd15e226020" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15e226020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e226370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd15e2177c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd15e2177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e217b10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e217c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd15e226c50" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e226c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e224020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd15e217020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e217370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e2174f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd15e2229b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15e2229b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e222d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd15e20d0a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e20d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e20d3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e20d578"/>
        <function-ref name="write" scoped="" ref="0x7fd15e20d700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e20d888"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e20da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd15e2052b8" loc="54:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15e2052b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd15e205608"/>
        <function-ref name="changed" scoped="" ref="0x7fd15e205790"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd15e205918"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd15e205aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd15e207d10" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd15e207d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd15e1f40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15e1e3140" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e1e3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e1e3490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e1e3618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e1e37a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e1e3928"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e1e3ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e1e3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd15e1e2cb8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd15e1e2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e1e10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fd15e1e4480" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd15e1e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e1e47d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e1e4958"/>
        <function-ref name="modify" scoped="" ref="0x7fd15e1e4ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e1e4c68"/>
        <function-ref name="resend" scoped="" ref="0x7fd15e1e4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15e1e7c48" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15e1e7c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e1e4020"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e1e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd15e1e1458" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd15e1e1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e1e17a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15e1bc4b0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15e1bc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15e1bc800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15e1bc988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15e1bcb10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15e1bcc98"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15e1bce20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15e1bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd15e1b4150" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15e1b4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e1b3700"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e1b3de0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e1b3020"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1b14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd15e1a48a8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e1a48a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a4bf8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd15e1a3130" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e1a3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a3480"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a3608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd15e1bb428" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd15e1bb428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e1bb778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fd15e1a7020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e1a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e1a7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fd15e1b09a8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd15e1b09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd15e1b0cf8"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e1b0e80"/>
        <function-ref name="captured" scoped="" ref="0x7fd15e1af030"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd15e1af1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fd15e1ba648" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7fd15e1ba648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15e1b8cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15e1b9d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15e1b86b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15e1b8230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15e1b6190"/>
        <function-ref name="start" scoped="" ref="0x7fd15e1b93f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e1b98c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd15e1b6628" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e1b6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e1b6978"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e1b6b00"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e1b6c88"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e1b6e10"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e1b5020"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e1b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fd15e1a90c8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e1a90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a9418"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a95a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd15e1a9938" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e1a9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a9c88"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a9e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fd15e19d1b8" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e19d1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e19d508"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd15e19d690"/>
        <function-ref name="sfd" scoped="" ref="0x7fd15e19d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15e1be6d0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15e1be6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15e1bea20"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e1beba8"/>
        <function-ref name="modify" scoped="" ref="0x7fd15e1bed30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15e1bc020"/>
        <function-ref name="resend" scoped="" ref="0x7fd15e1bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fd15e1ab960" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e1ab960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e1abcb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e1abe38"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e1aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fd15e1a7710" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e1a7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e1a7a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd15e1ae800" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd15e1ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e1aeb50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e1aecd8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e1aee60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e1ad020"/>
        <function-ref name="get" scoped="" ref="0x7fd15e1ad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e1ad330"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1ad4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e1ad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e1c0808" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e1c0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e1c0b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15e1b54d8" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e1b54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e1b5828"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15e1b59b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15e1b5b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd15e1b1d88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e1b1d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e1b0170"/>
        <function-ref name="isSet" scoped="" ref="0x7fd15e1b02f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e1b0480"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1b0608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd15e1a7e10" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e1a7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a63e8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a6570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd15e1acb58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd15e1acb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e1ab020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e1ab1a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15e1ab330"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e1ab4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e1ab640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fd15e1af500" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd15e1af500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e1af950"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e1afad8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e1afc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e1afde8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e1ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e1ae1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1ae330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e1ae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd15e1a3960" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e1a3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a3cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a3e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fd15e1a2208" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e1a2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a2558"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd15e1a81b0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e1a81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e1a8500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fd15e1ad988" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fd15e1ad988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e1adcd8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e1ade60"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e1ac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e1ac1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e1ac330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e1ac4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1ac640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e1ac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e19dad0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e19dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e19de20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e1a1020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e1a11a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e1a1330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e1a14b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e1a1640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e1a17c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e1a1de8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e1a1950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e1a1ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e1a1c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd15e1a4020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e1a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1a4370"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1a44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15e1c0e48" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15e1c0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e1be1c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e1be348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fd15e1aa390" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e1aa390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e1aa6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e1aa868"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1aa9f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e1aab78"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e1aad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fd15e1a8880" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15e1a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e1a8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fd15e1a68f8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15e1a68f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e1a6c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd15e1bbb70" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd15e1bbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e1ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd15e109a88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15e109a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e107020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd15e112020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd15e112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e112370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd15e10ca88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15e10ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10cdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e10b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd15e106470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e106470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1067c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e106948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd15e106c10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd15e106c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e105020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd15e0fa470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e0fa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fa7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd15e0fd470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e0fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fd7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd15e1112e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15e1112e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e111638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd15e0fe470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15e0fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fe7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd15e10ba88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15e10ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10bdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e10a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd15e10aa88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15e10aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10add8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e109020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd15e103c10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd15e103c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e101020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd15e105470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15e105470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1057c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e105948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15e114948" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15e114948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15e114c98"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15e114e20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15e113020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd15e110c50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15e110c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd15e10e2e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15e10e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd15e10ea00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd15e10ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd15e0fec10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e0fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fd020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd15e110020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15e110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e110370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd15e10a2e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15e10a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10a638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e10a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd15e10b2e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15e10b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10b638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e10b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd15e113900" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15e113900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e113c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd15e0fcc10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15e0fcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fa020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd15e0fdc10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e0fdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fc020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd15e101470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd15e101470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1017c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e101948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd15e0ffc10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd15e0ffc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fe020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd15e104470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd15e104470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1047c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e104948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd15e0fac10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e0fac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e0f95e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e0f9770"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0f98f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e0f9a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e0f9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd15e1132e8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e1132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e113638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd15e10c2e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd15e10c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e10c638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e10c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd15e1092e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15e1092e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e109638"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd15e105c10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15e105c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e104020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd15e107470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15e107470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1077c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e107948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd15e112638" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15e112638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e112988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd15e107c10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e107c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e106020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15e116cb8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15e116cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e1140a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e114228"/>
        <function-ref name="request" scoped="" ref="0x7fd15e1143b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e114538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e1146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd15e10d060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e10d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd15e10dc90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd15e10dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd15e0ff470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15e0ff470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0ff7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0ff948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd15e100c10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15e100c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0ff020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd15e110638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e110638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e110988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd15e100470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15e100470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1007c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e100948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd15e0fc470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd15e0fc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0fc7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0fc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd15e101c10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15e101c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e100020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd15e112c50" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15e112c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e111020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd15e103470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd15e103470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e1037c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15e103948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd15e111900" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15e111900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e111c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd15e104c10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd15e104c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e103020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e1031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd15e10d678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15e10d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e10d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd15e0f8020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15e0f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e0f8370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e0f84f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0f8680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e0f8808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e0f8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd15e0ec4b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e0ec4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e0ec808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd15e0ec990"/>
        <function-ref name="sfd" scoped="" ref="0x7fd15e0ecb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15e0ecde8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15e0ecde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e0eb170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd15e0eb578" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd15e0eb578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e0eb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15e0efb40" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15e0efb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e0ec020"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e0ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fd15e0e4378" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fd15e0e4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e0e46c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e0e4850"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e0e49d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e0e4b60"/>
        <function-ref name="get" scoped="" ref="0x7fd15e0e4ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e0e4e70"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0e3020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e0e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd15e0dc4b0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd15e0dc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd15e0dc800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd15e0dc988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd15e0dcb10"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd15e0dcc98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd15e0dce20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd15e0db020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd15e0db1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd15e0db330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd15e0db4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd15e0db640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd15e0db7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd15e0db950"/>
        <function-ref name="sync" scoped="" ref="0x7fd15e0dbad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15e0dbd60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd15e0da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fd15e0c6cb0" loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7fd15e0c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15e0c50a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15e0c5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd15e0da5e8" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15e0da5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e0d9a88"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e0d8190"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e0d93a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0d8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fd15e0e3508" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fd15e0e3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e0e3858"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e0e39e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e0e3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e0e3cf0"/>
        <function-ref name="get" scoped="" ref="0x7fd15e0e3e78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e0e2030"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0e21b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e0e2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd15e0d51e8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15e0d51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d5538"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd15e0d5a18" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15e0d5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d5d68"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fd15e0d4bc0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15e0d4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d3020"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd15e0dec68" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e0dec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e0dd020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e0dd1a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e0dd330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e0dd4b8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e0dd640"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e0dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd15e0e7930" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd15e0e7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e0e7c80"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd15e0e7e08"/>
        <function-ref name="sfd" scoped="" ref="0x7fd15e0e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fd15e0dfde8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15e0dfde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e0de170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd15e0e5120" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd15e0e5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15e0e5470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15e0e55f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15e0e5780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15e0e5908"/>
        <function-ref name="get" scoped="" ref="0x7fd15e0e5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15e0e5c18"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0e5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15e0e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fd15e0d3538" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15e0d3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d3888"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15e0eaad8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15e0eaad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15e0eae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15e0ddaf8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e0ddaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e0dde48"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15e0dc020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15e0dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15e0e62f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15e0e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15e0e6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd15e0e13b0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd15e0e13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15e0e1700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15e0e1888"/>
        <function-ref name="request" scoped="" ref="0x7fd15e0e1a10"/>
        <function-ref name="granted" scoped="" ref="0x7fd15e0e1b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15e0e1d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd15e0d4378" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15e0d4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d46c8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fd15e0df100" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15e0df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15e0df450"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15e0df5d8"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0df760"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15e0df8e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15e0dfa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd15e0d3d88" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15e0d3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e0d23e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd15e0e6a48" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd15e0e6a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd15e0e6d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15e0d26a0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15e0d26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15e0d29f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15e0d2b78"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15e0d2d00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15e0d1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15e0d11a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15e0d1330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15e0d14b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15e0d1ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0d1640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15e0d17c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15e0d1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd15e0d68c0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15e0d68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15e0d6c10"/>
        <function-ref name="write" scoped="" ref="0x7fd15e0d6d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fd15e0d61c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15e0d61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e0d6510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fd15e0e2720" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd15e0e2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15e0e2a70"/>
        <function-ref name="disable" scoped="" ref="0x7fd15e0e2bf8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15e0e2d80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15e0e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fd15e0de510" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15e0de510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15e0de960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd15e0e7148" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15e0e7148"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15e0e7498"/>
        <function-ref name="stop" scoped="" ref="0x7fd15e0e7620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd15e0686b0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e0686b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd15e068a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd15e06c4a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e06c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e06c7f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e06c980"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e06cb08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e06cc90"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e06ce18"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e069020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd15e067130" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e067130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e066588"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e066c68"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e067e80"/>
        <function-ref name="set" scoped="" ref="0x7fd15e064380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd15e069d08" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e069d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e0680a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15e068228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15e0683b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd15e060ac8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e060ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e060e18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd15e05f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e05f1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e05f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd15e063020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e063020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e062478"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e062b58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e063d70"/>
        <function-ref name="set" scoped="" ref="0x7fd15e060278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd15e0693b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd15e0693b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15e069708"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15e069890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15e069a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd15e05a630" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd15e05a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd15e05a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd15e05c2e8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15e05c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15e05c638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15e05c7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15e05c948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15e05cad0"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15e05cc58"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15e05cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd15e051618" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15e051618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15e051968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15e051af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e051c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15e051e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15e050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd15e059060" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15e059060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e0584b8"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e058b98"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e059db0"/>
        <function-ref name="set" scoped="" ref="0x7fd15e0562b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd15e05bb60" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15e05bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15e05a020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15e05a1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15e05a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd15e052ac8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd15e052ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e052e18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd15e051020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15e0511a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15e051330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd15e050520" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd15e050520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e04f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd15e04f788" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd15e04f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e04e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd15e055020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15e055020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15e054478"/>
        <function-ref name="clear" scoped="" ref="0x7fd15e054b58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15e055d70"/>
        <function-ref name="set" scoped="" ref="0x7fd15e052278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd15e05b210" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd15e05b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15e05b560"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15e05b6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15e05b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd15e001528" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15e001528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15e0000f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd15e000720" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15e000720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dff6578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15dff4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15dff6a00"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15dff44a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd15dff0d78" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dff0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dfeb088"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dfee6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dfed470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dfed020"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15dfeb928"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dfeb4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dfeeb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dfef8f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15dfeda40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dfefd90"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dfee278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd15dfe9020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15dfe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dfe9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15dff0080" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15dff0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15dff03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fd15dfe0338" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fd15dfe0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dfdf0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15dfdf9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15dfdf548"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15dfdfe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15dfe7618" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15dfe7618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15dfe7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fd15dfe4020" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd15dfe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dfe2690"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dfe36f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15dfe2088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dfe3b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15dfe2b18"/>
        <function-ref name="start" scoped="" ref="0x7fd15dfe4d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dfe3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15df76020" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15df76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15df74690"/>
        <function-ref name="fired" scoped="" ref="0x7fd15df756f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15df74088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15df75b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15df74b18"/>
        <function-ref name="start" scoped="" ref="0x7fd15df76d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15df75270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15df777d8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15df777d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd15ee54388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd15ee54388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15df77b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15df72128" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15df72128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15df72e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15df717b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15df71330"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15df71c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fd15d0c5020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd15d0c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd15d0c5370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd15d0c54f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd15d0c5680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd15d0c5808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd15d0c5990"/>
        <function-ref name="setControl" scoped="" ref="0x7fd15d0c5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd15d0d2da8" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15d0d2da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d0ce470"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d0cf510"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15d0cfe20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d0cf998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15d0ce8f8"/>
        <function-ref name="start" scoped="" ref="0x7fd15d0d0b38"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d0cf088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15d0d2600" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15d0d2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15d0d2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd15d0cd020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15d0cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15d0cdd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15d0cb6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15d0cb230"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15d0cbb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fd15d0c00a0" loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd15d0c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd15d0c03f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd15d0c0578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd15d0c0700"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd15d0c0888"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd15d0c0a10"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd15d0c0b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fd15d0c4020" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd15d0c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd15d0c27a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d0c3560"/>
        <function-ref name="get" scoped="" ref="0x7fd15d0c4ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15d0c39e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15d0c2c30"/>
        <function-ref name="set" scoped="" ref="0x7fd15d0c3088"/>
        <function-ref name="start" scoped="" ref="0x7fd15d0c3e70"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d0c2320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d0ca168" loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d0ca168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd15d0c6270"/>
        <function-ref name="test" scoped="" ref="0x7fd15d0c8930"/>
        <function-ref name="get" scoped="" ref="0x7fd15d0cace8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd15d0c66f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd15d0c6bd0"/>
        <function-ref name="reset" scoped="" ref="0x7fd15d0c9b58"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15d0c96d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd15d0c8db8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d0c91f8"/>
        <function-ref name="start" scoped="" ref="0x7fd15d0c8020"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d0c84a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd15df405e8" loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fd15df405e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15df40938"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15df40ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd15df44648" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd15df44648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15df42cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15df43d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd15df426b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15df42230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd15df40190"/>
        <function-ref name="start" scoped="" ref="0x7fd15df433f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15df438c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15df49290" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15df49290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15df455f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15df48ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15df478c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15df47470"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15df44020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15df45a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15df47020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15df49dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15df45020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15df482b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15df48758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd15def2618" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd15def2618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15def2968"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15def2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd15def75a0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fd15def75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15def38f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15def5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15def5d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15def58c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15def21c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15def3d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15def5470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15def6118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15def3320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15def65b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15def6a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15defd0c8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15defd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15def9610"/>
        <function-ref name="fired" scoped="" ref="0x7fd15defca48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15defa900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15defa490"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15def7020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15def9a80"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15defa020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15defdc30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15def9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15defc118"/>
        <function-ref name="stop" scoped="" ref="0x7fd15defc5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd15def0c38" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15def0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15deef820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd15deefe48" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15deefe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15deedbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15deec548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15deec0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15deec9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15dee7420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15dee7420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15ded36c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15ded5db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15ded4ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15ded4688"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15ded2020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15ded3b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15ded4238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15ded5020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15ded30f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15ded54c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ded5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd15dede7d8" loc="49:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd15dede7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dedaa18"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dedb158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dedbe48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dedb9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15ded92e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dedae68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dedb5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dedc370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15deda448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dedc810"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dedccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd15dec2a88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd15dec2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec1020"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd15decc100" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd15decc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd15dec6a88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd15dec6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec6dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd15dec0470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd15dec0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec07c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd15dec0c10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd15dec0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debf020"/>
        <function-ref name="write" scoped="" ref="0x7fd15debf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd15deb4470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd15deb4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb47c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd15deb7470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd15deb7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb77c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd15decb3a0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd15decb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd15deb8470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd15deb8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb87c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd15dec5a88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd15dec5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec5dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd15dec3a88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd15dec3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec3dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd15debcc10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd15debcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debb020"/>
        <function-ref name="write" scoped="" ref="0x7fd15debb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd15debf470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd15debf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debf7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15debf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd15decea18" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd15decea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd15deced68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd15decd020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd15decd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd15decac50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd15decac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd15dec82e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd15dec82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec8738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd15dec8a00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd15dec8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd15deb8c10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd15deb8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb7020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd15deca020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd15deca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15deca370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd15dec32e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd15dec32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec3638"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd15dec52e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd15dec52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec5638"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd15decda88" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd15decda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd15deb5c10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd15deb5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb4020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd15deb7c10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd15deb7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb5020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd15debb470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd15debb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debb7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15debb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd15deb9c10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd15deb9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb8020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd15debe470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd15debe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debe7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15debe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd15deb4c10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd15deb4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15deb35e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15deb3770"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb38f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15deb3a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15deb3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd15decd470" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd15decd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd15dec62e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd15dec62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec6638"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd15dec22e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd15dec22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec2638"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd15debfc10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd15debfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debe020"/>
        <function-ref name="write" scoped="" ref="0x7fd15debe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd15dec1470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd15dec1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec17c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd15decc718" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd15decc718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd15dec1c10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd15dec1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dec0020"/>
        <function-ref name="write" scoped="" ref="0x7fd15dec01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15decfdb8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15decfdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15dece170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15dece2f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15dece480"/>
        <function-ref name="granted" scoped="" ref="0x7fd15dece608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15dece790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd15dec7060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd15dec7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd15dec7c90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd15dec7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd15deb9470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd15deb9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb97c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd15debac10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd15debac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb9020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd15deca638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd15deca638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15deca988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd15deba470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd15deba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deba7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deba948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd15deb5470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd15deb5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deb57c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd15debbc10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd15debbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15deba020"/>
        <function-ref name="write" scoped="" ref="0x7fd15deba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd15deccd30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd15deccd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decb0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd15debc470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd15debc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debc7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd15debc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd15decb9b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd15decb9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15decbd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd15debec10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd15debec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15debc020"/>
        <function-ref name="write" scoped="" ref="0x7fd15debc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd15dec7678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd15dec7678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd15dec79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd15deb2020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd15deb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd15deb2370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15deb24f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15deb2680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd15deb2808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15deb2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd15de8cb98" loc="46:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd15de8cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd15de8b020"/>
        <function-ref name="rand32" scoped="" ref="0x7fd15de8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd15de8ab10" loc="45:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd15de8ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de8c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15de90db8" loc="44:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15de90db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de8d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd15de85a08" loc="48:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd15de85a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd15de85d58"/>
        <function-ref name="rand32" scoped="" ref="0x7fd15de84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd15de869f0" loc="47:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd15de869f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de85560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15de86198" loc="46:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15de86198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de864e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15de8e338" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15de8e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15de8e688"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15de8e810"/>
        <function-ref name="isState" scoped="" ref="0x7fd15de8e998"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15de8eb20"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15de8eca8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15de8ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15de6da40" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15de6da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de6dd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de6c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de6c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de6c330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15de70d08" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15de70d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de6d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de6d228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de6d3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de6d538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de6d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15de68750" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15de68750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de68aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de68c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de68db0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de67020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15de69438" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15de69438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de69788"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de69910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de69a98"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de69c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de69da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd15de662a8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd15de662a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd15de665f8"/>
        <function-ref name="rand32" scoped="" ref="0x7fd15de66780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15de68080" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15de68080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de683d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15de66a70" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de66a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de66dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15de65020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15de651a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fd15de67428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15de67428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15de67778"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15de67900"/>
        <function-ref name="isState" scoped="" ref="0x7fd15de67a88"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15de67c10"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15de67d98"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15de66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15de6a978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15de6a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15de6acc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15de6ae50"/>
        <function-ref name="isState" scoped="" ref="0x7fd15de55020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15de551a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15de55330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15de554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15de4e560" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15de4e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de4e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15de52750" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15de52750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de52aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd15de52e18" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd15de52e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15de4ad30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15de4ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de490d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15de4a628" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15de4a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15de4a978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15de4d958" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15de4d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de4dca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15de493c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de493c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de49718"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15de498a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15de49a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd15de4a060" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd15de4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de4a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15de1d020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15de1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de1d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15de1d670" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15de1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de1d9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de1db48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de1dcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de1de58"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15de21a40" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15de21a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de21d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de20020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de201a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de20330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd15de20db8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd15de20db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de1f170"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de1f2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de1f480"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de1f608"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de1f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15de20748" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15de20748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de20a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15de50e20" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15de50e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15de211a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15de21330"/>
        <function-ref name="request" scoped="" ref="0x7fd15de214b8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15de21640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15de217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd15de1fae8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15de1fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de1fe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd15de1e1a8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd15de1e1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15de1e4f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15de1e680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de1e808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de1e990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15de1eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15de13528" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15de13528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de13878"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de13a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de13b88"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de13d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15de12358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15de12358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de126a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fd15dde5ac0" loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7fd15dde5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15dde5e10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15dde4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd15de12970" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15de12970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15de12cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15de12e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15de11020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15de111a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15de11330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15de114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd15de15490" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd15de15490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de157e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de15968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de15af0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de15c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de15e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15de101c0" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15de101c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15de10510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15de10698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15de10820"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15de109a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15de117a8" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15de117a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de11af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15de11c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15de11e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd15de16dc8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd15de16dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de15170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15de17428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15de17428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15de17778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15de17900"/>
        <function-ref name="request" scoped="" ref="0x7fd15de17a88"/>
        <function-ref name="granted" scoped="" ref="0x7fd15de17c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15de17d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd15de16118" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd15de16118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15de16468"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de165f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de16778"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15de16900"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15de16a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd15de14188" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd15de14188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15de144d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd15de14808" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd15de14808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15de14b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15de14ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15de14e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15de13020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15de131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ddc6c28" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ddc6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ddc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd15ddc52a8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15ddc52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ddc55f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ddc5780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ddc5908"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ddc5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15ddbbdc8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15ddbbdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15ddba170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15ddba2f8"/>
        <function-ref name="start" scoped="" ref="0x7fd15ddba480"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ddba608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15ddb9838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15ddb9838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ddb9b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ddb9d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ddb8020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ddb81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ddb8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15ddb8668" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15ddb8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ddb89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15ddbc080" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15ddbc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ddbc3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ddbc558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ddbc6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ddbc868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15ddbc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15ddbb318" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ddbb318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15ddbb668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15ddbb7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15ddbb978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15ddbbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fd15ddba928" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7fd15ddba928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15ddbac78"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15ddbae00"/>
        <function-ref name="isState" scoped="" ref="0x7fd15ddb9020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15ddb91a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15ddb9330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15ddb94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd15ddb8d28" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd15ddb8d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15ddb70a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15ddb7228"/>
        <function-ref name="start" scoped="" ref="0x7fd15ddb73b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15ddb7538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15ddbcc80" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15ddbcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15ddbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15ddb4170" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15ddb4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15ddb44c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15ddb4648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15ddb47d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15ddb4958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd15ddb6d50" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd15ddb6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd15ddac0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd15ddac260"/>
        <function-ref name="isState" scoped="" ref="0x7fd15ddac3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd15ddac570"/>
        <function-ref name="requestState" scoped="" ref="0x7fd15ddac6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd15ddac880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15dda6020" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15dda6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dda6370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dda64f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dda6680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dda6808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dda6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15ddaa5c8" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15ddaa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15ddaa918"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15ddaaaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15ddaac28"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15ddaadb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dda7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd15dda72d0" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd15dda72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd15dda7620"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd15dda77a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd15dda7930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd15dda7ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd15dda7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd15dda23c8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15dda23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15dda2718"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15dda28a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15dda2a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd15dda5540" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd15dda5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd15dda5890"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd15dda5a18"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd15dda5ba0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd15dda5d28"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd15dda2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd15dd84cc8" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd15dd84cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dd830a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd15dd84020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd15dd84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dd84370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dd844f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dd84680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dd84808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dd84990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd15dd82ab0" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd15dd82ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd15dd82e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd15dd81020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd15dd811a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd15dd81330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd15dd814b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd15dd81640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd15dd817c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd15dd81950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd15dd81ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd15dd81c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd15dd81de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd15dd80020"/>
        <function-ref name="sync" scoped="" ref="0x7fd15dd801a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dd80430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd15dd805b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd15dd86020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd15dd86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15dd86370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15dd864f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15dd86680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15dd86808"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15dd86990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15dd86b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd15dd87400" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd15dd87400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd15dd87750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd15dd7f6a0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fd15dd7f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd15dd7f9f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd15dd7fb78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd15dd7fd00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd15dd7e020"/>
        <function-ref name="setCca" scoped="" ref="0x7fd15dd7e1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd15dd7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15dd882a8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15dd882a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15dd885f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15dd88780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dd88908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dd88a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15dd88c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15dd8d980" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15dd8d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dd8dcd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dd8de58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dd8c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dd8c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dd8c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15dd8a628" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15dd8a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dd8a978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd15dd83368" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd15dd83368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd15dd836b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd15dd83840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd15dd839c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd15dd83b50"/>
        <function-ref name="getPower" scoped="" ref="0x7fd15dd83cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd15dd83e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd15dd808d0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd15dd808d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd15dd80d20"/>
        <function-ref name="changed" scoped="" ref="0x7fd15dd7f020"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd15dd7f1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd15dd7f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd15dd82188" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd15dd82188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dd824d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd15dd82660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd15dd827e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15dd8cab0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15dd8cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dd8ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15dd7d2a8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15dd7d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15dd7d5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15dd7d780"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15dd7d908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15dd7da90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15dd7dc18"/>
        <function-ref name="get" scoped="" ref="0x7fd15dd7dda0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15dd7c020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15dd7c640"/>
        <function-ref name="set" scoped="" ref="0x7fd15dd7c1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15dd7c330"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15dd7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15dd8ac18" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15dd8ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15dd89020"/>
        <function-ref name="source" scoped="" ref="0x7fd15dd891a8"/>
        <function-ref name="address" scoped="" ref="0x7fd15dd89330"/>
        <function-ref name="destination" scoped="" ref="0x7fd15dd894b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15dd89640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15dd897c8"/>
        <function-ref name="type" scoped="" ref="0x7fd15dd89950"/>
        <function-ref name="setType" scoped="" ref="0x7fd15dd89ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15dd89c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15dd89de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15dd88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fd15dd7e698" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7fd15dd7e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15dd7e9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15dd7eb70"/>
        <function-ref name="request" scoped="" ref="0x7fd15dd7ecf8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15dd7ee80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15dd7d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15dc62080" loc="49:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15dc62080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dc623d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc62558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc626e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dc62868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dc629f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15dc62c38" loc="50:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15dc62c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15dc61020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15dc611a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc61330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc614b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15dc61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15dc61888" loc="51:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc61888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15dc61bd8"/>
        <function-ref name="source" scoped="" ref="0x7fd15dc61d60"/>
        <function-ref name="address" scoped="" ref="0x7fd15dc60020"/>
        <function-ref name="destination" scoped="" ref="0x7fd15dc601a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15dc60330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15dc604b8"/>
        <function-ref name="type" scoped="" ref="0x7fd15dc60640"/>
        <function-ref name="setType" scoped="" ref="0x7fd15dc607c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15dc60950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15dc60ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15dc60c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd15dc5f020" loc="52:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd15dc5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15dc5f370"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15dc5f4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15dc5f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15d024400" loc="49:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15d024400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15d024750"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15d0248d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15d024a60"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15d024be8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15d024d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15d022020" loc="50:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15d022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15d022370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15d0224f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15d022680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15d022808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15d022990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15d022bd8" loc="51:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15d022bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15d01f020"/>
        <function-ref name="source" scoped="" ref="0x7fd15d01f1a8"/>
        <function-ref name="address" scoped="" ref="0x7fd15d01f330"/>
        <function-ref name="destination" scoped="" ref="0x7fd15d01f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15d01f640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15d01f7c8"/>
        <function-ref name="type" scoped="" ref="0x7fd15d01f950"/>
        <function-ref name="setType" scoped="" ref="0x7fd15d01fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15d01fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15d01fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15d01e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd15d01e2a8" loc="52:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd15d01e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15d01e5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15d01e780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15d01e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15d015530" loc="44:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15d015530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15d015880"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15d015a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15d015b90"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15d015d18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15d014020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd15d0142c8" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15d0142c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15d014618"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15d0147a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15d014928"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15d014ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15d014c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd15d014e80" loc="47:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15d014e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15d0131f8"/>
        <function-ref name="source" scoped="" ref="0x7fd15d013380"/>
        <function-ref name="address" scoped="" ref="0x7fd15d013508"/>
        <function-ref name="destination" scoped="" ref="0x7fd15d013690"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15d013818"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15d0139a0"/>
        <function-ref name="type" scoped="" ref="0x7fd15d013b28"/>
        <function-ref name="setType" scoped="" ref="0x7fd15d013cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15d013e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15d012020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15d0121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15dcd64f8" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15dcd64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dcd6848"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dcd69d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dcd6b58"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dcd6ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dcd6e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd15dc8e6f8" loc="48:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15dc8e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dc8ea68"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc8ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc8ed78"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dc8d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dc8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd15dc8f920" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd15dc8f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dc8fc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc8fe18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc8e020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dc8e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dc8e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd15dc8ca10" loc="50:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15dc8ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15dc8cd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15dc8b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc8b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc8b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15dc8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fd15dc8b780" loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fd15dc8b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15dc8bad0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15dc8bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fd15dc89020" loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fd15dc89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15dc89370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15dc894f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd15dc8d3f0" loc="49:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15dc8d740"/>
        <function-ref name="source" scoped="" ref="0x7fd15dc8d8c8"/>
        <function-ref name="address" scoped="" ref="0x7fd15dc8da50"/>
        <function-ref name="destination" scoped="" ref="0x7fd15dc8dbd8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15dc8dd60"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15dc8c020"/>
        <function-ref name="type" scoped="" ref="0x7fd15dc8c1a8"/>
        <function-ref name="setType" scoped="" ref="0x7fd15dc8c330"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15dc8c4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15dc8c640"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15dc8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15dc85248" loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15dc85248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15dc85598"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15dc85720"/>
        <function-ref name="start" scoped="" ref="0x7fd15dc858a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dc85a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd15dc84208" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15dc84208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dc84558"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc846e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc84868"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dc849f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dc84b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd15dc82020" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd15dc82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dc82370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd15dc825f8" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15dc825f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15dc82948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15dc82ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc82c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc82de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15dc81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd15dc7f6b8" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd15dc7f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15dc7ec58"/>
        <function-ref name="clear" scoped="" ref="0x7fd15dc7c380"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15dc7e578"/>
        <function-ref name="set" scoped="" ref="0x7fd15dc7ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd15dc77170" loc="66:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd15dc77170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd15dc774c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd15dc77648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd15dc777d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd15dc77958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd15dc83348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15dc83348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dc83698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd15dc80968" loc="63:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd15dc80968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd15dc80cb8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd15dc80e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd15dc7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd15dc812c0" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd15dc812c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd15dc81610"/>
        <function-ref name="source" scoped="" ref="0x7fd15dc81798"/>
        <function-ref name="address" scoped="" ref="0x7fd15dc81920"/>
        <function-ref name="destination" scoped="" ref="0x7fd15dc81aa8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd15dc81c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd15dc81db8"/>
        <function-ref name="type" scoped="" ref="0x7fd15dc80020"/>
        <function-ref name="setType" scoped="" ref="0x7fd15dc801a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd15dc80330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd15dc804b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd15dc80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd15dc7b670" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd15dc7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15dc79ad0"/>
        <function-ref name="clear" scoped="" ref="0x7fd15dc781f0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15dc793f0"/>
        <function-ref name="set" scoped="" ref="0x7fd15dc788d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd15dc5b4a8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc5b4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dc5a088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd15dc5a6b0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd15dc5a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcdd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd15edcc178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dc58578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd15dc57020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd15dc58a00"/>
        <function-ref name="overflow" scoped="" ref="0x7fd15dc574a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd15dc568c8" loc="20:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd15dc568c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd15dc53490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15dc3c420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TimeSyncC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15dc3c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dc386c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dc3bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dc3aad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dc3a688"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15dc37020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dc38b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dc3a238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dc3b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15dc380f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dc3b4c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dc3b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15dc36d58" loc="46:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15dc36d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15dc320d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd15dc32390" loc="47:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15dc32390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15dc326e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15dc32868"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15dc329f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15dc32b78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15dc32d00"/>
        <function-ref name="get" scoped="" ref="0x7fd15dc31020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15dc311a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15dc317c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dc31330"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15dc314b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15dc31640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd15dc0e268" loc="50:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd15dc0e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd15dc0d700"/>
        <function-ref name="clear" scoped="" ref="0x7fd15dc0dde0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd15dc0d020"/>
        <function-ref name="set" scoped="" ref="0x7fd15dc0b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd15dc0bca8" loc="51:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd15dc0bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd15dc0a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GlobalTime" ref="0x7fd15dc1d6a8" loc="43:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fd15dc1d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fd15dc1a3a8"/>
        <function-ref name="global2Local" scoped="" ref="0x7fd15dc192a8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fd15dc1a830"/>
        <function-ref name="local2Global" scoped="" ref="0x7fd15dc1ad40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd15dc11020" loc="47:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd15dc11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd15dc11370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc114f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc11680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dc11808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd15dc11990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd15dc11c18" loc="48:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd15dc11c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15dc10020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd15dc101a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd15dc10330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd15dc104b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd15dc10640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fd15dc05b08" loc="55:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fd15dc05b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15dc04020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15dc041a8"/>
        <function-ref name="start" scoped="" ref="0x7fd15dc04330"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dc044b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoRead" ref="0x7fd15dc0a498" loc="52:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoRead" scoped="" ref="0x7fd15dc0a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dc09020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15dc09470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncInfo" ref="0x7fd15dc13930" loc="45:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fd15dc13930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fd15dc13c80"/>
        <function-ref name="getRootID" scoped="" ref="0x7fd15dc13e08"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fd15dc12020"/>
        <function-ref name="getOffset" scoped="" ref="0x7fd15dc121a8"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fd15dc12330"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fd15dc124b8"/>
        <function-ref name="getSkew" scoped="" ref="0x7fd15dc12640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Check" ref="0x7fd15dc19900" loc="44:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Check" scoped="" ref="0x7fd15dc19900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dc15bc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dc16278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dc15020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dc16b18"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15dc134d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dc13088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dc166c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dc17490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15dc155f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dc17930"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dc17dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fd15dc128d0" loc="46:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd15dc128d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd15dc12c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fd15dc09bf0" loc="53:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x7fd15dc09bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dc08768"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15dc08bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15dc108b8" loc="49:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15dc108b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15dc10c08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15dc10d90"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15dc0f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15dc0f1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15dc0f330"/>
        <function-ref name="get" scoped="" ref="0x7fd15dc0f4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15dc0f640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15dc0fc60"/>
        <function-ref name="set" scoped="" ref="0x7fd15dc0f7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15dc0f950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15dc0fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicRead" ref="0x7fd15dc063a0" loc="54:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicRead" scoped="" ref="0x7fd15dc063a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15dc05020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15dc05470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x7fd15d645898" loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x7fd15d645898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d644458"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6448a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelX" ref="0x7fd15d6416c0" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelX" scoped="" ref="0x7fd15d6416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d640370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sounder" ref="0x7fd15d648478" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sounder" scoped="" ref="0x7fd15d648478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fd15d6487c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7fd15d63e508" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7fd15d63e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d63d088"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d63d4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Microphone" ref="0x7fd15d643020" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Microphone" scoped="" ref="0x7fd15d643020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d643b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d641020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelY" ref="0x7fd15d640e60" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelY" scoped="" ref="0x7fd15d640e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d63f9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d63fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Vref" ref="0x7fd15d648b58" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vref" scoped="" ref="0x7fd15d648b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6476f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d647b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7fd15d646228" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7fd15d646228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d646d70"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6451f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7fd15d63db78" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7fd15d63db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d63b6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d63bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7fd15dbd1598" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7fd15dbd1598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fd15dbd18e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7fd15dbce358" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7fd15dbce358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fd15dbce6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7fd15dbc7b28" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7fd15dbc7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbc7e78"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbc6030"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbc61b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbc6340"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbc64c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbc6650"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbc67d8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbc6960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15dbcead0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15dbcead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dbc8d60"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dbca470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dbc81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dbcad10"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15dbc7648"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dbc71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dbca8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dbcb658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15dbc8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dbcbaf8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dbca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15dbcc1c8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15dbcc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15dbbc5f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15dbbfaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15dbbd8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15dbbd470"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15dbbb020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15dbbca40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15dbbd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15dbccd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15dbbc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15dbbf200"/>
        <function-ref name="stop" scoped="" ref="0x7fd15dbbf6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7fd15dba9548" loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fd15dba9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15dba9898"/>
        <function-ref name="disable" scoped="" ref="0x7fd15dba9a20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15dba9ba8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15dba9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fd15dba3b78" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fd15dba3b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7fd15dbb5948" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7fd15dbb5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb5c98"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb5e20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb41a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb44b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb4640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7fd15dbb2de0" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7fd15dbb2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb0170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb02f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb0480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb0608"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb0790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb0918"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb0aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fd15dba1060" loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fd15dba1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba13b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fd15dba1d40" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fd15dba1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba03e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fd15dbad338" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fd15dbad338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbad688"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbad810"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbad998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbadb20"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbadca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbade30"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbac020"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7fd15dba5ca0" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7fd15dba5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dba4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dba41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dba4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dba44b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dba4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dba47c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dba4950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dba4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7fd15dbb7638" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7fd15dbb7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb7988"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb7b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb7c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb7e20"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb61a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb6330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7fd15dbb4ad0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7fd15dbb4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb4e20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb3330"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb3640"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb37c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7fd15dba8cd8" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fd15dba8cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15dba70a0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15dba7228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15dba73b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15dba7538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fd15dba2340" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fd15dba2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7fd15dba6b18" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7fd15dba6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dba6e68"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dba5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dba51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dba5330"/>
        <function-ref name="get" scoped="" ref="0x7fd15dba54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dba5640"/>
        <function-ref name="set" scoped="" ref="0x7fd15dba57c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dba5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7fd15dbaf020" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7fd15dbaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbaf370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbaf4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbaf680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbaf808"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbaf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbafb18"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbafca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbafe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7fd15dbaa878" loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fd15dbaa878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15dbaacc8"/>
        <function-ref name="disable" scoped="" ref="0x7fd15dbaae50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15dba9020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15dba91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fd15dba0708" loc="51:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fd15dba0708"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba0a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fd15dbac4c0" loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fd15dbac4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbac810"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbac998"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbacb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbacca8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbace30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbab020"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbab1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7fd15dbb67c0" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7fd15dbb67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb6b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb6c98"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb5020"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb5330"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb54b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7fd15dbb3c58" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7fd15dbb3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbb2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbb21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbb2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbb24b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbb2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb27c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb2950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fd15dba29b0" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fd15dba29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fd15dba16d0" loc="49:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fd15dba16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15dba1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fd15dbae190" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fd15dbae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbae4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbae668"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbae7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbae978"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbaeb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbaec88"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbaee10"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7fd15dba8150" loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fd15dba8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15dba84a0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15dba8628"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15dba87b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15dba8938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7fd15dba7888" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7fd15dba7888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dba7bd8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dba7d60"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dba6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dba61a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dba6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dba64b8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dba6640"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dba67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fd15dba0d78" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fd15dba0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7fd15dbba4e0" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7fd15dbba4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbba830"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbba9b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbbab40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbbacc8"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbbae50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbb7020"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbb71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbb7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fd15dbab648" loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fd15dbab648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15dbab998"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15dbabb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15dbabca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15dbabe30"/>
        <function-ref name="get" scoped="" ref="0x7fd15dbaa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15dbaa1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15dbaa330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15dbaa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fd15db9b020" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fd15db9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fd15db9a3c0" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fd15db9a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fd15db990f0" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fd15db990f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db99440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fd15db9b690" loc="19:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fd15db9b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fd15db99760" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fd15db99760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db99ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fd15db9bd00" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fd15db9bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fd15db9aa30" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fd15db9aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db9ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fd15db99dd0" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fd15db99dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db98170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd15db8aad0" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15db8ae20"/>
        <function-ref name="fired" scoped="" ref="0x7fd15db89020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db891a8"/>
        <function-ref name="edge" scoped="" ref="0x7fd15db89330"/>
        <function-ref name="enable" scoped="" ref="0x7fd15db894b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15db89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd15db8a020" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd15db8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15db8a370"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db8a4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15db8a680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15db8a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd15db862e8" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db862e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15db86638"/>
        <function-ref name="fired" scoped="" ref="0x7fd15db867c0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db86948"/>
        <function-ref name="edge" scoped="" ref="0x7fd15db86ad0"/>
        <function-ref name="enable" scoped="" ref="0x7fd15db86c58"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15db86de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd15db87728" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd15db87728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15db87a78"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db87c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15db87d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15db86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd15db83ad0" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db83ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15db83e20"/>
        <function-ref name="fired" scoped="" ref="0x7fd15db82020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db821a8"/>
        <function-ref name="edge" scoped="" ref="0x7fd15db82330"/>
        <function-ref name="enable" scoped="" ref="0x7fd15db824b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15db82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd15db83020" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd15db83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15db83370"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db834f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15db83680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15db83808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd15db7e2e8" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd15db7e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd15db7e638"/>
        <function-ref name="fired" scoped="" ref="0x7fd15db7e7c0"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db7e948"/>
        <function-ref name="edge" scoped="" ref="0x7fd15db7ead0"/>
        <function-ref name="enable" scoped="" ref="0x7fd15db7ec58"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15db7ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd15db80728" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd15db80728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15db80a78"/>
        <function-ref name="disable" scoped="" ref="0x7fd15db80c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15db80d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15db7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfc8058" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfc8058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfc8ba0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cf89648" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf89648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cf89998"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cf89b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cf8b6e8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cf8b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cf8a370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cf8a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15cf8ad78" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf8ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15cf890f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15cf89278"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15cf89400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15db64c90" loc="18:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15db64c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15db5f820"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15db5fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fd15db59a00" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fd15db59a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15db5d5b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15db5da38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15db5c670" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15db5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15db5c9c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15db5cb48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15db5ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15db574c0" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15db574c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15db57810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15db57998"/>
        <function-ref name="request" scoped="" ref="0x7fd15db57b20"/>
        <function-ref name="granted" scoped="" ref="0x7fd15db57ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15db57e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15db4e890" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15db4e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15db4ebe0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15db4ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fd15db449b0" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fd15db449b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fd15db44d00"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15db4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fd15db480d0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15db480d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fd15db48420"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15db485a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15db48730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15db4f020" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15db4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15db4f370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15db4f4f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15db4f680"/>
        <function-ref name="granted" scoped="" ref="0x7fd15db4f808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15db4f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15db4dd40" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15db4dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15db400d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fd15db3f628" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fd15db3f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fd15db3f978"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15db3fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fd15db40b70" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15db40b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fd15db3f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15db3f1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15db3f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7fd15db2f0d0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15db2f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd15db2f420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fd15db2f5a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fd15db2f730"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15db2f8b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fd15db2fa40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fd15db2fbc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fd15db2fd50"/>
        <function-ref name="isComplete" scoped="" ref="0x7fd15db3d020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15db3d1a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fd15db3d330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fd15db3d4b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fd15db3d640"/>
        <function-ref name="startConversion" scoped="" ref="0x7fd15db3d7c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fd15db3da50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fd15db3dbd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fd15db3dd60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fd15db3c020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15db3c1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15db3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd15db403b8" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15db403b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15db40708"/>
        <function-ref name="stop" scoped="" ref="0x7fd15db40890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fd15db3c610" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd15db3c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd15db3c960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd15db3cae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd15db3cc70"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd15db3cdf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd15db2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fd15db41a20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15db41a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd15db41d70"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fd15dafe020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fd15dafe1a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15dafe330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fd15dafe4b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fd15dafe640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fd15dafe7c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7fd15dafe950"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15dafead8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fd15dafec60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fd15dafede8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fd15dafd020"/>
        <function-ref name="startConversion" scoped="" ref="0x7fd15dafd1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fd15dafd430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fd15dafd5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fd15dafd740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fd15dafd8c8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15dafda50"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15dafdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fd15dafcc40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fd15dafcc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd15daf7020"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fd15daf71a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fd15daf7330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15daf74b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fd15daf7640"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fd15daf77c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fd15daf7950"/>
        <function-ref name="isComplete" scoped="" ref="0x7fd15daf7ad8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15daf7c60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fd15daf7de8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fd15daf6020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fd15daf61a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fd15daf6330"/>
        <function-ref name="isStarted" scoped="" ref="0x7fd15daf65b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fd15daf6740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fd15daf68c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fd15daf6a50"/>
        <function-ref name="getValue" scoped="" ref="0x7fd15daf6bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15daf6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fd15daf50c0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd15daf50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd15daf5410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15da51698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15da51698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15da51a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15da51b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15da4f3c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15da4f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15da4f738"/>
        <function-ref name="configure" scoped="" ref="0x7fd15da4f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15da51dd8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da51dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15da50170"/>
        <function-ref name="requested" scoped="" ref="0x7fd15da502f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15da50480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15da50608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15da50790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15da53840" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15da53840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15da53bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15da53d38"/>
        <function-ref name="request" scoped="" ref="0x7fd15da51020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15da511a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15da51330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15da509d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15da509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15da50d28"/>
        <function-ref name="userId" scoped="" ref="0x7fd15da4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15cf799f8" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15cf799f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15cf79d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15cf78020" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cf78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cf78370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cf784f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cf78680"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cf78808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15cf76d58" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cf76d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15cf750f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cf75278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cf74980" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf74980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cf74cf0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cf74e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15cf72130" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15cf72130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cf72480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cf72608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cf72790"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cf72918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15cf754c0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf754c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cf75810"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cf75998"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cf75b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cf75ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cf75e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15cf72b60" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15cf72b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15cf71020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15cf711a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15cf71330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15cf714b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15cf71640"/>
        <function-ref name="get" scoped="" ref="0x7fd15cf717c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15cf71950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15cf70020"/>
        <function-ref name="set" scoped="" ref="0x7fd15cf71c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15cf71ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15cf71de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15cf76060" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15cf76060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cf763d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15cf76558"/>
        <function-ref name="request" scoped="" ref="0x7fd15cf766e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cf76868"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cf769f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15cf740e0" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf740e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cf74430"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cf745b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15cf702e8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15cf702e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cf70638"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cf707c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15da4c780" loc="72:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15da4c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15da4cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15da4cd18" loc="73:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15da4cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15da360a0"/>
        <function-ref name="requested" scoped="" ref="0x7fd15da36228"/>
        <function-ref name="granted" scoped="" ref="0x7fd15da363b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15da36538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15da366c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd15da4c060" loc="70:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15da4c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15da4c3b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15da4c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15da36908" loc="74:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15da36908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15da36c58"/>
        <function-ref name="userId" scoped="" ref="0x7fd15da36de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cf3f740" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cf3f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cf3fa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cf3fcd8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf3fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cf3e0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cf3e228"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cf3e3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cf3e538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cf3e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd15cf3f020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15cf3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cf3f370"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cf3f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cf3e908" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf3e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cf3ec58"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cf3ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15da2e6a0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15da2e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15da2d370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15da2d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fd15da2b428" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fd15da2b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15da2a020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15da2a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15da299a0" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15da299a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15da29cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15da29e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15da28030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7fd15da2ab18" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fd15da2ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fd15da2ae68"/>
        <function-ref name="cancel" scoped="" ref="0x7fd15da29020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd15da291a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7fd15da184d8" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7fd15da184d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15da18828"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15da189b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15da05680" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15da05680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9ee370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9ee7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d9ed060" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d9ed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9edbc8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9eb088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d9eb720" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d9eb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d9eba90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d9ebc18"/>
        <function-ref name="request" scoped="" ref="0x7fd15d9ebda0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d9ea020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fd15d9e0438" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d9e0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d9e0788"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9e0910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d9e0a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfc5498" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfc5498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfc4020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfc4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x7fd15d9d18a0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x7fd15d9d18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9cf458"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9cf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7fd15d9c9020" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7fd15d9c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9c9b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x7fd15d9ce578" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x7fd15d9ce578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9cd0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9cd548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7fd15d9cc2b0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7fd15d9cc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9ccdf8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9ca278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fd15d9c3b10" loc="21:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fd15d9c3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d9c3e60"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9c2020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d9c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fd15d9c3148" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fd15d9c3148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d9c3498"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9c3620"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d9c37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d9c5428" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d9c5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d9c5778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d9c5900"/>
        <function-ref name="request" scoped="" ref="0x7fd15d9c5a88"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d9c5c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9c5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15d9c2cd0" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d9c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d9bf0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d9bf228"/>
        <function-ref name="start" scoped="" ref="0x7fd15d9bf3b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d9bf538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fd15d9be388" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fd15d9be388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d9be6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9be860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d9be9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x7fd15d9b76c0" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x7fd15d9b76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9b7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x7fd15d9b7020" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x7fd15d9b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9b7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fd15d9bf8a0" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fd15d9bf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d9bfbf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d9bfd78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d9be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fd15d9aac10" loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fd15d9aac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15d9a9020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15d9a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x7fd15d9b9e30" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x7fd15d9b9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d9b81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d9b8330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d9b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d9b8640"/>
        <function-ref name="get" scoped="" ref="0x7fd15d9b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d9b8950"/>
        <function-ref name="set" scoped="" ref="0x7fd15d9b8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d9b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d9bee30" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d9bee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d9b90c0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d9bc798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d9bb4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d9bb088"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d9b9960"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d9b9510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d9bcbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d9bd9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d9bbaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d9bde80"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d9bc348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15d9a5b68" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d9a5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d9a1d98"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d9a34d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d9a11f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d9a3d78"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d9a0688"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d9a0238"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d9a3928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d9a46f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d9a17c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d9a4b90"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d9a3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d99d510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d99d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d99d880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d99da08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d99a140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d99a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d99a4b0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d99a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d99dc50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d99dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d99c020"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d99c1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d99c330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d99c4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d99c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d99e748" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d99e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d99eab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d99ec40"/>
        <function-ref name="request" scoped="" ref="0x7fd15d99edc8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d99d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d99d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d99c888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d99c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d99cbd8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d99cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15cf1fcc0" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15cf1fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15cf1d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15cf1d328" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cf1d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cf1d678"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cf1d800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cf1d988"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cf1db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15cf1a200" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cf1a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15cf1a570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cf1a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cf19e18" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf19e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cf181c0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cf18348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15cf185d0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15cf185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cf18920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cf18aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cf18c30"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cf18db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15cf1a940" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cf1a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cf1ac90"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cf1ae18"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cf19020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cf191a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cf19330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15cf17060" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15cf17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15cf173b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15cf17538"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15cf176c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15cf17848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15cf179d0"/>
        <function-ref name="get" scoped="" ref="0x7fd15cf17b58"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15cf17ce0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15cf15330"/>
        <function-ref name="set" scoped="" ref="0x7fd15cf15020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15cf17e68"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15cf151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15cf1b4b0" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15cf1b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cf1b820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15cf1b9a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15cf1bb30"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cf1bcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cf1be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15cf19578" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cf19578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cf198c8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cf19a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15cf155f8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15cf155f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cf15948"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cf15ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15d997d50" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d997d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d96e0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d96e260"/>
        <function-ref name="start" scoped="" ref="0x7fd15d96e3e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d96e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d96e7b8" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d96e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d96eb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d96ed50" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d96ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d96d0d8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d96d260"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d96d3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d96d570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d96d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d96d940" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d96d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d96dc90"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d96de18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15cee4d58" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15cee4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15cee30d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15cee3260"/>
        <function-ref name="start" scoped="" ref="0x7fd15cee33e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cee3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cee37b8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cee37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cee3b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd15cee1120" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd15cee1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cee1470"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cee15f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cee3d50" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cee3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cee20d8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cee2260"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cee23e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cee2570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cee26f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fd15cee18c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fd15cee18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cee1c10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cee1d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fd15cee4638" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15cee4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cee4988"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cee4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cee2940" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cee2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cee2c90"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cee2e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d966d98" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d966d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d965930"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d965da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d963628" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d963628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d9621e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d962658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d962cf0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d962cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d9610a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d961228"/>
        <function-ref name="request" scoped="" ref="0x7fd15d9613b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d961538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9616c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d95f2e8" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d95f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d95fe50"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d95d2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d95db28" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d95db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d95c6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d95cb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d95a240" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d95a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d95a5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d95a738"/>
        <function-ref name="request" scoped="" ref="0x7fd15d95a8c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d95aa48"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d95abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cf2ce80" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cf2ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cf2b1f8"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cf2b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cf2d020" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cf2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cf2db68"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cf2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15cf2c5d8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cf2c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15cf2c928"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15cf2cab0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15cf2cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfc38d8" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfc38d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfc2458"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfc28a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15ceb8060" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ceb8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15ceb83b0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15ceb8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15ceba1c8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15ceba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cebad10"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15ceb91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15ceb9778" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15ceb9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15ceb9ac8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15ceb9c50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15ceb9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfc1d08" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfc1d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfc08b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfc0d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d93d4c0" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d93d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d93c088"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d93c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7fd15d931020" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7fd15d931020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d931b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d930020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7fd15d93a9c0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7fd15d93a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d93ad10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d936020"/>
        <function-ref name="request" scoped="" ref="0x7fd15d9361a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d936330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9364b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7fd15d936d70" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7fd15d936d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d9350f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d935278"/>
        <function-ref name="request" scoped="" ref="0x7fd15d935400"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d935588"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d935710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7fd15d9341c8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7fd15d9341c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d934d10"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d9331c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7fd15d92db68" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7fd15d92db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fd15d92d158" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d92d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d92d4a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d92d630"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d92d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d926398" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d926398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d926708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d926890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d924020" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d924020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d924390"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d924518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d926ad8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d926ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d926e28"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d925020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d9251a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d925330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d9254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d92e678" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d92e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d92e9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d92eb70"/>
        <function-ref name="request" scoped="" ref="0x7fd15d92ecf8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d92ee80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d926030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d925700" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d925700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d925a50"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d925bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15cea5520" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15cea5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15cea5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15cea5af8" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cea5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cea5e48"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cea4020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cea41a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cea4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15cea19a8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cea19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15cea1d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cea0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15ce9f6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce9f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15ce9fa68"/>
        <function-ref name="configure" scoped="" ref="0x7fd15ce9fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15ce9fe78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15ce9fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ce9e1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ce9e380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ce9e508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ce9e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15cea0268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cea0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cea05b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cea0740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cea08c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cea0a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cea0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15ce9e8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15ce9e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15ce9ec28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15ce9edb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15ce9d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15ce9d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15ce9d330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ce9d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15ce9d640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15ce9dc60"/>
        <function-ref name="set" scoped="" ref="0x7fd15ce9d950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15ce9d7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15ce9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15cea2bb8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15cea2bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cea1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15cea11a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15cea1330"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cea14b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cea1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15cea0e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cea0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15ce9f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15ce9f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15ce9c020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ce9c370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ce9c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d921510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d921510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d921880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d921a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d91e140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d91e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d91e4b0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d91e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d921c50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d921c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d920020"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d9201a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d920330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9204b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d920640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d9227c0" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d9227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d922b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d922cb8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d922e40"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d921020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d9211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d920888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d920888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d920bd8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d920d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ce69980" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ce69980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ce69cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15ce68020" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ce68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ce68370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ce684f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ce68680"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ce68808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15ce66d58" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ce66d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15ce650f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ce65278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15ce64980" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce64980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15ce64cf0"/>
        <function-ref name="configure" scoped="" ref="0x7fd15ce64e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15ce63130" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15ce63130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ce63480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ce63608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ce63790"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ce63918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15ce654c0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ce654c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ce65810"/>
        <function-ref name="requested" scoped="" ref="0x7fd15ce65998"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ce65b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ce65ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ce65e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15ce63b60" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15ce63b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15ce61020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15ce611a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15ce61330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15ce614b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15ce61640"/>
        <function-ref name="get" scoped="" ref="0x7fd15ce617c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15ce61950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15ce60020"/>
        <function-ref name="set" scoped="" ref="0x7fd15ce61c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15ce61ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15ce61de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15ce66060" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15ce66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ce663d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15ce66558"/>
        <function-ref name="request" scoped="" ref="0x7fd15ce666e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ce66868"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ce669f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15ce640e0" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ce640e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15ce64430"/>
        <function-ref name="userId" scoped="" ref="0x7fd15ce645b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15ce602e8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce602e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ce60638"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ce607c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d91b698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d91b698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d91ba08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d91bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d9193c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d9193c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d919738"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d9198c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d91bdd8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d91bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d91a170"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d91a2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d91a480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d91a608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d91a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d91c910" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d91c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d91cc80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d91ce08"/>
        <function-ref name="request" scoped="" ref="0x7fd15d91b020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d91b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d91b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d91a9d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d91a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d91ad28"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d919020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ce25570" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ce25570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ce258c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15ce25b48" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ce25b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ce24020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ce241a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ce24330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ce244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15ce21a28" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ce21a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15ce21d98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ce20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15ce1f6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ce1f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15ce1fa68"/>
        <function-ref name="configure" scoped="" ref="0x7fd15ce1fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15ce1fe78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15ce1fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ce1e1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ce1e380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ce1e508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ce1e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15ce20268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ce20268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ce205b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15ce20740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ce208c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ce20a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ce20bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15ce1e8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15ce1e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15ce1ec28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15ce1edb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15ce1d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15ce1d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15ce1d330"/>
        <function-ref name="get" scoped="" ref="0x7fd15ce1d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15ce1d640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15ce1dc60"/>
        <function-ref name="set" scoped="" ref="0x7fd15ce1d950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15ce1d7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15ce1dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15ce23cc8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15ce23cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ce210a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15ce21228"/>
        <function-ref name="request" scoped="" ref="0x7fd15ce213b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ce21538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ce216c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15ce20e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ce20e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15ce1f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15ce1f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15ce1c020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15ce1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ce1c370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ce1c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15d917380" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d917380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d9176d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d917858"/>
        <function-ref name="start" scoped="" ref="0x7fd15d9179e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d917b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d917db0" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d917db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d916170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d9163b8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d9163b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d916708"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d916890"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d916a18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d916ba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d916d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d914020" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d914020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d914370"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d9144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15cdeb740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15cdeb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15cdeba90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15cdebc18"/>
        <function-ref name="start" scoped="" ref="0x7fd15cdebda0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cdea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cdea268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cdea268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cdea5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd15cde8b90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd15cde8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cde7020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cde71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cdea800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cdea800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cdeab50"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cdeacd8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cdeae60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cde8020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cde81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fd15cde7470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fd15cde7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cde77c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cde7948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fd15cdeb020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15cdeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cdeb370"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cdeb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cde83f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cde83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cde8740"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cde88c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15d913d80" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d913d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d912170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d9122f8"/>
        <function-ref name="start" scoped="" ref="0x7fd15d912480"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d912608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d912850" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d912850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d912ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d912de8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d912de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d911170"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d9112f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d911480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d911608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d911790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d9119d8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d9119d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d911d28"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d910020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15cdd4ad8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15cdd4ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15cdd4e28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15cdd3020"/>
        <function-ref name="start" scoped="" ref="0x7fd15cdd31a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cdd3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cdd3578" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cdd3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cdd38c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd15cdd1020" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd15cdd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cdd1370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cdd14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cdd3b10" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cdd3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cdd3e60"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cdd2020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cdd21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cdd2330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cdd24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fd15cdd17c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fd15cdd17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cdd1b10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cdd1c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fd15cdd43b8" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15cdd43b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cdd4708"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cdd4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cdd2700" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cdd2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cdd2a50"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cdd2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15d8ef270" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d8ef270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d8ef5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d8ef748"/>
        <function-ref name="start" scoped="" ref="0x7fd15d8ef8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d8efa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7fd15d8ec638" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7fd15d8ec638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8ec988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8ecb10"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8ecc98"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8ece20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8ee020" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8eeb88"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fd15d8e4d98" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fd15d8e4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15d8e3170"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15d8e32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7fd15d8e6438" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7fd15d8e6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d8e6788"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d8e6910"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d8e6a98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d8e6c20"/>
        <function-ref name="get" scoped="" ref="0x7fd15d8e6da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d8e5020"/>
        <function-ref name="set" scoped="" ref="0x7fd15d8e51a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d8e5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fd15d8e56c0" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fd15d8e56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8e4370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8e47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d8eb370" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d8eb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d8e76c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d8eadb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d8e9ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d8e9688"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d8e6020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d8e7b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d8e9238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d8ea020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d8e70f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d8ea4c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d8ea960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15d8e1600" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d8e1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d8e1950"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d8e1ad8"/>
        <function-ref name="start" scoped="" ref="0x7fd15d8e1c60"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d8e1de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7fd15d8de8f0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7fd15d8de8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8dec40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8dedc8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8dd020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8dd1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8dd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8e0288" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8e0288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8e0df0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8de2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fd15d8d6e00" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fd15d8d6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15d8d51a8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15d8d5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7fd15d8d85d8" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7fd15d8d85d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d8d8928"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d8d8ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d8d8c38"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d8d8dc0"/>
        <function-ref name="get" scoped="" ref="0x7fd15d8d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d8d71a8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d8d7330"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d8d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fd15d8d7848" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fd15d8d7848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8d63d8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8d6828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d8dd680" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d8dd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d8d98f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d8db020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d8dbd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d8db8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d8d81c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d8d9d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d8db470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d8dc1f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d8d9320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d8dc698"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d8dcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15d8d35e8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d8d35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d8cf8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d8d0020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d8d0d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d8d08c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d8ce1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d8cfd40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d8d0470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d8d1158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d8cf320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d8d15f8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d8d1a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d8ca908" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d8ca908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d8cac58"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d8cade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8ccaa8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8ccaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8cb620"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8cba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15d8ca060" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d8ca3b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d8ca538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d8ca6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8bbd58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8bbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8ba8f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8bad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d8b95e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d8b95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8b8198"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8b8608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d8b8ca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d8b8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8b60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8b6228"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8b63b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8b6538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8b66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfbe1c8" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.TempC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfbe1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfbed10"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfbc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8ae928" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8ae928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8ab4a8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8ab8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d8a8560" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d8a8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8a70f8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8a7568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d8a7da8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d8a7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8a69e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d8a6e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d8a4510" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d8a4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8a4880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8a4a08"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8a4b90"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8a4d18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfbb618" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfbb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfba198"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfba5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fd15cfbab80" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fd15cfbab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fd15cfb9020"/>
        <function-ref name="disable" scoped="" ref="0x7fd15cfb91a8"/>
        <function-ref name="stopMic" scoped="" ref="0x7fd15cfb9330"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fd15cfb94b8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fd15cfb9640"/>
        <function-ref name="enable" scoped="" ref="0x7fd15cfb97c8"/>
        <function-ref name="muxSel" scoped="" ref="0x7fd15cfb9950"/>
        <function-ref name="startMic" scoped="" ref="0x7fd15cfb9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d89ae78" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d89ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d8919f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d891e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fd15d890bb0" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fd15d890bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d88f728"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d88fb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fd15d8872e0" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fd15d8872e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fd15d887630"/>
        <function-ref name="disable" scoped="" ref="0x7fd15d8877b8"/>
        <function-ref name="stopMic" scoped="" ref="0x7fd15d887940"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fd15d887ac8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fd15d887c50"/>
        <function-ref name="enable" scoped="" ref="0x7fd15d887dd8"/>
        <function-ref name="muxSel" scoped="" ref="0x7fd15d886020"/>
        <function-ref name="startMic" scoped="" ref="0x7fd15d8861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fd15d8889a0" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15d8889a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d888cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d888e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d887030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d889d20" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d889d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8880a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d888228"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8883b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d888538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8886c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15d886cd8" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d886cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d8830a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d883228"/>
        <function-ref name="start" scoped="" ref="0x7fd15d8833b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d883538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x7fd15d87acf8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x7fd15d87acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d8790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d879228"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d8793b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d879538"/>
        <function-ref name="get" scoped="" ref="0x7fd15d8796c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d879848"/>
        <function-ref name="set" scoped="" ref="0x7fd15d8799d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d879b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x7fd15d882be0" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7fd15d882be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d881020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d8811a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d881330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x7fd15d87c7f8" loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x7fd15d87c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d87cb48"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d87ccd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d87ce58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d87b020"/>
        <function-ref name="get" scoped="" ref="0x7fd15d87b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d87b330"/>
        <function-ref name="set" scoped="" ref="0x7fd15d87b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d87b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x7fd15d87b9c8" loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x7fd15d87b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d87bd18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d87a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d87a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d87a330"/>
        <function-ref name="get" scoped="" ref="0x7fd15d87a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d87a640"/>
        <function-ref name="set" scoped="" ref="0x7fd15d87a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d87a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fd15d883828" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fd15d883828"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fd15d883b78"/>
        <function-ref name="disable" scoped="" ref="0x7fd15d883d00"/>
        <function-ref name="stopMic" scoped="" ref="0x7fd15d882020"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fd15d8821a8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fd15d882330"/>
        <function-ref name="enable" scoped="" ref="0x7fd15d8824b8"/>
        <function-ref name="muxSel" scoped="" ref="0x7fd15d882640"/>
        <function-ref name="startMic" scoped="" ref="0x7fd15d8827c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fd15d86ad48" loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fd15d86ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8690d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d869260"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8693e8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d869570"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d8696f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x7fd15d878020" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x7fd15d878020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d878370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fd15d86c280" loc="56:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d86c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d86ce00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d86a130"/>
        <function-ref name="write" scoped="" ref="0x7fd15d8769c8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d875588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x7fd15d869ad8" loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x7fd15d869ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd15d869e28"/>
        <function-ref name="disable" scoped="" ref="0x7fd15d867020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd15d8671a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd15d867330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d881738" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d881738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d87da18"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d87e158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d87ee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d87e9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d87c2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d87de68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d87e5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d880370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d87d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d880810"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d880cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d8401d0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d8401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d840520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8406a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d840830"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8409b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d840b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd15d70e020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d70e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d70eba0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d70a020"/>
        <function-ref name="write" scoped="" ref="0x7fd15d70c790"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d70b388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d833538" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d833538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d833888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d833a10"/>
        <function-ref name="request" scoped="" ref="0x7fd15d833b98"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d833d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd15d8329b0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d8329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d830560"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d82e8b0"/>
        <function-ref name="write" scoped="" ref="0x7fd15d82f130"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d82fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d813af8" loc="92:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d813af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d813e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d812020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d8116d8" loc="96:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d8116d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d811a48"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d811bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d812268" loc="93:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d812268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8125b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d812740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d8128c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d812a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d812bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d814d80" loc="91:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d814d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d813170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d8132f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d813480"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d813608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d813790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d812e20" loc="94:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d812e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d8111a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d811330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15cd756e0" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15cd756e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15cd75a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd15cd75cb8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd15cd75cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cd740a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cd74228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cd743b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cd74538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15cd51af8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cd51af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15cd51e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cd50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cd4f6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cd4f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cd4fa68"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cd4fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15cd4fe78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15cd4fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cd4e1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cd4e380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cd4e508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cd4e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15cd50268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cd50268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cd505b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cd50740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cd508c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cd50a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cd50bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15cd4e8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15cd4e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15cd4ec28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15cd4edb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15cd4c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15cd4c1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15cd4c330"/>
        <function-ref name="get" scoped="" ref="0x7fd15cd4c4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15cd4c640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15cd4cc60"/>
        <function-ref name="set" scoped="" ref="0x7fd15cd4c950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15cd4c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15cd4cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15cd73d80" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15cd73d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cd51170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15cd512f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15cd51480"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cd51608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cd51790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15cd50e20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cd50e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cd4f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cd4f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15cd4b020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15cd4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cd4b370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cd4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d80fd20" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d80fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d80d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d80d2e8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d80d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d80d638"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d80d7c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d80d948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d80dad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d80dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd15d80f600" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15d80f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15d80f950"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d80fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d80c020" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d80c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d80c370"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d80c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fd15d7ca420" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fd15d7ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fd15d7ca770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd15d7cfa10" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd15d7cfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d7ce5d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d7cc8e8"/>
        <function-ref name="write" scoped="" ref="0x7fd15d7cd190"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d7cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15d7ca9f8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15d7ca9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15d7cad48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15d7c9020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15d7c91a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15d7c9330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15d7c94b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d7c9640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15d7c97c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15d7c9de8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d7c9ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15d7c9950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15d7c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d809140" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d809140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d8094b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d809638"/>
        <function-ref name="request" scoped="" ref="0x7fd15d8097c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d809948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d809ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd15d7d4020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d7d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d7d4bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d7d0020"/>
        <function-ref name="write" scoped="" ref="0x7fd15d7d3790"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d7d2388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fd15d7d0c70" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fd15d7d0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d7cf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d7cf1a8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d7cf330"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d7cf4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d7cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fd15d75f318" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fd15d75f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fd15d75f668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fd15d75f930" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd15d75f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd15d75fc80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd15d75fe08"/>
        <function-ref name="setStart" scoped="" ref="0x7fd15d75d020"/>
        <function-ref name="status" scoped="" ref="0x7fd15d75d1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd15d75d330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15d75d4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15d75d640"/>
        <function-ref name="read" scoped="" ref="0x7fd15d75d7c8"/>
        <function-ref name="init" scoped="" ref="0x7fd15d75d950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd15d75dad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15d75dc60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd15d75dde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15d75c020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd15d75c2a8"/>
        <function-ref name="enable" scoped="" ref="0x7fd15d75c430"/>
        <function-ref name="write" scoped="" ref="0x7fd15d75c5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd15d75c740"/>
        <function-ref name="off" scoped="" ref="0x7fd15d75c8c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fd15d75ca50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd15d75cbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15d75cd60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd15d75b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fd15d75b2e8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fd15d75b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15d75b638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15d75b7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15d75b948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15d75bad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15d75bc58"/>
        <function-ref name="get" scoped="" ref="0x7fd15d75bde0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15d75a020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15d75a640"/>
        <function-ref name="set" scoped="" ref="0x7fd15d75a330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15d75a1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15d75a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fd15d75a908" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fd15d75a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15d75ac58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15d75ade0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15d759020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15d7591a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15d759330"/>
        <function-ref name="get" scoped="" ref="0x7fd15d7594b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15d759640"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15d759c60"/>
        <function-ref name="set" scoped="" ref="0x7fd15d759950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15d7597c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15d759ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd15d7c5e60" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd15d7c5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15d7631e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d763370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd15d763700" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d763700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d7623a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d760790"/>
        <function-ref name="write" scoped="" ref="0x7fd15d761020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d761ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fd15d756828" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd15d756828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd15d756b78"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd15d756d00"/>
        <function-ref name="setStart" scoped="" ref="0x7fd15d753020"/>
        <function-ref name="status" scoped="" ref="0x7fd15d7531a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd15d753330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15d7534b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15d753640"/>
        <function-ref name="read" scoped="" ref="0x7fd15d7537c8"/>
        <function-ref name="init" scoped="" ref="0x7fd15d753950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd15d753ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15d753c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd15d753de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15d752020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd15d7522a8"/>
        <function-ref name="enable" scoped="" ref="0x7fd15d752430"/>
        <function-ref name="write" scoped="" ref="0x7fd15d7525b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd15d752740"/>
        <function-ref name="off" scoped="" ref="0x7fd15d7528c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fd15d752a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd15d752bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15d752d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd15d751020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fd15d74e1d8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd15d74e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd15d74e528"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd15d74e6b0"/>
        <function-ref name="setStart" scoped="" ref="0x7fd15d74e838"/>
        <function-ref name="status" scoped="" ref="0x7fd15d74e9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd15d74eb48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd15d74ecd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd15d74ee58"/>
        <function-ref name="read" scoped="" ref="0x7fd15d74d020"/>
        <function-ref name="init" scoped="" ref="0x7fd15d74d1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd15d74d330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd15d74d4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd15d74d640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd15d74d7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd15d74da50"/>
        <function-ref name="enable" scoped="" ref="0x7fd15d74dbd8"/>
        <function-ref name="write" scoped="" ref="0x7fd15d74dd60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd15d74c020"/>
        <function-ref name="off" scoped="" ref="0x7fd15d74c1a8"/>
        <function-ref name="setStop" scoped="" ref="0x7fd15d74c330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd15d74c4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd15d74c640"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd15d74c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fd15d74cb50" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fd15d74cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d74b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d74b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d74b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d74b4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15d74b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d74b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd15d74b950"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d74bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fd15d74be08" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fd15d74be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d74a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d74a330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d74a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d74a640"/>
        <function-ref name="get" scoped="" ref="0x7fd15d74a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d74a950"/>
        <function-ref name="set" scoped="" ref="0x7fd15d74aad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d74ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15d708020" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d708020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d7042b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d707978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d7056c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d705278"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d704b58"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d704708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d707dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d708b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d705c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d707088"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d707528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d700af8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d700af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d700e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d6ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d6fe6d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d6fe6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d6fea48"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d6febd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d6ff268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6ff268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6ff5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d6ff740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d6ff8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6ffa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d6ffbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d702d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d702d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d700170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d7002f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d700480"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d700608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d700790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d6ffe20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6ffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d6fe1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d6fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15ccc71d8" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15ccc71d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15ccc7528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15ccc77b0" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15ccc77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ccc7b00"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ccc7c88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ccc7e10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ccc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15ccc4698" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15ccc4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15ccc4a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ccc4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15ccc13e8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15ccc13e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15ccc1758"/>
        <function-ref name="configure" scoped="" ref="0x7fd15ccc18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15ccc1b68" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15ccc1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15ccc0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15ccc01a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15ccc0330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15ccc04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15ccc4dd8" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15ccc4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ccc2170"/>
        <function-ref name="requested" scoped="" ref="0x7fd15ccc22f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ccc2480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ccc2608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15ccc2790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15ccc0700" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15ccc0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15ccc0a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15ccc0bd8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15ccc0d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15ccbf020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15ccbf1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd15ccbf330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15ccbf4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15ccbfad8"/>
        <function-ref name="set" scoped="" ref="0x7fd15ccbf7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15ccbf640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15ccbf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15ccc5830" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15ccc5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15ccc5ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15ccc5d28"/>
        <function-ref name="request" scoped="" ref="0x7fd15ccc4020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15ccc41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15ccc4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15ccc29d8" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15ccc29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15ccc2d28"/>
        <function-ref name="userId" scoped="" ref="0x7fd15ccc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15ccbfda0" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15ccbfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15ccbe170"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15ccbe2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15d6fc6d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d6fc6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d6fca28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d6fcbb0"/>
        <function-ref name="start" scoped="" ref="0x7fd15d6fcd38"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d6fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d6fb268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d6fb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d6fb5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d6fb800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d6fb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6fbb50"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d6fbcd8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d6fbe60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6fa020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d6fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d6fa3f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6fa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d6fa740"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d6fa8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15cc8d5c8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15cc8d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15cc8d918"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15cc8daa0"/>
        <function-ref name="start" scoped="" ref="0x7fd15cc8dc28"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cc8ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cc8c020" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cc8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cc8c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd15cc8ba08" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd15cc8ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cc8bd58"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cc89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cc8c5b8" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc8c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cc8c908"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cc8ca90"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cc8cc18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cc8cda0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cc8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fd15cc892e8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fd15cc892e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cc89638"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cc897c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fd15cc8fe80" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15cc8fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cc8d1f8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cc8d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cc8b268" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc8b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cc8b5b8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cc8b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d6ef020" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d6ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6efb88"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d6ee860" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d6ee860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6ec458"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6ec8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d6eb020" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d6eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6eb390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d6eb518"/>
        <function-ref name="request" scoped="" ref="0x7fd15d6eb6a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d6eb828"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6eb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cd893f0" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cd893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cd89740"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cd898c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cd8c520" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cd8c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cd8a0c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cd8a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15cd8aac8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cd8aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15cd8ae18"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15cd89020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15cd891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfb7b98" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfb7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfb6728"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfb6b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fd15cfb7020" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fd15cfb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fd15cfb7370"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fd15cfb74f8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fd15cfb7680"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fd15cfb7808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7fd15d6cd4c0" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7fd15d6cd4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6cc088"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6cc4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7fd15d6d4c90" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7fd15d6d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6d3820"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7fd15d6d2918" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7fd15d6d2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6d1490"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6d18e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fd15d6d7b00" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fd15d6d7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fd15d6d7e50"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fd15d6d4020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fd15d6d41a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fd15d6d4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7fd15d6cf6a8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7fd15d6cf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6ce370"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6ce7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fd15d6c6a28" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fd15d6c6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d6c6d78"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6c5020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d6c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fd15d6c6060" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fd15d6c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d6c63b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6c6538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d6c66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d6c7328" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d6c7328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6c7678"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d6c7800"/>
        <function-ref name="request" scoped="" ref="0x7fd15d6c7988"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d6c7b10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6c7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fd15d6ca358" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fd15d6ca358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fd15d6ca6a8"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fd15d6ca830"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fd15d6ca9b8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fd15d6cab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd15d6c5cf8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d6c5cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d6c20a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d6c2228"/>
        <function-ref name="start" scoped="" ref="0x7fd15d6c23b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d6c2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fd15d6c1dd0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fd15d6c1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d6c0170"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6c02f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d6c0480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagPower" ref="0x7fd15d6bb9e8" loc="13:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagPower" scoped="" ref="0x7fd15d6bb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd15d6bbd38"/>
        <function-ref name="isInput" scoped="" ref="0x7fd15d6b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd15d6b91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd15d6b9330"/>
        <function-ref name="get" scoped="" ref="0x7fd15d6b94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd15d6b9640"/>
        <function-ref name="set" scoped="" ref="0x7fd15d6b97c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd15d6b9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcX" ref="0x7fd15d6b9cc8" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcX" scoped="" ref="0x7fd15d6b9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcY" ref="0x7fd15d6b8418" loc="15:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcY" scoped="" ref="0x7fd15d6b8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6b8768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalAdjustDone" ref="0x7fd15d6a1100" loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalAdjustDone" scoped="" ref="0x7fd15d6a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15d6a1450"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15d6a15d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fd15d6c13c8" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fd15d6c13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15d6c1718"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15d6c18a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15d6c1a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fd15d6b4828" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fd15d6b4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6b4b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d6b4d00"/>
        <function-ref name="request" scoped="" ref="0x7fd15d6b3020"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d6b31a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6b3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fd15d6b8be0" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d6b8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6b77a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d6b5ba0"/>
        <function-ref name="write" scoped="" ref="0x7fd15d6b6388"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d6b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fd15d6c27e0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fd15d6c27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fd15d6c2b30"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fd15d6c2cb8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fd15d6c2e40"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fd15d6c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd15d6c0888" loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d6c0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d6bcbc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d6bd238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d6bc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d6bdad8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d6bb4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d6bb088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d6bd688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d6bf458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d6bc5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d6bf8f8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d6bfd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d68d468" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d68d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d68d7b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d68d940"/>
        <function-ref name="request" scoped="" ref="0x7fd15d68dac8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d68dc50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d68ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd15d68c1c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd15d68c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd15d88a020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd15d88a2c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d68cd48"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd15d6890f8"/>
        <function-ref name="write" scoped="" ref="0x7fd15d68b928"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d68a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15d6860a0" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MagConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d6860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d6832b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d6859b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d6846c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d684278"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d683b58"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d683708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d685e00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d686be8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d684c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d6850c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d685560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15d67faf8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15d67faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15d67fe68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d67e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15d67d6d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15d67d6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15d67da48"/>
        <function-ref name="configure" scoped="" ref="0x7fd15d67dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15d67e268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d67e5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d67e740"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d67e8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d67ea50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d67ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15d680d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d680d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d67f170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d67f2f8"/>
        <function-ref name="request" scoped="" ref="0x7fd15d67f480"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d67f608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d67f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15d67ee20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d67ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d67d1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d67d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd15cc55830" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd15cc55830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd15cc55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fd15cc55e08" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fd15cc55e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cc541a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cc54330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cc544b8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cc54640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd15cc52b48" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd15cc52b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd15cc51020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cc511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cc4f8c0" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cc4f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cc4fc30"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cc4fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd15cc4e0a0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd15cc4e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd15cc4e3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd15cc4e578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd15cc4e700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd15cc4e888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd15cc513f0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cc51740"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cc518c8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cc51a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cc51bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cc51d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd15cc4ead0" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd15cc4ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd15cc4ee20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd15cc4d020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd15cc4d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd15cc4d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd15cc4d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd15cc4d640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd15cc4d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd15cc4dde8"/>
        <function-ref name="set" scoped="" ref="0x7fd15cc4dad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd15cc4d950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd15cc4dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd15cc53e20" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15cc53e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cc521c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15cc52348"/>
        <function-ref name="request" scoped="" ref="0x7fd15cc524d0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cc52658"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cc527e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd15cc4f020" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cc4f370"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cc4f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd15cc4c100" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd15cc4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cc4c450"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cc4c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15d67b6d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15d67b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15d67ba28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15d67bbb0"/>
        <function-ref name="start" scoped="" ref="0x7fd15d67bd38"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d67a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15d67a268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15d67a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15d67a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15d67a800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15d67a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d67ab50"/>
        <function-ref name="requested" scoped="" ref="0x7fd15d67acd8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d67ae60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d678020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15d6781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15d6783f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15d6783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15d678740"/>
        <function-ref name="userId" scoped="" ref="0x7fd15d6788c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd15cc1b740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd15cc1b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd15cc1ba90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd15cc1bc18"/>
        <function-ref name="start" scoped="" ref="0x7fd15cc1bda0"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cc1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd15cc1a268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd15cc1a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd15cc1a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd15cc19b90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd15cc19b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cc17020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cc171a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd15cc1a800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd15cc1a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15cc1ab50"/>
        <function-ref name="requested" scoped="" ref="0x7fd15cc1acd8"/>
        <function-ref name="granted" scoped="" ref="0x7fd15cc1ae60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15cc19020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd15cc191a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fd15cc17470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fd15cc17470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd15cc177c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd15cc17948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fd15cc1b020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd15cc1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd15cc1b370"/>
        <function-ref name="stop" scoped="" ref="0x7fd15cc1b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd15cc193f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd15cc193f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd15cc19740"/>
        <function-ref name="userId" scoped="" ref="0x7fd15cc198c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d670648" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d670648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d66e1e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d66e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d66d020" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d66d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d66db88"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d66c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d66c6b8" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d66c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d66ca28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d66cbb0"/>
        <function-ref name="request" scoped="" ref="0x7fd15d66cd38"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d66a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d66a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15d669d58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15d669d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d6688f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d668d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fd15d6675e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fd15d6675e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15d665198"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15d665608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd15d665ca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd15d665ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd15d6640a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd15d664228"/>
        <function-ref name="request" scoped="" ref="0x7fd15d6643b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd15d664538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd15d6646c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cc68ac8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cc68ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cc68e18"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cc67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cc6bc60" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cc6bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cc697e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cc69c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15cc68220" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cc68220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15cc68570"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15cc686f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15cc68880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cfb4c98" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cfb4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cfb3820"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cfb3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fd15cfb4120" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fd15cfb4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fd15cfb4470"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fd15cfb45f8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fd15cfb4780"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fd15cfb4908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd15cbefa28" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd15cbefa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd15cbefd78"/>
        <function-ref name="configure" scoped="" ref="0x7fd15cbee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fd15cbf2ba8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fd15cbf2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd15cbf0728"/>
        <function-ref name="readDone" scoped="" ref="0x7fd15cbf0b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fd15cbef180" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fd15cbef180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fd15cbef4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd15cbef658"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fd15cbef7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd15d639ae8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TestFtspAppC.MyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd15d639ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd15edcd608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd15edcd960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd15d636d60"/>
        <function-ref name="fired" scoped="" ref="0x7fd15d637470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd15d6361c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd15d637d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fd15d634648"/>
        <function-ref name="gett0" scoped="" ref="0x7fd15d6341f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd15d6378c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd15d638658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd15d636790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd15d638af8"/>
        <function-ref name="stop" scoped="" ref="0x7fd15d637020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd15ed528a8" loc="62:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd15ed4e580" loc="60:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fd15ed45810" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fd15ed455a0" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fd15ed47020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fd15ed47a18" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd15ed477a8" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fd15ed464d0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd15ed46260" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fd15ed46d18" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd15ed33dc0" loc="44:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd15ed324c8" loc="45:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd15ed33070" loc="42:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd15ed31290" loc="47:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd15ed33710" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd15ed32b80" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15ed35328" loc="40:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd15ed35998" loc="41:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd15ee59968" loc="57:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd15ee51878" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd15ee510d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd15ee49608" loc="67:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd15ee49df8" loc="75:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fd15ed90ca0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd15ed70328" loc="62:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd15edef940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd15ed74e60" loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GlobalTime" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eb920f0" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <interfacedef-ref qname="GlobalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eb920f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getLocalTime" ref="0x7fd15eb929e0" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Returns the current local time of this mote.</short>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="global2Local" ref="0x7fd15eb90ca8" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>. This method performs the inverse of the&#10; &#60;code>local2Global&#60;/clode> transformation.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd15eb90a38" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0x7fd15eb91418" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Reads the current global time.</short>
          <long>&#10; Reads the current global time. This method is a combination&#10; of &#60;code>getLocalTime&#60;/code> and &#60;code>local2Global&#60;/code>.&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd15eb911a8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="local2Global" ref="0x7fd15eb90020" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>. The following equation is used to compute the&#10; conversion:&#10;&#10;&#9;globalTime = localTime + offset + skew * (localTime - syncPoint)&#10;&#10; The skew is normalized to 0.0 (1.0 is subtracted) to increase the&#10; machine precision. The syncPoint value is periodically updated to&#10; increase the machine precision of the floating point arithmetic and&#10; also to allow time wrap.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd15eb91c60" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncInfo" loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
      <function command="" provided="0" name="getSyncPoint" ref="0x7fd15eb8bb50" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the local time of the last synchronization point.</short>
          <long>&#10; Returns the local time of the last synchronization point. This &#10; value is close to the current local time and updated when a new&#10; time synchronization message arrives.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRootID" ref="0x7fd15eb893a0" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the current root to which this node is synchronized.</short>
          <long>&#10; Returns the current root to which this node is synchronized. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSeqNum" ref="0x7fd15eb89b40" loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the latest seq number seen from the current root.</short>
          <long>&#10; Returns the latest seq number seen from the current root.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOffset" ref="0x7fd15eb96b78" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="38:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current offset of the local time wrt global time.</short>
          <long>&#10; Returns current offset of the local time wrt global time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumEntries" ref="0x7fd15eb88328" loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the number of entries stored currently in the &#10; regerssion table.</short>
          <long>&#10; Returns the number of entries stored currently in the &#10; regerssion table.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeartBeats" ref="0x7fd15eb88b08" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the value of heartBeats variable.</short>
          <long>&#10; Returns the value of heartBeats variable. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSkew" ref="0x7fd15eb8b328" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current skew of the local time wrt global time.</short>
          <long>&#10; Returns current skew of the local time wrt global time.&#10; This value is normalized to 0.0 (1.0 is subtracted) to get maximum &#10; representation precision.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncMode" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <short>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period.</short>
        <long>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period. from the timer&#10;            - TS_USER_MODE: TS msgs sent only when explic. asked by user &#10;                            via TimeSyncMode.send() command, TimeSync.Timer &#10;                            is stopped in this mode&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd15eb85970" loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; command to send out time synchronization message.</short>
          <long>&#10; command to send out time synchronization message.&#10; returns FAIL if TimeSync not in TS_USER_MODE&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd15eb85258" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Gets the current mode of the TimeSync module.</short>
          <long>&#10; Gets the current mode of the TimeSync module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fd15eb8caa8" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Sets the current mode of the TimeSync module.</short>
          <long>&#10; Sets the current mode of the TimeSync module.&#10; returns FAIL if didn't succeed&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd15eb8c838" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncNotify" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <short>&#10; time sync module (TimeSyncM) provides notification of arriving&#10; and transmitted time-sync msgs through TimeSyncNotify interface:&#10;</short>
      </documentation>
      <function event="" provided="0" name="msg_received" ref="0x7fd15eb82020" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is received and accepted&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="msg_sent" ref="0x7fd15eb826e8" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is sent by TimeSyncM or the sending did not&#10; succeed&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd15eb95810" loc="95:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15eb93020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eaf6498" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eaf6498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd15eaf6d28" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd15eb76290" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd15eb76020" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd15eb74690" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd15eb74420" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd15eb77510" loc="104:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15eb76a78" loc="130:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eb250f0" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eb250f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd15eb25320" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15eb25320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7fd15eb24940" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15eb25320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd15eb25b70" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd15eb24020" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15eb24330" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x7fd15eb246a0" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15eb25320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd15eb20df0" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eb20828" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15eb20b38" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd15eb20020" loc="103:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15eb22730" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eb224c0" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd15eb21670" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eb210c8" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd15eb213f0" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd15eb075a0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd15eb0bde8" loc="46:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd15eb19480" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
              <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eb1cb50" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd15eb1ce78" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15eb191b8" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd15eb03af8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd15eb02258" loc="67:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd15eb029c8" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd15eb01848" loc="83:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd15eaffe70" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd15eafe630" loc="117:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd15eb01110" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15eafd290" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd15eafd020" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd15eb033e0" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd15eaff020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd15eaff738" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eb1b818" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eb1b818"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd15eb0f110" loc="136:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd15eb14ca0" loc="83:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd15eb118d0" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd15eb11338" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd15eb11650" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd15eb13bd8" loc="98:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd15eb0e070" loc="151:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd15eb0f830" loc="144:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd15eb13440" loc="92:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd15eb15338" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd15eb150c8" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd15eb107c8" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd15eb10230" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd15eb10548" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd15eb15d78" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd15eb15b08" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15eb14600" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15eb063d0" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15eb063d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd15eb06600" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15eb06600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x7fd15eafa118" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eb06e78" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x7fd15eafacd8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15eb06600"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15eafaa68" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd15ea514e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea51278" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd15ea4f4e8" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea4f278" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd15ea4c690" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea4c0c8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15ea4c3d8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd15ea4b7c8" loc="106:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd15ea4e8d8" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea4e348" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15ea4e658" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd15ea30ad0" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea304e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd15ea30850" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd15ea2ebc0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea2e950" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd15ea31d38" loc="57:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd15ea313e0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd15ea31170" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15ea373a0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15ea373a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd15ea375d0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15ea375d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd15ea2a290" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15ea375d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea2a020" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd15ea28370" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea28100" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd15ea2b118" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea37e80" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15ea275e0" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15ea375d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea27020" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd15ea27360" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15ea375d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd15ea36290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea36020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd15ea353b0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea35140" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd15ea34468" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15ea341f8" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd15ea3c930" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea3c6c0" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd15ea45a88" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea45818" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd15ea47020" loc="68:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd15ea47a78" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea47808" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd15ea422a0" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea43c98" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd15ea42020" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd15ea44dc0" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea44808" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd15ea44b40" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd15ea3f5c8" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea3f358" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd15ea3e840" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea3e2c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd15ea3e5c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd15eb37970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd15ea41478" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea41208" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd15ea3ad20" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd15ea3a770" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd15ea3aaa0" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd15ea39ac8" loc="195:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd15e9e0020" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd15e9e15c8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd15e9e1928" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e9e1c38" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd15e9db380" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9dcd48" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e9db0c8" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd15e9dc540" loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15e9df2d0" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9df060" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd15e9de708" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9de160" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd15e9de488" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fd15e9ca020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9ccca8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd15e9cc020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9cfca0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15e9c8020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9c9c88" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15e9c9020" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9cac78" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fd15e93a290" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e93a020" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fd15e93d578" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e93d308" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fd15e93fd30" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd15e93fac0" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fd15e93f290" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd15e93f020" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fd15e93e728" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fd15e93e4b8" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fd15e93b3b0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e93b140" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd15e92e830" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd15e92e250" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd15e92e5b0" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fd15e9496a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e949100" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fd15e949428" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fd15e945b80" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e9455b0" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fd15e945900" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fd15e948290" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd15f7e6908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e948020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fd15e946b60" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e9468f0" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fd15e94a930" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e94a6c0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fd15e948d30" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e948ac0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd15e932290" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e932020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd15e936480" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e939e70" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd15e936200" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd15e934290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e934020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd15e9357e0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9351f8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd15e935560" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd15e931290" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e931020" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd15e942338" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e9420c8" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd15e921020" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e928a48" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e928d58" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd15e91c2d8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e91ecc8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e91c020" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd15e91e4c0" loc="112:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15e920290" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e920020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd15e91f670" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e91f0c8" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd15e91f3f0" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd15e9251d8" loc="120:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd15e9272a8" loc="97:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd15e92a988" loc="88:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd15e927a30" loc="102:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd15e925bc0" loc="128:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd15e8ff838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e8ff2a0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fd15e8ff5b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15e8fda58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fd15e8f90c8" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd15e8fb318" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd15e8fbaf0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e8fbe00" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd15e8fcb00" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd15e8fc558" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd15e8fc880" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fd15e8fd290" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fd15e8fd020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fd15e8f3ad8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e8f3830" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fd15e8f30a8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd15eb71928"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fd15eb6e228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e8f4d90" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fd15e8f1ce8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fd15eb6ecc8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd15eb6c4e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd15e8f1a00" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fd15e9057e8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fd15e903778" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fd15e903020" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fd15e907020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fd15e905020" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fd15e904020" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fd15e9047d0" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fd15e907818" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fd15e8eb178" loc="71:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fd15e8ee798" loc="56:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fd15e8ec9b0" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fd15e8ec740" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fd15e8ec020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fd15e8ef508" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd15e8ef298" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fd15e8ee020" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd15e8efcc0" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fd15e894680" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fd15e8940c8" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fd15e894400" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fd15e895178" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fd15e896840" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fd15e896200" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fd15e8965c0" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fd15e89c0a8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd15e89de00" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fd15e895980" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fd15e899990" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd15e899720" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd15e89a108" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd15e89ce40" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fd15e893828" loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fd15e898a30" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd15e8987c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fd15e893070" loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fd15e89a828" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd15e962648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd15e962d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fd15e899020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fd15e89d6d0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd15e89c790" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fd15e898110" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd15e88e2a0" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15e88e2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd15e88ead8" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd15e88d7c8" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15e88e2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd15e88d248" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd15e88d548" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15e88e2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd15e864290" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e864020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15e864ce8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e864a78" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fd15e8814d0" loc="48:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd15e962648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd15e962d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15e883668" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15e883668"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd15e883898" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd15e87b178" loc="109:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd15e87e328" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd15e87c810" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd15e87c270" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd15e87c590" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd15e87ea98" loc="88:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd15e87b8f8" loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd15e87f378" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd15e87f108" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e883898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15e87fb48" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd15e86d020" loc="50:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd15e86de70" loc="60:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd15e86d780" loc="55:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd15e86e730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd15e86e178" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd15eb37d20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd15e86e4b0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd15eb36128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fd15e85e0d8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd15e8695e0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd15e86a6b0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15e869020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e869350" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15e868c60" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd15e869e30" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15e8686a0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e8689d0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd15e870770" loc="68:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd15e870020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fd15e871868" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fd15e871020" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd15e7aa378" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9a928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd15ed9ad30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7fd15e7ac020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda9478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd15eda9880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd15e7aecf8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda9478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd15eda9880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd15e7ab1d8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9c578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd15ed9c980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7fd15e7b2ab0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb1da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd15edb0228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd15e7abb98" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd15ed9c980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd15e7ab928" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd15ed9c980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd15e7aad38" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd15ed9ad30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd15e7aaac8" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15ed9a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd15ed9ad30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7fd15e7afad8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda7890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd15eda7c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7fd15e7af328" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda9478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd15eda9880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7fd15e7ae570" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb1da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd15edb0228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd15e7ae300" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb1da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd15edb0228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7fd15e7ac9f0" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda7890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd15eda7c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd15e7ac780" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15eda7890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd15eda7c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd15e7b0b60" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fd15e7a1648" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fd15e7a13d8" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd15e7a3568" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd15e7a6438" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd15e7a5748" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd15e7a54d8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd15e7a4020" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd15e7a3cb8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15e7a6d70" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd15e7a6b00" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e7b0b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd15e7a4718" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15e7a4e00" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd15e79e820" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e79e820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fd15e798e20" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd15e79a1d8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd15e79b110" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e79e820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd15e79a8e0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd15e7975c0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15e79ba58" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e79e820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd15e79b7e8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e79e820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd15e798020" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15e798708" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd15e7bd458" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e7bd458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fd15e7b8900" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd15e7b9a40" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd15e7bdcf8" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e7bd458"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fd15e7b7290" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd15e7b7020" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fd15e7b7a10" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd15e7ba500" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd15e7bcda8" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd15e7b81d8" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd15e7bc688" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e7bd458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd15e7bc418" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd15e7bd458"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd15e7babf8" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15e7b9328" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7fd15e78a7c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edc2a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd15edc2e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd15e787c10" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb7100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd15edb7508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd15e788a38" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbb980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd15edbbd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd15e787470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbb980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd15edbbd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd15e787200" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbb980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd15edbbd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd15e7865f8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb7100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd15edb7508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd15e786388" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edb7100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd15edb7508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd15e788290" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edc2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd15edc2e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd15e788020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edc2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd15edc2e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7fd15e77d020" loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7fd15e77d7e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7fd15e77e7f0" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fd15e77c020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fd15e780570" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbd118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd15edbd520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fd15e77e020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbd118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd15edbd520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fd15e780cb0" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd15edbd118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd15edbd520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd15e61f3f8" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd15e61f3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd15e61f628" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e61f628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd15e61e020" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd15e61f628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd15e61d070" loc="76:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd15e61e838" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd15e61d760" loc="82:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd15e57ee28" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd15e57b020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd15e57c780" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd15e57c510" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd15e57e640" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd15e55db10" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd15e55a450" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd15e55d428" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fd15e55bc60" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fd15e55b9f0" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd15e560ce8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd15e55b290" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd15e541e58" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fd15e4cc020" loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fd15e4cc800" loc="31:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fd15e4ca020" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fd15e4ad348" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4aed58" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e4ad0c8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd15e4a82b0" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4a9940" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e4a9c70" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd15e4a8020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15e4aac50" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4aa6a0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e4aa9d0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fd15e4ae020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd15eb79b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4af908" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e4afc38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd15e4ab948" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4ab060" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd15e4ab390" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd15e4ab6b8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd15e48e930" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd15e48e020" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd15e48e380" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e48e6a0" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd15e48dcc8" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd15e48d060" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd15e48d3c0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd15e48d6e0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd15e48da28" loc="83:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd15e4939a0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd15e493730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd15e401020" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e405c58" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd15e400338" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e4000c8" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd15e401820" loc="68:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15e400cd8" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e400a68" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fd15e3ec020" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fd15e3e3a60" loc="126:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fd15e3e7538" loc="117:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fd15e3e2458" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fd15e3e21e8" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fd15e3ed880" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fd15e3e4108" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fd15e3e5e18" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fd15e3e9d50" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fd15e3e9ae0" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd15e3ea020" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fd15e3deb98" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd15e3de928" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fd15e3e84d0" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fd15e3e04b0" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fd15e3e0240" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd15e3df360" loc="136:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fd15e3e3338" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fd15e3e30c8" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fd15e3de258" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fd15e3e5020" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fd15e3e7c18" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15e3ea978" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e3ea708" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd15e3e8de0" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fd15e3e8b70" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fd15e3e4918" loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fd15e3e2b60" loc="129:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fd15e3e0ba0" loc="132:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fd15e3dfaa8" loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fd15e3e5738" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd15e3ec738" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd15e3e9338" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15e3e90c8" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd15e3da9f8" loc="90:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd15e3d7258" loc="98:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd15e382748" loc="95:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd15e380020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd15e3307d0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd15e32f0d8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd15e32b020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd15e32d6f8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd15e323c80" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd15e329020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd15e323a10" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd15e329020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd15e328e10" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd15e3258f0" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd15e329020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd15e325680" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd15e329020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd15e3231d8" loc="70:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd15e329020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fd15e1e28c8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd15e19ee40" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fd15e19e4f0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd15e19ebc0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd15eb28780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd15eb26cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fd15e19fd70" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fd15e19f600" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd15e19f390" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd15f7e4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd15de8d9b8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd15de8d9b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd15de8a4c8" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd15de8d9b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd15de8a258" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd15de8d9b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7fd15dbdf598" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7fd15dbdf328" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7fd15dba37c0" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7fd15db62178" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd15db66928" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7fd15db62958" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd15db5e940" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15db5e940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd15db5b1d8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd15db59020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15db5e940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd15db5b920" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd15db5bc20" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd15db5e940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fd15db46768" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd15db47a60" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fd15db47db8" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fd15db46178" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fd15db464c8" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd15db443f0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15db45368" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fd15db45688" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fd15db459c0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fd15db45d70" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fd15db44140" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fd15db4b440" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd15db4c738" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fd15db4ca90" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fd15db4cdf8" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fd15db4b1a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15db4ac80" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd15db4a408" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15db4be48" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fd15db4a188" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fd15db34868" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fd15db3e9e8" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd6020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7fd15edd64d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fd15db32a88" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd15db32818" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fd15db330d8" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fd15db38548" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fd15db3b3e8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd6020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fd15edd64d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fd15db3b178" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd6020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fd15edd64d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fd15db373a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fd15db32020" loc="133:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd15db31258" loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fd15db38c38" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fd15db36258" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fd15db37ae8" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fd15db36980" loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fd15db33838" loc="127:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fd15db3a608" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd0a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fd15edce178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fd15db3a398" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd0a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fd15edce178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fd15db34178" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fd15db3bbc0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd15edd0a10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fd15edce178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd15db3ada8" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd15db31d68" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15db31af8" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd15dabb890" loc="56:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fd15daba8a0" loc="73:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd15dabb070" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd15daba0d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd15dab91d8" loc="81:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fd15da4ac18" loc="62:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x7fd15d8951d8" loc="110:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd15d896360" loc="97:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x7fd15d8974e0" loc="87:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x7fd15d899708" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd15d899498" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x7fd15d897c08" loc="92:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd15d896a58" loc="102:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x7fd15d89cdb0" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x7fd15d89cb40" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x7fd15d899de0" loc="82:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x7fd15d878af8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fd15d878af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd15d873030" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd15d88a680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd15d8743b0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd15d88a680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd15d8746e0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd15d874a10" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15d874d68" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd15d86e618" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd15d86d998" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd15d86dcc8" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd15d86e020" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15d86e378" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15d872d20" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd15d88a680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd15d8720c8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd15d88a680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd15d8723f8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd15d872728" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15d872a80" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd15d870a98" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd15d871df8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd15d870170" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd15f7e5b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd15d8704a0" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd15d8707f8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fd15d7fc910" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fd15d7badb8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fd15d7b94c0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fd15d7b74c8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd15d7b7258" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fd15d7ba6f8" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fd15d7b5b68" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fd15d7b0700" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fd15d7b34d8" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fd15d7b3268" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd15d7aee18" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fd15d7bb8f0" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fd15d7bb680" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fd15d7b54a0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fd15d7b5230" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fd15d7b3d10" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fd15d7b7ba0" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd15d7b2c50" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fd15d7b9ba8" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd15d7b0020" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd15d7b1d00" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd15d7ae750" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd15d7ae4e0" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fd15d7b24f8" loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fd15d7ba020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fd15d7b64b0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd15d7b6240" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fd15d7b16c0" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd15d7b1450" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fd15d7b0e28" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fd15d7b6b78" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd15ee579b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mag" loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
      <documentation loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function command="" provided="0" name="gainAdjustY" ref="0x7fd15d6da108" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd15d6dbe60" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustYDone" ref="0x7fd15d6d93b8" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd15d6d9148" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustXDone" ref="0x7fd15d6daa38" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd15d6da7c8" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjustX" ref="0x7fd15d6db7a0" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd15ee4c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd15d6db530" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd15f7e5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
