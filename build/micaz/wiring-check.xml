<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16712830"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac167841d8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac168116e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac168e2570"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16926980"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16962520"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac169dbcc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16a367f0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac178d0c28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17954628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17972080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17990198"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17afa080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17bf4ad8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17cca808"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac182e73c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16c6e620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17f2e438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac18394020"/></to>
    </wire>
    <wire loc="45:TestFtspAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac186a3628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac186a3628"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac1857e910"/></to>
    </wire>
    <wire loc="46:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac186a3020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac18859940"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac18859940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac18857e20"/></to>
    </wire>
    <wire loc="50:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac176daa28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac18859940"/></to>
    </wire>
    <wire loc="53:TestFtspAppC.nc">
      <from><interface-ref name="Check" scoped="" ref="0x7fac176ed900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17101ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17101ae8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:TestFtspAppC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac176e8aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17101ae8"/></to>
    </wire>
    <wire loc="55:TestFtspAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fac176d4890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac18462818"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac18462818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac184353a0"/></to>
    </wire>
    <wire loc="56:TestFtspAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac176e2a58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac18460928"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:TestFtspAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac176e1080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac184617a8"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:TestFtspAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac176e1c78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac184570c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac184570c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac1785d8c8"/></to>
    </wire>
    <wire loc="59:TestFtspAppC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac176e08f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac1843ba98"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac1843ba98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac18420128"/></to>
    </wire>
    <wire loc="60:TestFtspAppC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac176dd020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b5f020"/></to>
    </wire>
    <wire loc="61:TestFtspAppC.nc">
      <from><interface-ref name="PhotoRead" scoped="" ref="0x7fac176d9228"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x7fac1710c898"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Light" scoped="" ref="0x7fac1710c898"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a7e8d8"/></to>
    </wire>
    <wire loc="62:TestFtspAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fac176d7978"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7fac1710d228"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x7fac1710d228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a7cd08"/></to>
    </wire>
    <wire loc="63:TestFtspAppC.nc">
      <from><interface-ref name="MicRead" scoped="" ref="0x7fac176d5210"/></from>
      <to><interface-ref name="Microphone" scoped="" ref="0x7fac1710a020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Microphone" scoped="" ref="0x7fac1710a020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a781c8"/></to>
    </wire>
    <wire loc="67:TestFtspAppC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7fac176f26a8"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7fac18699298"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x7fac18699298"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x7fac1857d848"/></to>
    </wire>
    <wire loc="68:TestFtspAppC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac176e3aa0"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac18693e00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac18693e00"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac1857a748"/></to>
    </wire>
    <wire loc="69:TestFtspAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac176df5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc2c38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fac186b1490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fac1895cbe8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fac1895cbe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fac1889ec00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fac186b1e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac1885ccc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac1885ccc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac1884d4f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac186b0560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fac188559a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17616d40"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fac188559a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac18178190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac18850b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac186d07e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fac1884c398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac186d01b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fac1884db90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17d9f020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fac1884db90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fac1884fa08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fac1884fa08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fac18843428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fac18847108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fac188559a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fac1883c5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fac188311a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fac188311a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac187ae430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fac188427f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fac18847108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fac187ffc78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac1871d970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fac188197e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac18785020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac18785020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f81100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fac1880e7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac18774d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac18774d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f14100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fac188054d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac187655b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac187655b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16eab100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fac1882f4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac187ac740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac187ac740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170a7020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fac188071a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac187672a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac187672a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16eb1100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fac1882d7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac187a4930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac187a4930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac17052180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fac18822968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac18793740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac18793740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fe5100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fac18816c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac18781430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac18781430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f78100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fac1880bc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac18770120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac18770120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f0b100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fac18835c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac187b1020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac187b1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170c0020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fac1882ac78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac187a1d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac187a1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac17049100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fac1881fe00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac1878fbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac1878fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fdc100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fac188121a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac1877e8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac1877e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f6f100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fac18801968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac18762a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac18762a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16ea2100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fac187fb7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac1870e020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fac188104d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac18776a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac18776a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f1a100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac187ae430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170ad020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fac18826348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac1879d120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac1879d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac17040100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fac187fd4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac18718ab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fac18824658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac18795500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac18795500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16feb180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fac18818968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac18783120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac18783120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f7e100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fac1880d968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac18773e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac18773e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f11100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fac18804658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac18764740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac18764740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16ea8100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fac1882e658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac187ab8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac187ab8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170a4020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fac1882c968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac187a3a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac187a3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac1704f100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fac18821af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac187928c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac187928c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fe2100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fac18815e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac187805b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac187805b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f75100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fac1880ae00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac1876f2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac1876f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f08100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fac18834e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac187b0120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac187b0120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170bd020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fac18829e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac187a0e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac187a0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac17046100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fac1881c020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac1878ed60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac1878ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fd9100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fac18800af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac18761bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac18761bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16e9f100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fac1881a348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac18787e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac18787e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f84180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fac1880f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac18775bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac18775bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f17100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fac18806348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac18766430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac18766430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16eae100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fac187fa968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac18709180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fac18830348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac187ad5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac187ad5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170aa020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fac188254d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac1879c2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac1879c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac1703d100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fac18808020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac187681e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac187681e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16eb4180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fac188237e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fac187945b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fac187945b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fe8100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fac18817af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac187822a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac187822a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f7b100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fac1880caf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac18771020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac18771020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f0e100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fac188037e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac187638c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac187638c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16ea5100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fac18846ab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac187b3dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac187b3dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170c3020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fac1882baf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fac187a2bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fac187a2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac1704c100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fac18820c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fac18791a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fac18791a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fdf100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fac18813020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fac1877f740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fac1877f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f72100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fac187fc658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac18714c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fac18811348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fac18777930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fac18777930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16f1d180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fac1881b1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fac1878de18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fac1878de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac16fd6100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fac18832020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fac187af2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fac187af2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac170ba020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fac18827100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fac1879e020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fac1879e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac17043100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac1889db08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fac1889a020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fac18952dd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac1887b7b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac1827a790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncMode" scoped="" ref="0x7fac18690ca8"/></from>
      <to><interface-ref name="TimeSyncMode" scoped="" ref="0x7fac18579700"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fac1868d9d8"/></from>
      <to><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fac18577020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fac1869e438"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac1857d020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac185777a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac186a3020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fac18577d78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac185626f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac185626f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac18518b80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac18576a20"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18522610"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac185725e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac1855f7a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncPacket" scoped="" ref="0x7fac1856bda8"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac1851e5c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac1851e5c0"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac18505020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fac185685c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac1772b8c8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fac1772b8c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac17af3020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac18572c88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17710420"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17710420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac1856dd00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac17996b98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac17996b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac1798fa08"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac1856c470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17707390"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="sendMsg" scoped="" ref="0x7fac185675e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="processMsg" scoped="" ref="0x7fac18567d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac18518b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac18462818"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac18505020"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac184f3e30"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac18553740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac18516df0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac18516df0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac184f8b50"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18522610"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18509020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18509020"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac184fb020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac1855e348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac18516818"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac18516818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac184ef5e8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18536418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18513af8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18513af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1844cac0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac1853c260"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b63060"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac1855f7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac18517c38"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac18517c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac184f1a58"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac1853ede0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac185131a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac185131a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18456c78"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18529498"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18510020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18510020"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18501918"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac18543e08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac18515a30"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac18515a30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac184f78e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac185254f8"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac1850c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac1850c020"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac184f5368"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac1852d130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1844cac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18421668"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18456c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18422658"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac184e2320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac17737080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac17737080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac16adf518"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7fac184eece0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac17736888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac17736888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac16adee20"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fac184ee020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac17737c38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac17737c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac16ade268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac184e1510"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac184dd478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac184d1850"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b6aac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b6aac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b5cac8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac1772e6b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac18127d70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac18127d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac18101878"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac184d8668"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac177304a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac184d7870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac1772b8c8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac184d0898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac184e3358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac17758348"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7fac184e39d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac17757020"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac184353a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac178c5dc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac18444b48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac1785b630"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fac18437658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fac1785cae8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac184617a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac17860020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac1845e498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac1785fd10"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac1844fe18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac184237e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac184237e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18421668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac178c5318"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac18460928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac1785f1c8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18422658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac17b733b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac18420128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac178b12d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac1845ea88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac1785e340"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac1844bca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac18421020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac18421020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac17b726b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fac17853b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac184334f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac1785a528"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac184254c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fac184254c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac1792adb8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac17858358"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac184231d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fac184231d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac17929ae8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac17854020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac17d0f2b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17858970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b662e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac178577a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b65b60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac17856140"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac1839daf8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac1839daf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac18392328"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fac17854c78"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac1841b678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac1841b678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac18416948"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac17852740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac178c5dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fac178c2d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac17b726b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac17b64630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac178b12d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac178ac128"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fac1792adb8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac1791f490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac178c5318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac178be170"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fac1842e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac1792a748"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac1792a748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fac17920dc8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac17b733b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac17b65210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac184334f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17959e20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17959e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17921428"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fac18424330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac1792ba40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac1792ba40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fac17920118"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fac1842e6a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fac179281a8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fac179281a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fac1791e808"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fac17929ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac1791e188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac178c2d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac1841f770"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac1841f770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac18417140"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac17927670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac1797ad08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac1797ad08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac17973438"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac17977a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac178b4578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac178b4578"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac178af4c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac178b0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac178c6080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac178c6080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac178c3838"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac178c3838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac1841c2d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac1841c2d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac18417be0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac17927020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac178c6c80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac178c6c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac178c2668"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac178c2668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac1795b750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac1795b750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac17957958"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac17958560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac1841b020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac1841b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac17bf6de8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac17bf6de8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac17bf02f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac18415798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac183ade00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac183ade00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac18394650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fac1840da78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fac183a88b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fac183a88b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fac18390080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac18413ce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac17cf1c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac18413ce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac17bf9b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fac17bf9b40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac17bf1148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fac17cf1c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac17ccae48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac184034b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac17cee480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac17cee480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac17cc76d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fac1840c208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac17ced140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac17ced140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac17cc64b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac18402de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac18400020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac1840a020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac17996b98"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fac183f5540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17998338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17998338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f32790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac1840a7b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fac183f1b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fac183f2cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fac183f4e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fac18397d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fac1838f4d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fac1838c060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac182e7d38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac182e7d38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac182e03b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac18382020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac18099638"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac18099638"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fac1882d7e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fac183811b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fac18096ae0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fac18096ae0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fac1882f4d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fac18380378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fac18094df0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fac18094df0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7fac18830348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fac1837ab78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fac1808a020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fac1808a020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fac17fee420"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac183673b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17d7e280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17d7e280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac18368518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fac17d7ca50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac17d7ca50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac18368bf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d7acd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d7acd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac1836aca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d7dde8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d7dde8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac1836a3c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d79368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d79368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac18370120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d71838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d71838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac18370990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d6c7c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d6c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac1836f230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d6b020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d6b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac1836fab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d75dd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d75dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac1836d3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d745c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d745c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac1837da60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fac17d677c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac17d677c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac1837d128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d67020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d67020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac1836dc48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d72c90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d72c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac1836c530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fac17d74d60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac17d74d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac1836cda0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d73cc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d73cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fac18366e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17d56a48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17d56a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fac18366140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17d331a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17d331a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac183751b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac17d0f2b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac1838b7f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac17d11d10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fac1835b3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fac1835c598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac182e73c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac1809d438"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac1809d438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac180a13a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac182e03b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac16d621a8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac16d621a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac16d563b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fac16d50860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac16d5c670"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac16d5c670"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac16d479d8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac16d53648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac18127d70"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fac16d41a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac182c9020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac182c9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1821f490"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fac16d3ba80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac182a7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fac182bb0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18219568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fac182abb68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac18218ca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fac182a7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fac18213540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fac182a7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fac1820f8e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fac182a7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fac1820cb88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fac18207020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18290950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18290950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fac1827f558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fac18286470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fac18278020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fac18295980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac1827d670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac1829ed90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac18284400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac181788b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac182c9020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fac180e6b10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac18125ad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac18125ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac1811da98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac1810bb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac182c9020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fac180987d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fac188254d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fac18097960"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fac1880bc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fac1809a428"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fac18813020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fac18095c58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fac18816c78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fac180853c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac18083180"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac1808abe8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac1806d9a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7fac18083d38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac182abb68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1805a480"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fac18050518"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fac18050518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac17fff970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7fac17fed020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fac1809a428"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fac18055518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac180147a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fac18052518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac18007cd8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fac1804f518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac17ffa6a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fac18054518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac1800f3e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fac18051518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac180039d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fac18058550"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac1802aa70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fac18053518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fac1800b020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac18017908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fac18048208"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac180135f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fac18048940"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac1800e2e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fac1804a0a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac1800bde0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fac1804a7e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac18006b10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fac18049020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac18002908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fac18049758"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac17ffe780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fac18047020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fac17ff95f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fac18047758"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7fac17feb8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac17d7c438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d6e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac17d6c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d627c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17d647c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d7a6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d657c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac17d69020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d7ee78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fa7de8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d78020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac17d78638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d78d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d64020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d73528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d62020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17d63020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac17d697c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d65020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d6b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d61020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17d7d7d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac17d75638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d724f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d6e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d773a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac17d75020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d79980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d687c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac17d637c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d68020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac17d7a0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac17d6a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d6a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac17d779b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d600a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17fa3e50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa0040"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa0d40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fa4c10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17f9fa98"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fac17f9a838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f37978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17f37978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f32790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac17f9e1e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17dcb020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17dcb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17ddd870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac17f9dd08"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac17dcbc18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac17dcbc18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac17f12a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f9a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac17dca2a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac17dca2a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f08cc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac17f99730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fac17f8e5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17f32790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f2d020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f08cc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f03020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac17f12a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac17f05d80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17dcc960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17f12400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17f12400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17f057a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fac17dda700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17f0e9f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fac17dd84a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fac1882d7e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fac17f081f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fac17f04428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17f0e9f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17f03c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7fac17ee5208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17de5200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17de5200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac16c6ca28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17ee15d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17de4760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17de4760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16c69020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fac17f00020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fac17e97020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fac17e97020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fac17e94dc8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fac17ee1d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fac1887c240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fac17ec2b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fac17e87350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fac1887c240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fac17e8ac70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fac1882d7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fac17e8ede0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fac1882c968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fac17e89020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fac1882baf0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fac17e88190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fac1882ac78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17de4020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16c6a820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16c698c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17de3020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac16c680a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fac16c6ebf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac16c68b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17d9f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17dc2670"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fac17dc03b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fac17dc3b08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fac17dc3b08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fac18834e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fac17dbf648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fac17da2ca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fac17da2ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fac18835c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fac17dbe7d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fac17da1e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fac17da1e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fac18846ab0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d497c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac17d54cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d4d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d472e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac17d47a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d3b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17d3e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d52020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d3f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac17d4c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d4b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac17d44a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d462e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d55740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d51900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac17d4f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d4f738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d3fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d52c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d4b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d4c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d546b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d3da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17d3ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac17d422e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d40a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d452e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d3ba88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17d540a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac17d4d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d49020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d46a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d482e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac17d53368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d48a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d4fd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac17d4e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac17d402e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d41a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d512e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d412e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac17d3d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d42a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac17d53980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac17d442e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d52638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d45a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac17d4e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d39020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d27c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac17d313a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d2bdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d257c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac17d24020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d197c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17d1b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d30638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d1d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac17d29d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d28cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac17d20020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d247c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d33da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d2d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac17d2d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d2dd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d1b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d2e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d28528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d295c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d32d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d19020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17d1a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac17d207c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d1d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d227c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d18020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17d32748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac17d2b638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d274f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d22020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d26838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac17d319b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d25020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d2c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac17d2b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac17d1e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d1e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d2e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d1f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac17d1a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d1f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac17d30020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac17d217c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d30c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d21020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac17d2c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d170a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac17ceccb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac17cc5428"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fac17ceb458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fac17cc5b70"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fac17cc4648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac182e7d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fac17cb9500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fac1809a428"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac17cb8800"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac18099638"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fac17cb7988"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fac18095c58"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fac17cba9a8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fac180853c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac17cb6b58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17c1fcb8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17c1fcb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17cb5960"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17c1e948"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17c1e948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17cb21b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fac17c1d2e8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17c1d2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac17cb2880"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fac17c1cc50"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac17c1cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac17cb1020"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fac17c1b2e8"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac17c1b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17cb1710"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17c1ac50"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17c1ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac17cb3938"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fac17c14a88"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac17c14a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac17cb4390"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fac17c02020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac17c02020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17cb30c8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17c08470"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17c08470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17cb1e10"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17c152e8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17c152e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17cae020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17c11c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17c11c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17cae8a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17c10470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17c10470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac17caf8f8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fac17c17678"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac17c17678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac17cac208"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fac17c06c10"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac17c06c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17cad130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fac17c07470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17c07470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17cad960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fac17c07c10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17c07c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17ca71b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17bf64b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17bf64b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17bf1930"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17cc0628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17cbf4d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac17cbe150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17cbbd88"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b6aac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac17ca7ad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17c12a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac17c1c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17c16a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac17c10c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac17c04470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac17c15a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac17c0dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac17c0f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac17c182e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac17c18a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17c08c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17c1a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17c142e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac17c1d900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac17c0b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac17c09c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac17c0e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac17c04c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac17c162e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17c122e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac17c0fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac17c11470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac17c1c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac17c17060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac17c17c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac17c09470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac17c0ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17c1a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17c0a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac17c06470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17c0bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac17c0d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac17c1b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac17c0ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fac17bf5578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fac17bf0a48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac17bdc6a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac17bef120"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac18099638"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fac17bee378"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fac180987d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fac17bed508"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fac18097960"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac17beb720"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac1808abe8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac17bea3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac179d9db8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac179d9db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac17be9100"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fac179bec10"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac179bec10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17be8510"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac179d3638"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac179d3638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac17be9de8"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fac179d22e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac179d22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17be8c68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17be7af8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac17be45e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac17be64b0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac1839daf8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17be08c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fac179cbc10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac179cbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17bdf1e8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fac179ca470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac179ca470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac17be01c0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fac179d1060"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac179d1060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac17bdebc0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fac179be470"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac179be470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac17bdfa18"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fac179c0470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac179c0470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac17bde378"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fac179c0c10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac179c0c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17bdd538"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac179c2c10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac179c2c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac17bddd88"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fac179d7470"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac179d7470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fac17bd0cb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac17b0a720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac18127d70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac17b5a520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac17b0b528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac17b59788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac17af3020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fac17af3020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac179fac38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fac17afad78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17a070c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17afa080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17af1618"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17af1618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17a817d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fac17a015a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17a53290"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac17a4e648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fac17aee020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fac17aee020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac17a80020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac179f8e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fac17aea338"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fac17aea338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac17a7c128"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac17a7c128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac16b92020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac17a817d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac16b97600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac17a80020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac16b97da8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac16b8f168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1829ed90"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fac16b8a020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18290950"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fac16b89020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac18295980"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fac16b850a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fac18286470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fac17a4a5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fac179fc618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac179f1420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac17afad78"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac179cca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac179d6100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac179d0a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac179cac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac179d53a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac179c2470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac179cfa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac179cda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac179c6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac179c9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac179d8a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac179d3c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac179d2a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac179d3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac179cd2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac179cf2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac179d7a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac179bfc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac179c5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac179c3c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac179c8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac179d02e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac179cc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac179c9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac179cb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac179d6718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac179d1c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac179c3470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac179c4c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac179c4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac179bf470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac179c5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac179d6d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac179c6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac179d59b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac179c8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac179d1678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac179bc020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fac17994b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fac179909f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac1799adb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac17990198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac17972750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac17977a40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17971428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17974978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17974978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f32790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac179702a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac17996b98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17970a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac1795be18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac17954060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac17954d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac17958560"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac179533c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac1791d528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac17927670"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac1791c358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac17927020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac1791c970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac1791b7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1791a1c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fac178cf2a8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fac178efac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fac178c4928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac178c0d50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac178c0d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f32790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac178ace18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac178b0020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fac178abae8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17878430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac17878430"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac17f32790"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7fac178a9490"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac178765e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac178765e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac178aa968"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac17b733b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac178a44a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7fac178a29e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac16adf518"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac16ad37c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac16ade268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac177575f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac16adee20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac177562c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac17734020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac16adc430"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac16adc430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac17754968"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac177575f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac184570c0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac177562c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac1845ea88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac17754968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18456c78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac16ad2450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac177ab4f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac16ad1060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac177562c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac177ab4f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac17764920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac177636f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac17759208"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac17759208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac184617a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac177623f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac177562c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac17760a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac177575f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fac1775f780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fac1775e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac1775a248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac18462818"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac17757020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac1845e498"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac177536b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1774b170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1844cac0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac17758348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac18460928"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac1774f670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a7e8d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac174034c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelX" scoped="" ref="0x7fac171096c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a82058"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a82058"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x7fac174988a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Sounder" scoped="" ref="0x7fac17110478"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7fac1769adb8"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7fac1769adb8"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7fac17696bb8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7fac17105508"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a746c0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a746c0"/></from>
      <to><interface-ref name="MagX" scoped="" ref="0x7fac1719bc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a781c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17361e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="AccelY" scoped="" ref="0x7fac17108e60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a80498"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a80498"/></from>
      <to><interface-ref name="ReadY" scoped="" ref="0x7fac17495578"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="Vref" scoped="" ref="0x7fac17110b58"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a86bc0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a86bc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a484a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a7cd08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17375928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7fac17104b78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16a71998"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a71998"/></from>
      <to><interface-ref name="MagY" scoped="" ref="0x7fac17199918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17693448"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac17695b88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17695b88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7fac1768e500"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7fac1767d020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7fac1767d020"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7fac18822968"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fac17672ca8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac1764fd00"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7fac176683d8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7fac17666640"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7fac1767c180"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7fac18821af0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7fac17679638"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7fac1881c020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7fac1766a760"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7fac17663a30"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7fac17669490"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7fac17662760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fac17676ae0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fac1880caf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7fac1766c4f8"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7fac18817af0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7fac1767fde0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7fac188237e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7fac1767b328"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7fac18820c78"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fac1766f548"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac17648c80"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7fac17668a48"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fac17666cb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7fac1766d370"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fac18818968"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7fac176787c0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7fac1881b1a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fac17672020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac17653620"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7fac17669d00"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7fac17662dd0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fac17675c68"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fac1880bc78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7fac1767a4b0"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7fac1881fe00"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7fac1766a0f0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fac176633c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7fac1766add0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7fac176620f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fac17677958"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fac1880d968"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fac17671858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac1764b458"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7fac1766e0c8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7fac18815e00"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7fac176673c0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7fac17660490"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7fac17682b48"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7fac18824658"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fac17674df0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fac1880ae00"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac17651100"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7fac18052518"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1764e800"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7fac18051518"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1764a020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fac18050518"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac17647780"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7fac1804f518"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16a484a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16a47a28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac174a8438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16a47a28"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16a463f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac174cd680"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fac1761fa00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fac174f3428"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac174b3720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac174f09a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac174b4060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac174f56a0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac174f2b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac176120d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac176120d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac1760ab70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fac1760d9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fac17606628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1751a840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1751a840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac16a34e20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac175163c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac175f70d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac1760ba20"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac1760ba20"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac175c2c40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac17603610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac18850b98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac17513060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac1760a3b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17513d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17519dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17519dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16a323f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fac175bd0c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fac1887c240"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17519698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16a33b48"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac175189d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16a31020"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16a318c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac175163c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac16a2f0a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16a36dc8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac16a2d100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac169fc020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac17513060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac169fc740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac17513780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169fccd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17513d18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169fb908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac174fe908"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7fac174df4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7fac174932b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac169ea020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac169ea020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac169e95d8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fac1748b148"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7fac1748b148"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fac174878a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x7fac174988a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac1742dd98"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x7fac17495578"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac174262e8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17429cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1748c428"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1748c428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17465748"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac1742b628"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7fac174932b0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17422240"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1748c428"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac17425b28"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7fac17490020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7fac1748bb10"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fac17486388"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17465748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac169d84b0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17435d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17464c50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17464c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169d7940"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17434940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17463888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17463888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169d6578"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac1745fd50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac1748acd0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17486e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1746cb68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac1746cb68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x7fac17481e30"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x7fac1767b328"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x7fac1747e020"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7fac1766a760"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x7fac1747e6c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7fac1766add0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fac17471c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17464510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac169d7200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac169d6e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17462140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac169d55d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac169da328"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac169d25f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac169a1d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac1745fd50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac169a07b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac174357b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169a0d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17435d50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1699f940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17434940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fac1699e120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fac1699e8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac169e95d8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac169e9e80"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7fac17490020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac169771c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac169771c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16976778"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fac1748bb10"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16976778"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16975060"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac174034c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17383d58"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac173805e8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7fac173fb1c8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7fac173fb1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac173b5020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1737fca0"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7fac174019c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7fac174019c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac173e97c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7fac173f9020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac173a7288"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac173e97c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac16923060"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fac173fed70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac173e4910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac173e4910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac168e0cc8"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dd3b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e8c50"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e8c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169224c0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173dc020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e7888"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e7888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169210e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac173de380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac173b6270"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7fac173b4638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac173f5678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac173b3370"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1739a5e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac1739a5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7fac173ae438"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7fac17676ae0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fac173ac6c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17394aa8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac17394aa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dade8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e2dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e2dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac168dd268"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173d89d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e19d8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e19d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac168dde20"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac173dbd80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac173a8600"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7fac173a68f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac173f5678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac173a4680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1739a5e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7fac1739f5d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x7fac17682b48"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fac1739e848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17394aa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac17392060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac173f4158"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7fac173f4b68"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fac17668a48"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173ee398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1695e9a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173eead8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1695d268"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac173f5678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1695fbb8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173ed700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1695de20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1695c6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173eb020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1695ce78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16962af8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac16959020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173e8510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16923d58"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16921980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173e6140"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1691f130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16925020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac1691d2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173e2698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac168dea28"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac168dc6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173e03c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac168dce78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac168e2b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac168d9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac168a8740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac173de380"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac168a7268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac173dedb0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac168a7800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dd3b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac168a53f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173dc020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fac168a5b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fac168a4470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac16891ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac173dbd80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac16890578"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac173da850"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16890b10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dade8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1688f700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173d89d8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fac1688e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fac1688e7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fac173abd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7fac1739de00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac17392060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17392908"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac17375928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17370560"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac1736eda8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x7fac173f9020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1736c510"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x7fac173fed70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7fac16a77758"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7fac1734e2e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7fac1734e2e0"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7fac1734a828"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7fac17358bb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16848520"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16848520"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16847ac8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac173509a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac173509a0"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7fac17349be0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac17361e78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac171b6020"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac171b2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17351d20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17351d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac171c9d88"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac171b5860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x7fac17358bb0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac171c9d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac16782830"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c2800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c7268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c7268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16781dd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c13f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c7e20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c7e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1677f9d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac171c36d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac1734dcd8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17348738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac171cf020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac171cf020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x7fac173437f8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7fac1767c180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x7fac173429c8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x7fac17679638"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x7fac17341cf8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fac17674df0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x7fac1733f020"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fac1766a0f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fac17333280"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac171d5020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fac171d5020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac172f99b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fac17331d48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac173071d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac173071d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac172fa538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x7fac17330ad8"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fac1766f548"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac172fa538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac172d1140"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fac172f99b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac1729c020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fac17298c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac172dcd80"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac172dcd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1680fd80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fac17296a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac1722b700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fac17292420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fac17226318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac172d6600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac1728ce60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac172d52e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac172d9268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac172d9268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1680d268"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fac17226930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fac1721e828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fac1721e828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fac172161d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fac172232e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17707390"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fac17222908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac17707390"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac172daaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1680eaf8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac172d9e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1680de20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1680c6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac172d86d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1680ce78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fac16811cb8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac16808020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fac17214b50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fac1881a348"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fac17212e08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fac188197e0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac171c8af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16781698"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1677e3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac171c56d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1677eb68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac167847b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac1677cda0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac1674a5c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac171c36d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac16749020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac171c2268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac167495b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c2800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16748268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c13f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fac16748a08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fac167462e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16847ac8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac168463f0"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fac16a75a00"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fac1719fb00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fac1719fb00"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fac17192358"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7fac171966a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac16728c60"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac16728c60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16725220"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fac1718d060"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7fac1718d060"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7fac171883c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x7fac1719bc90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17137648"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x7fac17199918"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17131d58"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fac17192358"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fac171897e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac171336b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1718e328"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1718e328"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17148d88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac17134020"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7fac171966a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1712dca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac1718e328"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fac1712e5e8"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7fac171944c0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7fac1718da28"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fac17188dd0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17148d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac16710e20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17141800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17145268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17145268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1670e3f0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171403f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17145e20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17145e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1670c020"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac171426d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac1718ccf8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fac17180be0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac171541c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fac171541c8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fac172f99b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fac1717b828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17155468"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac17155468"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac172fa538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac17187888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac1714e0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac1714e0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagPower" scoped="" ref="0x7fac171829e8"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x7fac1767a4b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcX" scoped="" ref="0x7fac17181cc8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7fac17669d00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcY" scoped="" ref="0x7fac17180418"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7fac17669490"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <from><interface-ref name="signalAdjustDone" scoped="" ref="0x7fac17169100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17146af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1670fb48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1670c8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac171446d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac1670b0a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16712e08"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac16709100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac166d8740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac171426d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac166d7268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac17141268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac166d7800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17141800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac166d63f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171403f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fac166d6b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fac166d4470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16725220"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16725ac8"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x7fac16a72da8"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x7fac1719fb00"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="ActualY" scoped="" ref="0x7fac171944c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac166afba8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fac166afba8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac166ac180"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7fac1718da28"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac166ac180"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac166aca28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimeSyncC" loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimeSyncP" loc="37(TimeSyncC.TimeSyncP):/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <instance number="0">
        <component-ref qname="TimeSyncP"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimeSyncMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaz platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaz platform. This is a naming wrapper&#10; around the CC2420 Active Message layer that implemets timesync interface (TEP 133).&#10;&#10; @author Philip Levis&#10; @author Brano Kusy&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7fac188a1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2//tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2//tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fac17ae4110"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimerC" loc="44(TimeSyncC.TimerC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspC" loc="39:TestFtspC.nc">
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C" loc="39(TestFtspAppC.SensorMts300C):/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensorMts300C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC" loc="39(TestFtspAppC.SensorMts300C.VoltageC):/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC" loc="18(TestFtspAppC.SensorMts300C.AccelXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.AccelXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC" loc="18(TestFtspAppC.SensorMts300C.AccelYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.AccelYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.PhotoC" loc="18(TestFtspAppC.SensorMts300C.PhotoC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.TempC" loc="18(TestFtspAppC.SensorMts300C.TempC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC" loc="40(TestFtspAppC.SensorMts300C.MicC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC" loc="21(TestFtspAppC.SensorMts300C.MicC.AdcReadClientC):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC" loc="16(TestFtspAppC.SensorMts300C.MagXC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagReadP" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagConfigP" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagP" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.I2CPot" loc="43(MagConfigP.I2CPot):/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.WarmupTimer" loc="44(MagConfigP.WarmupTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter" loc="89(MagConfigP.Arbiter):/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.mag">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter.Queue" loc="42(MagConfigP.Arbiter.Queue):/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.Arbiter.Arbiter" loc="52(MagConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.PowerManager" loc="67(MagConfigP.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.PowerManager.PowerManager" loc="58(MagConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcX" loc="23(MagReadP.AdcX):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcY" loc="23(MagReadP.AdcY):/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagXC.AdcX" loc="21(TestFtspAppC.SensorMts300C.MagXC.AdcX):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC" loc="16(TestFtspAppC.SensorMts300C.MagYC):/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.SensorMts300C.MagYC.AdcY" loc="21(TestFtspAppC.SensorMts300C.MagYC.AdcY):/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestFtspAppC.MyTimer" loc="44(TestFtspAppC.MyTimer):/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fac187f7b98" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fac187f4020" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fac187f4368" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fac187e9608" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fac187e9970" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fac187e9cd8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fac187e6060" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fac18758020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fac18758388" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fac187586f0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fac18758a20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimeSyncP" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac18691c80" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
          <component-ref qname="TimeSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac18691c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fac181771f8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac181771f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fac18177548" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fac1817ca20" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fac1817ca20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fac18164198" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac18164198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fac18164498" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fac1811fe28" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fac1811fe28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fac1811c5c8" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac1811c5c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fac18100020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fac18100020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fac18100788" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fac18100788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fac18100b50" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fac18100b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fac180ff348" loc="58:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fac180ff348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fac180ff6f0" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fac180ffe80" loc="60:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fac180ffe80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fac180e1c00" loc="52:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fac180e1c00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fac180de398" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fac180de398"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fac180de760" loc="54:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fac180de760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fac180dd020" loc="55:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fac180dd020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fac180dd3c8" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fac1804c7e0" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fac1804cb48" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fac18029020" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fac18029350" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2//tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fac17e3e578" loc="83:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fac17e33510" loc="42:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac17b09110" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac17b09110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fac17ae4110" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fac17ae4110"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fac17ae4400" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fac17adb720" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fac17adb720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fac17adba10" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac17a77300" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac17a77300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac17a48698" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac17a48698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fac17a489a8" loc="46:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fac177d0348" loc="47:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fac177c9020" loc="47:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fac177c58b0" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fac177a9730" loc="45:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorMts300C" loc="39:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holders nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fac175881c8" loc="89:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fac1757e860" loc="42:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fac175625c0" loc="52:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7fac174cc1d0" loc="23:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7fac174cc1d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AccelYC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MicC" loc="40:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fac172ef5a0" loc="89:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MagXC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MagYC" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fac1885dd50" loc="58:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fac1885dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1885c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fac18859940" loc="57:/opt/tinyos-2.1.2//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fac18859940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac18859c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fac188559a0" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fac188559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac18855cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1885ccc8" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1885ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac188560a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fac18850b98" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac18850b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fac18855020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fac188551a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fac18855330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fac188554b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fac18855640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fac1884db90" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fac1884db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1884c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1884d4f0" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1884d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1884d840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fac1884c398" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fac1884c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1884c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fac18847108" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fac18847108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac18847458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fac1884fa08" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fac1884fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1884fd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fac188427f8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fac188427f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac18842b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fac1883c5f8" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fac1883c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1883c948"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1883cad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1883cc58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1883cde0"/>
        <function-ref name="get" scoped="" ref="0x7fac18842020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188421a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18842330"/>
        <function-ref name="clr" scoped="" ref="0x7fac188424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fac18843428" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fac18843428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac18843778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fac187ffc78" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fac187ffc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187fe5e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187fe770"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187fe8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187fea80"/>
        <function-ref name="get" scoped="" ref="0x7fac187fec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187fed90"/>
        <function-ref name="set" scoped="" ref="0x7fac187fd020"/>
        <function-ref name="clr" scoped="" ref="0x7fac187fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fac188197e0" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fac188197e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18819b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18819cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18819e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18818020"/>
        <function-ref name="get" scoped="" ref="0x7fac188181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18818330"/>
        <function-ref name="set" scoped="" ref="0x7fac188184b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18818640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fac1880e7e0" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fac1880e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1880eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1880ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1880ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1880d020"/>
        <function-ref name="get" scoped="" ref="0x7fac1880d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880d330"/>
        <function-ref name="set" scoped="" ref="0x7fac1880d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fac188054d0" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fac188054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18805820"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188059a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18805b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18805cb8"/>
        <function-ref name="get" scoped="" ref="0x7fac18805e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18804020"/>
        <function-ref name="set" scoped="" ref="0x7fac188041a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18804330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fac1882f4d0" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fac1882f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1882f820"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1882f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1882fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1882fcb8"/>
        <function-ref name="get" scoped="" ref="0x7fac1882fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1882e020"/>
        <function-ref name="set" scoped="" ref="0x7fac1882e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fac188071a0" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fac188071a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188074f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18807678"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18807800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18807988"/>
        <function-ref name="get" scoped="" ref="0x7fac18807b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18807c98"/>
        <function-ref name="set" scoped="" ref="0x7fac18807e20"/>
        <function-ref name="clr" scoped="" ref="0x7fac18806020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fac1882d7e0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fac1882d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1882db30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1882dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1882de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1882c020"/>
        <function-ref name="get" scoped="" ref="0x7fac1882c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1882c330"/>
        <function-ref name="set" scoped="" ref="0x7fac1882c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fac18822968" loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fac18822968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18822cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18822e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18821020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188211a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18821330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188214b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18821640"/>
        <function-ref name="clr" scoped="" ref="0x7fac188217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fac18816c78" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fac18816c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18815020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188151a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18815330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188154b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18815640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188157c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18815950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18815ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fac1880bc78" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fac1880bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1880a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1880a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1880a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1880a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1880a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac1880a950"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fac18835c78" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fac18835c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18834020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188341a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18834330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188344b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18834640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188347c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18834950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18834ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fac1882ac78" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fac1882ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18829020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188291a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18829330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188294b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18829640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188297c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18829950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18829ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fac1881fe00" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fac1881fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1881e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1881e330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1881e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1881e640"/>
        <function-ref name="get" scoped="" ref="0x7fac1881e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1881e950"/>
        <function-ref name="set" scoped="" ref="0x7fac1881ead8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1881ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fac188121a0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fac188121a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188124f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18812678"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18812800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18812988"/>
        <function-ref name="get" scoped="" ref="0x7fac18812b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18812c98"/>
        <function-ref name="set" scoped="" ref="0x7fac18812e20"/>
        <function-ref name="clr" scoped="" ref="0x7fac18811020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fac18801968" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fac18801968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18801cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18801e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18800020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188001a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18800330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188004b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18800640"/>
        <function-ref name="clr" scoped="" ref="0x7fac188007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fac187fb7e0" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fac187fb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187fbb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187fbcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187fbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187fa020"/>
        <function-ref name="get" scoped="" ref="0x7fac187fa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187fa330"/>
        <function-ref name="set" scoped="" ref="0x7fac187fa4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187fa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fac188104d0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fac188104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18810820"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188109a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18810b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18810cb8"/>
        <function-ref name="get" scoped="" ref="0x7fac18810e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880f020"/>
        <function-ref name="set" scoped="" ref="0x7fac1880f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fac188311a0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fac188311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188314f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18831678"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18831800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18831988"/>
        <function-ref name="get" scoped="" ref="0x7fac18831b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18831c98"/>
        <function-ref name="set" scoped="" ref="0x7fac18831e20"/>
        <function-ref name="clr" scoped="" ref="0x7fac18830020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fac18826348" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fac18826348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18826698"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18826820"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188269a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18826b30"/>
        <function-ref name="get" scoped="" ref="0x7fac18826cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18826e40"/>
        <function-ref name="set" scoped="" ref="0x7fac18825020"/>
        <function-ref name="clr" scoped="" ref="0x7fac188251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fac187fd4d0" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fac187fd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187fd820"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187fd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187fdb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187fdcb8"/>
        <function-ref name="get" scoped="" ref="0x7fac187fde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187fc020"/>
        <function-ref name="set" scoped="" ref="0x7fac187fc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fac18824658" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fac18824658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188249a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18824b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18824cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18824e40"/>
        <function-ref name="get" scoped="" ref="0x7fac18823020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188231a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18823330"/>
        <function-ref name="clr" scoped="" ref="0x7fac188234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fac18818968" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fac18818968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18818cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18818e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18817020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188171a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18817330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188174b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18817640"/>
        <function-ref name="clr" scoped="" ref="0x7fac188177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fac1880d968" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fac1880d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1880dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1880de40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1880c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1880c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac1880c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fac1880c640"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fac18804658" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fac18804658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188049a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18804b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18804cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18804e40"/>
        <function-ref name="get" scoped="" ref="0x7fac18803020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188031a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18803330"/>
        <function-ref name="clr" scoped="" ref="0x7fac188034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fac1882e658" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fac1882e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1882e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1882eb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1882ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1882ee40"/>
        <function-ref name="get" scoped="" ref="0x7fac1882d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1882d1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac1882d330"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fac1882c968" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fac1882c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1882ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1882ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1882b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1882b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac1882b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1882b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fac1882b640"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fac18821af0" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fac18821af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18821e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18820020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188201a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18820330"/>
        <function-ref name="get" scoped="" ref="0x7fac188204b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18820640"/>
        <function-ref name="set" scoped="" ref="0x7fac188207c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18820950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fac18815e00" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fac18815e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188141a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18814330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188144b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18814640"/>
        <function-ref name="get" scoped="" ref="0x7fac188147c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18814950"/>
        <function-ref name="set" scoped="" ref="0x7fac18814ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18814c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fac1880ae00" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fac1880ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188091a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18809330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18809640"/>
        <function-ref name="get" scoped="" ref="0x7fac188097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18809950"/>
        <function-ref name="set" scoped="" ref="0x7fac18809ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18809c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fac18834e00" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fac18834e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188331a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18833330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188334b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18833640"/>
        <function-ref name="get" scoped="" ref="0x7fac188337c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18833950"/>
        <function-ref name="set" scoped="" ref="0x7fac18833ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18833c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fac18829e00" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fac18829e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac188282e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18828470"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188285f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18828780"/>
        <function-ref name="get" scoped="" ref="0x7fac18828908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18828a90"/>
        <function-ref name="set" scoped="" ref="0x7fac18828c18"/>
        <function-ref name="clr" scoped="" ref="0x7fac18828da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fac1881c020" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fac1881c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1881c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1881c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1881c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1881c808"/>
        <function-ref name="get" scoped="" ref="0x7fac1881c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1881cb18"/>
        <function-ref name="set" scoped="" ref="0x7fac1881cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1881ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fac18800af0" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fac18800af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18800e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187ff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187ff330"/>
        <function-ref name="get" scoped="" ref="0x7fac187ff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187ff640"/>
        <function-ref name="set" scoped="" ref="0x7fac187ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fac1881a348" loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fac1881a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1881a898"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1881aa20"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1881aba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1881ad30"/>
        <function-ref name="get" scoped="" ref="0x7fac18819020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac188191a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18819330"/>
        <function-ref name="clr" scoped="" ref="0x7fac188194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fac1880f658" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fac1880f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1880f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1880fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1880fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1880fe40"/>
        <function-ref name="get" scoped="" ref="0x7fac1880e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac1880e330"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fac18806348" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fac18806348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18806698"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18806820"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188069a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18806b30"/>
        <function-ref name="get" scoped="" ref="0x7fac18806cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18806e40"/>
        <function-ref name="set" scoped="" ref="0x7fac18805020"/>
        <function-ref name="clr" scoped="" ref="0x7fac188051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fac187fa968" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fac187fa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187facb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187fae40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187f91a8"/>
        <function-ref name="get" scoped="" ref="0x7fac187f9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187f94b8"/>
        <function-ref name="set" scoped="" ref="0x7fac187f9640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fac18830348" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fac18830348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18830698"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18830820"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188309a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18830b30"/>
        <function-ref name="get" scoped="" ref="0x7fac18830cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18830e40"/>
        <function-ref name="set" scoped="" ref="0x7fac1882f020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fac188254d0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fac188254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18825820"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188259a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18825b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18825cb8"/>
        <function-ref name="get" scoped="" ref="0x7fac18825e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18824020"/>
        <function-ref name="set" scoped="" ref="0x7fac188241a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18824330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fac18808020" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fac18808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18808370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188084f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18808680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18808808"/>
        <function-ref name="get" scoped="" ref="0x7fac18808990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18808b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18808ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18808e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fac188237e0" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fac188237e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18823b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18823cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18823e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18822020"/>
        <function-ref name="get" scoped="" ref="0x7fac188221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18822330"/>
        <function-ref name="set" scoped="" ref="0x7fac188224b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18822640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fac18817af0" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fac18817af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18817e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18816020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188161a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18816330"/>
        <function-ref name="get" scoped="" ref="0x7fac188164b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18816640"/>
        <function-ref name="set" scoped="" ref="0x7fac188167c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18816950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fac1880caf0" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fac1880caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1880ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1880b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1880b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1880b330"/>
        <function-ref name="get" scoped="" ref="0x7fac1880b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1880b640"/>
        <function-ref name="set" scoped="" ref="0x7fac1880b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1880b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fac188037e0" loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fac188037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18803b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18803cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18803e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18801020"/>
        <function-ref name="get" scoped="" ref="0x7fac188011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18801330"/>
        <function-ref name="set" scoped="" ref="0x7fac188014b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18801640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fac18846ab0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fac18846ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18846e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18835020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188351a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18835330"/>
        <function-ref name="get" scoped="" ref="0x7fac188354b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18835640"/>
        <function-ref name="set" scoped="" ref="0x7fac188357c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18835950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fac1882baf0" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fac1882baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1882be40"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1882a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1882a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1882a330"/>
        <function-ref name="get" scoped="" ref="0x7fac1882a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1882a640"/>
        <function-ref name="set" scoped="" ref="0x7fac1882a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1882a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fac18820c78" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fac18820c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1881f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1881f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1881f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1881f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1881f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1881f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac1881f950"/>
        <function-ref name="clr" scoped="" ref="0x7fac1881fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fac18813020" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fac18813020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18813370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188134f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18813680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18813808"/>
        <function-ref name="get" scoped="" ref="0x7fac18813990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18813b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18813ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18813e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fac187fc658" loc="102:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fac187fc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187fc9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187fcb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187fccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187fce40"/>
        <function-ref name="get" scoped="" ref="0x7fac187fb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187fb1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac187fb330"/>
        <function-ref name="clr" scoped="" ref="0x7fac187fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fac18811348" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fac18811348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18811698"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18811820"/>
        <function-ref name="toggle" scoped="" ref="0x7fac188119a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18811b30"/>
        <function-ref name="get" scoped="" ref="0x7fac18811cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18811e40"/>
        <function-ref name="set" scoped="" ref="0x7fac18810020"/>
        <function-ref name="clr" scoped="" ref="0x7fac188101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fac1881b1a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fac1881b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1881b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1881b678"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1881b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1881b988"/>
        <function-ref name="get" scoped="" ref="0x7fac1881bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1881bc98"/>
        <function-ref name="set" scoped="" ref="0x7fac1881be20"/>
        <function-ref name="clr" scoped="" ref="0x7fac1881a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fac18832020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fac18832020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18832370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188324f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18832680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18832808"/>
        <function-ref name="get" scoped="" ref="0x7fac18832990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18832b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18832ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18832e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fac18827100" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fac18827100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18827450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac188275d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18827760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac188278e8"/>
        <function-ref name="get" scoped="" ref="0x7fac18827a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18827bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac18827d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac18826020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac187b0120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac187b0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187b0470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187b05f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187b0780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187b0908"/>
        <function-ref name="get" scoped="" ref="0x7fac187b0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187b0c18"/>
        <function-ref name="set" scoped="" ref="0x7fac187b0da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac187af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac187ad5b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac187ad5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187ad908"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187ada90"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187adc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187adda0"/>
        <function-ref name="get" scoped="" ref="0x7fac187ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187ac1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac187ac330"/>
        <function-ref name="clr" scoped="" ref="0x7fac187ac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac187b3dc0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac187b3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187b2170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187b22f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187b2480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187b2608"/>
        <function-ref name="get" scoped="" ref="0x7fac187b2790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187b2918"/>
        <function-ref name="set" scoped="" ref="0x7fac187b2aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac187b2c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac187af2a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac187af2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187af5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187af780"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187af908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187afa90"/>
        <function-ref name="get" scoped="" ref="0x7fac187afc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187afda0"/>
        <function-ref name="set" scoped="" ref="0x7fac187ae020"/>
        <function-ref name="clr" scoped="" ref="0x7fac187ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac187ac740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac187ac740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187aca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187acc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187acda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187ab020"/>
        <function-ref name="get" scoped="" ref="0x7fac187ab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187ab330"/>
        <function-ref name="set" scoped="" ref="0x7fac187ab4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187ab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac187b1020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac187b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187b1370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187b14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187b1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187b1808"/>
        <function-ref name="get" scoped="" ref="0x7fac187b1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187b1b18"/>
        <function-ref name="set" scoped="" ref="0x7fac187b1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac187b1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac187ae430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac187ae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187ae780"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187ae908"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187aea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187aec18"/>
        <function-ref name="get" scoped="" ref="0x7fac187aeda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187ad020"/>
        <function-ref name="set" scoped="" ref="0x7fac187ad1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187ad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac187ab8c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac187ab8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187abc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187abda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187aa1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac187aa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187aa4b8"/>
        <function-ref name="set" scoped="" ref="0x7fac187aa640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187aa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170c3020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170c3370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170c34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170c3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170c3808"/>
        <function-ref name="get" scoped="" ref="0x7fac170c3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170c3b18"/>
        <function-ref name="set" scoped="" ref="0x7fac170c3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170c3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170c0020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170c0370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170c04f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170c0680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170c0808"/>
        <function-ref name="get" scoped="" ref="0x7fac170c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170c0b18"/>
        <function-ref name="set" scoped="" ref="0x7fac170c0ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170c0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170bd020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170bd370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170bd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170bd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170bd808"/>
        <function-ref name="get" scoped="" ref="0x7fac170bd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170bdb18"/>
        <function-ref name="set" scoped="" ref="0x7fac170bdca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170bde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170ba020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170ba370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170ba4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170ba680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170ba808"/>
        <function-ref name="get" scoped="" ref="0x7fac170ba990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170bab18"/>
        <function-ref name="set" scoped="" ref="0x7fac170baca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170bae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170ad020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170ad370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170ad4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170ad680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170ad808"/>
        <function-ref name="get" scoped="" ref="0x7fac170ad990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170adb18"/>
        <function-ref name="set" scoped="" ref="0x7fac170adca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170ade28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170aa020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170aa370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170aa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170aa680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170aa808"/>
        <function-ref name="get" scoped="" ref="0x7fac170aa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170aab18"/>
        <function-ref name="set" scoped="" ref="0x7fac170aaca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170aae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170a7020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170a7370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170a74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170a7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170a7808"/>
        <function-ref name="get" scoped="" ref="0x7fac170a7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170a7b18"/>
        <function-ref name="set" scoped="" ref="0x7fac170a7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170a7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac170a4020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac170a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170a4370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170a44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170a4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170a4808"/>
        <function-ref name="get" scoped="" ref="0x7fac170a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac170a4b18"/>
        <function-ref name="set" scoped="" ref="0x7fac170a4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac170a4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac187a2bd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac187a2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187a11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187a1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187a14b8"/>
        <function-ref name="get" scoped="" ref="0x7fac187a1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187a17c8"/>
        <function-ref name="set" scoped="" ref="0x7fac187a1950"/>
        <function-ref name="clr" scoped="" ref="0x7fac187a1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac1879e020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac1879e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1879e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1879e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1879e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1879e808"/>
        <function-ref name="get" scoped="" ref="0x7fac1879e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1879eb18"/>
        <function-ref name="set" scoped="" ref="0x7fac1879eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1879ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac187a4930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac187a4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187a4c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187a4e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187a31a8"/>
        <function-ref name="get" scoped="" ref="0x7fac187a3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187a34b8"/>
        <function-ref name="set" scoped="" ref="0x7fac187a3640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac187a1d60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac187a1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187a00d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187a0260"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187a03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187a0570"/>
        <function-ref name="get" scoped="" ref="0x7fac187a06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187a0880"/>
        <function-ref name="set" scoped="" ref="0x7fac187a0a08"/>
        <function-ref name="clr" scoped="" ref="0x7fac187a0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac1879d120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac1879d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1879d470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1879d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1879d780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1879d908"/>
        <function-ref name="get" scoped="" ref="0x7fac1879da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1879dc18"/>
        <function-ref name="set" scoped="" ref="0x7fac1879dda0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1879c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac187a3a50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac187a3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187a3da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187a21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187a2330"/>
        <function-ref name="get" scoped="" ref="0x7fac187a24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187a2640"/>
        <function-ref name="set" scoped="" ref="0x7fac187a27c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac187a2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac187a0e18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac187a0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1879f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1879f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1879f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1879f640"/>
        <function-ref name="get" scoped="" ref="0x7fac1879f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1879f950"/>
        <function-ref name="set" scoped="" ref="0x7fac1879fad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1879fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac1879c2a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac1879c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1879c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1879c780"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1879c908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1879ca90"/>
        <function-ref name="get" scoped="" ref="0x7fac1879cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1879cda0"/>
        <function-ref name="set" scoped="" ref="0x7fac1879a020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1879a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac17052180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac17052180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac170524d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17052658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac170527e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17052968"/>
        <function-ref name="get" scoped="" ref="0x7fac17052af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17052c78"/>
        <function-ref name="set" scoped="" ref="0x7fac17052e00"/>
        <function-ref name="clr" scoped="" ref="0x7fac17051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1704f100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1704f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1704f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1704f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1704f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1704f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac1704fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1704fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac1704fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac1704e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1704c100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1704c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1704c450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1704c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1704c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1704c8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac1704ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1704cbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac1704cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac1704b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac17049100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac17049100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17049450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170495d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17049760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170498e8"/>
        <function-ref name="get" scoped="" ref="0x7fac17049a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17049bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac17049d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac17048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac17046100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac17046100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17046450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170465d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17046760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170468e8"/>
        <function-ref name="get" scoped="" ref="0x7fac17046a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17046bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac17046d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac17045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac17043100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac17043100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17043450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170435d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17043760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170438e8"/>
        <function-ref name="get" scoped="" ref="0x7fac17043a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17043bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac17043d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac17042020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac17040100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac17040100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17040450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac170405d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17040760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac170408e8"/>
        <function-ref name="get" scoped="" ref="0x7fac17040a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17040bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac17040d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac1703f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1703d100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1703d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1703d450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1703d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1703d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1703d8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac1703da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1703dbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac1703dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac1703b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac18793740" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac18793740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18793a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18793c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18793da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18792020"/>
        <function-ref name="get" scoped="" ref="0x7fac187921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18792330"/>
        <function-ref name="set" scoped="" ref="0x7fac187924b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18792640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac1878fbd8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac1878fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1878e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1878e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1878e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1878e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1878e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1878e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac1878e950"/>
        <function-ref name="clr" scoped="" ref="0x7fac1878ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac18795500" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac18795500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18795850"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187959d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18795b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18795ce8"/>
        <function-ref name="get" scoped="" ref="0x7fac18795e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18794020"/>
        <function-ref name="set" scoped="" ref="0x7fac187941a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18794330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac187928c8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac187928c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18792c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18792da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18791020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187911a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18791330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187914b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18791640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac1878ed60" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac1878ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1878d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1878d260"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1878d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1878d570"/>
        <function-ref name="get" scoped="" ref="0x7fac1878d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1878d880"/>
        <function-ref name="set" scoped="" ref="0x7fac1878da08"/>
        <function-ref name="clr" scoped="" ref="0x7fac1878db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac187945b8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac187945b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18794908"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18794a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18794c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18794da0"/>
        <function-ref name="get" scoped="" ref="0x7fac18793020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187931a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18793330"/>
        <function-ref name="clr" scoped="" ref="0x7fac187934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac18791a50" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac18791a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18791da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1878f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1878f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1878f330"/>
        <function-ref name="get" scoped="" ref="0x7fac1878f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1878f640"/>
        <function-ref name="set" scoped="" ref="0x7fac1878f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1878f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac1878de18" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac1878de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1878c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1878c330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1878c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1878c640"/>
        <function-ref name="get" scoped="" ref="0x7fac1878c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1878c950"/>
        <function-ref name="set" scoped="" ref="0x7fac1878cad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1878cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16feb180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16feb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16feb4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16feb658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16feb7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16feb968"/>
        <function-ref name="get" scoped="" ref="0x7fac16febaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16febc78"/>
        <function-ref name="set" scoped="" ref="0x7fac16febe00"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fe8100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fe8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fe8450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fe85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fe8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fe88e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fe8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fe8bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fe8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fe7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fe5100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fe5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fe5450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fe55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fe5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fe58e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fe5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fe5bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fe5d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fe2100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fe2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fe2450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fe25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fe2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fe28e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fe2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fe2bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fe2d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fdf100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fdf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fdf450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fdf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fdf760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fdf8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fdfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fdfbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fdfd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fdc100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fdc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fdc450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fdc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fdc760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fdc8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fdca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fdcbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fdcd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fdb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fd9100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fd9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fd9450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fd95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fd9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fd98e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fd9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fd9bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fd9d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16fd6100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16fd6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16fd6450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16fd65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16fd6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16fd68e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16fd6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16fd6bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16fd6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16fd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac18783120" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac18783120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18783470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187835f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18783780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18783908"/>
        <function-ref name="get" scoped="" ref="0x7fac18783a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18783c18"/>
        <function-ref name="set" scoped="" ref="0x7fac18783da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac187805b8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac187805b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18780908"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18780a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18780c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18780da0"/>
        <function-ref name="get" scoped="" ref="0x7fac1877f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1877f1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac1877f330"/>
        <function-ref name="clr" scoped="" ref="0x7fac1877f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac18787e40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac18787e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187861c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18786348"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187864d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18786658"/>
        <function-ref name="get" scoped="" ref="0x7fac187867e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18786968"/>
        <function-ref name="set" scoped="" ref="0x7fac18786af0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18786c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac187822a8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac187822a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187825f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18782780"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18782908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18782a90"/>
        <function-ref name="get" scoped="" ref="0x7fac18782c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18782da0"/>
        <function-ref name="set" scoped="" ref="0x7fac18781020"/>
        <function-ref name="clr" scoped="" ref="0x7fac187811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac1877f740" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac1877f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1877fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1877fc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1877fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1877e020"/>
        <function-ref name="get" scoped="" ref="0x7fac1877e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1877e330"/>
        <function-ref name="set" scoped="" ref="0x7fac1877e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1877e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac18785020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac18785020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18785370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187854f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18785680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18785808"/>
        <function-ref name="get" scoped="" ref="0x7fac18785990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18785b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18785ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18785e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac18781430" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac18781430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18781780"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18781908"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18781a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18781c18"/>
        <function-ref name="get" scoped="" ref="0x7fac18781da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18780020"/>
        <function-ref name="set" scoped="" ref="0x7fac187801a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18780330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac1877e8c8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac1877e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1877ec18"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1877eda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1877d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1877d1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac1877d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1877d4b8"/>
        <function-ref name="set" scoped="" ref="0x7fac1877d640"/>
        <function-ref name="clr" scoped="" ref="0x7fac1877d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f84180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f84180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f844d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f84658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f847e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f84968"/>
        <function-ref name="get" scoped="" ref="0x7fac16f84af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f84c78"/>
        <function-ref name="set" scoped="" ref="0x7fac16f84e00"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f81100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f81100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f81450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f815d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f81760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f818e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f81a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f81bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f81d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f7e100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f7e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f7e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f7e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f7e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f7ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f7ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f7ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f7b100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f7b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f7b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f7b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f7b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f7b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f7ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f7bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f7bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f78100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f78450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f785d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f78760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f788e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f78a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f78bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f78d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f75100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f75100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f75450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f755d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f75760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f758e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f75a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f75bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f75d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f72100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f72450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f725d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f72760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f728e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f72a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f72bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f72d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f6f100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f6f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f6f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f6f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f6f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f6f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f6fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f6fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f6fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac18775bd8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac18775bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18774020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187741a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18774330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187744b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18774640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187747c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18774950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18774ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac18771020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac18771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18771370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187714f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18771680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18771808"/>
        <function-ref name="get" scoped="" ref="0x7fac18771990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18771b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18771ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18771e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac18777930" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac18777930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18777c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18777e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18776020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187761a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18776330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187764b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18776640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac18774d60" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac18774d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187730d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18773260"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187733e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18773570"/>
        <function-ref name="get" scoped="" ref="0x7fac187736f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18773880"/>
        <function-ref name="set" scoped="" ref="0x7fac18773a08"/>
        <function-ref name="clr" scoped="" ref="0x7fac18773b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac18770120" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac18770120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18770470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187705f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18770780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18770908"/>
        <function-ref name="get" scoped="" ref="0x7fac18770a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18770c18"/>
        <function-ref name="set" scoped="" ref="0x7fac18770da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1876f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac18776a50" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac18776a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18776da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18775020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187751a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18775330"/>
        <function-ref name="get" scoped="" ref="0x7fac187754b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18775640"/>
        <function-ref name="set" scoped="" ref="0x7fac187757c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18775950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac18773e18" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac18773e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187721a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18772330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187724b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18772640"/>
        <function-ref name="get" scoped="" ref="0x7fac187727c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18772950"/>
        <function-ref name="set" scoped="" ref="0x7fac18772ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18772c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac1876f2a8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac1876f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1876f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1876f780"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1876f908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1876fa90"/>
        <function-ref name="get" scoped="" ref="0x7fac1876fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1876fda0"/>
        <function-ref name="set" scoped="" ref="0x7fac1876e020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1876e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f1d180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f1d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f1d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f1d658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f1d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f1d968"/>
        <function-ref name="get" scoped="" ref="0x7fac16f1daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f1dc78"/>
        <function-ref name="set" scoped="" ref="0x7fac16f1de00"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f1a100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f1a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f1a450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f1a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f1a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f1a8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f1aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f1abf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f1ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f17100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f17100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f17450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f175d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f17760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f178e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f17a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f17bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f17d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f14100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f14100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f14450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f145d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f14760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f148e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f14a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f14bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f14d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f11100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f11100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f11450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f115d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f11760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f118e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f11a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f11bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f11d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f0e100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f0e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f0e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f0e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f0e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f0ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f0ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f0ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f0b100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f0b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f0b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f0b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f0b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f0ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f0bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f0bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16f08100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16f08100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16f08450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16f085d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16f08760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16f088e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16f08a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16f08bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16f08d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16f07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fac18766430" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fac18766430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18766780"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18766908"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18766a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18766c18"/>
        <function-ref name="get" scoped="" ref="0x7fac18766da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18765020"/>
        <function-ref name="set" scoped="" ref="0x7fac187651a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18765330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fac187638c8" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fac187638c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18763c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18763da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18762020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187621a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18762330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187624b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18762640"/>
        <function-ref name="clr" scoped="" ref="0x7fac187627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fac187681e8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fac187681e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18768538"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187686c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18768848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187689d0"/>
        <function-ref name="get" scoped="" ref="0x7fac18768b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18768ce0"/>
        <function-ref name="set" scoped="" ref="0x7fac18768e68"/>
        <function-ref name="clr" scoped="" ref="0x7fac18767020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fac187655b8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fac187655b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18765908"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18765a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18765c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18765da0"/>
        <function-ref name="get" scoped="" ref="0x7fac18764020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187641a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18764330"/>
        <function-ref name="clr" scoped="" ref="0x7fac187644b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fac18762a50" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fac18762a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18762da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18761020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187611a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18761330"/>
        <function-ref name="get" scoped="" ref="0x7fac187614b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18761640"/>
        <function-ref name="set" scoped="" ref="0x7fac187617c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18761950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fac187672a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fac187672a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187675f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18767780"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18767908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18767a90"/>
        <function-ref name="get" scoped="" ref="0x7fac18767c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18767da0"/>
        <function-ref name="set" scoped="" ref="0x7fac18766020"/>
        <function-ref name="clr" scoped="" ref="0x7fac187661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fac18764740" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fac18764740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18764a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18764c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18764da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18763020"/>
        <function-ref name="get" scoped="" ref="0x7fac187631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18763330"/>
        <function-ref name="set" scoped="" ref="0x7fac187634b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18763640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fac18761bd8" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fac18761bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1875f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1875f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1875f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1875f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1875f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1875f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac1875f950"/>
        <function-ref name="clr" scoped="" ref="0x7fac1875fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16eb4180" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16eb4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16eb44d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16eb4658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16eb47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16eb4968"/>
        <function-ref name="get" scoped="" ref="0x7fac16eb4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16eb4c78"/>
        <function-ref name="set" scoped="" ref="0x7fac16eb4e00"/>
        <function-ref name="clr" scoped="" ref="0x7fac16eb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16eb1100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16eb1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16eb1450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16eb15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16eb1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16eb18e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16eb1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16eb1bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16eb1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16eae100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16eae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16eae450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16eae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16eae760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16eae8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16eaea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16eaebf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16eaed80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16ead020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16eab100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16eab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16eab450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16eab5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16eab760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16eab8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16eaba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16eabbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16eabd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16eaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16ea8100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16ea8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16ea8450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16ea85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16ea8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16ea88e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16ea8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16ea8bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16ea8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16ea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16ea5100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16ea5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16ea5450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16ea55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16ea5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16ea58e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16ea5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16ea5bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16ea5d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16ea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16ea2100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16ea2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16ea2450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16ea25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16ea2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16ea28e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16ea2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16ea2bf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16ea2d80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac16e9f100" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac16e9f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac16e9f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fac16e9f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac16e9f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac16e9f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fac16e9fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac16e9fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fac16e9fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fac16e9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18759ac0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18759ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18759e10"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18743020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18743330"/>
        <function-ref name="get" scoped="" ref="0x7fac187434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18743640"/>
        <function-ref name="set" scoped="" ref="0x7fac187437c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18743950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18740db8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18740db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1873e170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1873e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1873e480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1873e608"/>
        <function-ref name="get" scoped="" ref="0x7fac1873e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1873e918"/>
        <function-ref name="set" scoped="" ref="0x7fac1873eaa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1873ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1873a3e0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1873a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1873a730"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1873a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1873aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1873abc8"/>
        <function-ref name="get" scoped="" ref="0x7fac1873ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18739020"/>
        <function-ref name="set" scoped="" ref="0x7fac187391a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18739330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac187357e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac187357e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18735b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18735cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18735e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18734020"/>
        <function-ref name="get" scoped="" ref="0x7fac187341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18734330"/>
        <function-ref name="set" scoped="" ref="0x7fac187344b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18734640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18731c38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18731c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18730020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187301a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18730330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187304b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18730640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187307c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18730950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18730ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1872b020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1872b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1872b370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1872b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1872b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1872b808"/>
        <function-ref name="get" scoped="" ref="0x7fac1872b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1872bb18"/>
        <function-ref name="set" scoped="" ref="0x7fac1872bca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1872be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18726480" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18726480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187267d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18726958"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18726ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18726c68"/>
        <function-ref name="get" scoped="" ref="0x7fac18726df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18725020"/>
        <function-ref name="set" scoped="" ref="0x7fac187251a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18725330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac187227e8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac187227e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18722b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18722cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18722e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18721020"/>
        <function-ref name="get" scoped="" ref="0x7fac187211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18721330"/>
        <function-ref name="set" scoped="" ref="0x7fac187214b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18721640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1871d970" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1871d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1871dcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1871de48"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1871c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1871c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac1871c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1871c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fac1871c640"/>
        <function-ref name="clr" scoped="" ref="0x7fac1871c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18718ab0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18718ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18718e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18717020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187171a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18717330"/>
        <function-ref name="get" scoped="" ref="0x7fac187174b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18717640"/>
        <function-ref name="set" scoped="" ref="0x7fac187177c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18717950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18714c38" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18714c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18713020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac187131a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18713330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac187134b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18713640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac187137c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18713950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18713ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac1870e020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac1870e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1870e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1870e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1870e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1870e808"/>
        <function-ref name="get" scoped="" ref="0x7fac1870e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1870eb18"/>
        <function-ref name="set" scoped="" ref="0x7fac1870eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1870ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac18709180" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fac18709180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac187094d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18709658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac187097e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18709968"/>
        <function-ref name="get" scoped="" ref="0x7fac18709af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18709c78"/>
        <function-ref name="set" scoped="" ref="0x7fac18709e00"/>
        <function-ref name="clr" scoped="" ref="0x7fac18708020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac186d01b8" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac186d01b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fac1895f6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fac1895f6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac186d0508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fac186d07e8" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac186d07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fac186d0b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fac186d0cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fac186d0e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fac186cf020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fac186cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fac186b0560" loc="60:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fac186b0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac186b08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fac18857e20" loc="57:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fac18857e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac186b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fac186b1e68" loc="59:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fac186b1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac186b01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fac186b1490" loc="58:/opt/tinyos-2.1.2//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fac186b1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac186b17e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac186b1968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac186b1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fac18953728" loc="48:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fac18953728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac18953a78"/>
        <function-ref name="runTask" scoped="" ref="0x7fac18953c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fac1895cbe8" loc="47:/opt/tinyos-2.1.2//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fac1895cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1895e020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac1895e1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac1895e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fac1889db08" loc="56:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fac1889db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1889de58"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1889b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fac1889a020" loc="57:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fac1889a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fac1889a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fac1889ec00" loc="55:/opt/tinyos-2.1.2//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fac1889ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1889d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac1889d1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac1889d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fac1887b7b8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac1887b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fac1887bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fac18952dd0" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fac18952dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fac1887f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fac1887c240" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fac1887c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fac1887c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fac186a3020" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fac186a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac186a3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7fac18699298" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fac18699298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fac18699e18"/>
        <function-ref name="global2Local" scoped="" ref="0x7fac186a2d30"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fac186a2310"/>
        <function-ref name="local2Global" scoped="" ref="0x7fac186a2820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7fac18693e00" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac18693e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fac186981a8"/>
        <function-ref name="getRootID" scoped="" ref="0x7fac18698330"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fac186984b8"/>
        <function-ref name="getOffset" scoped="" ref="0x7fac18698640"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fac186987c8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fac18698950"/>
        <function-ref name="getSkew" scoped="" ref="0x7fac18698ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac186a3628" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac186a3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac186a3978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7fac18690ca8" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7fac18690ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18692020"/>
        <function-ref name="getMode" scoped="" ref="0x7fac186921a8"/>
        <function-ref name="setMode" scoped="" ref="0x7fac18692330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7fac1868d9d8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fac1868d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7fac1868dd28"/>
        <function-ref name="msg_sent" scoped="" ref="0x7fac18691020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac1869e438" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac1869e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac1869e788"/>
        <function-ref name="stop" scoped="" ref="0x7fac1869e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fac185777a0" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fac185777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac18577af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x7fac1857d848" loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fac1857d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fac1857b410"/>
        <function-ref name="global2Local" scoped="" ref="0x7fac1857a2e8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fac1857b898"/>
        <function-ref name="local2Global" scoped="" ref="0x7fac1857bda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fac185685c8" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac185685c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac18567190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fac18577d78" loc="53:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fac18577d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac185760f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac18576278"/>
        <function-ref name="start" scoped="" ref="0x7fac18576400"/>
        <function-ref name="stop" scoped="" ref="0x7fac18576588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fac18576a20" loc="54:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac18576a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18575770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18572020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18574b00"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18574020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac185744f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fac1856dd00" loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fac1856dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac1856c0a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fac1856c228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x7fac1857a748" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac1857a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fac1857aa98"/>
        <function-ref name="getRootID" scoped="" ref="0x7fac1857ac20"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fac1857ada8"/>
        <function-ref name="getOffset" scoped="" ref="0x7fac18579020"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fac185791a8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fac18579330"/>
        <function-ref name="getSkew" scoped="" ref="0x7fac185794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1857e910" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1857e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1857ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fac185725e8" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac185725e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac18572938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x7fac18579700" loc="47:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x7fac18579700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18579a50"/>
        <function-ref name="getMode" scoped="" ref="0x7fac18579bd8"/>
        <function-ref name="setMode" scoped="" ref="0x7fac18579d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMsg" ref="0x7fac185675e8" loc="349:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMsg" scoped="" ref="0x7fac185675e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac18567938"/>
        <function-ref name="runTask" scoped="" ref="0x7fac18567ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processMsg" ref="0x7fac18567d88" loc="292:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processMsg" scoped="" ref="0x7fac18567d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac18566170"/>
        <function-ref name="runTask" scoped="" ref="0x7fac185662f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1856c470" loc="58:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1856c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1856c8c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1856ca48"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1856cbd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac1856cd58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac1856b020"/>
        <function-ref name="get" scoped="" ref="0x7fac1856b1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac1856b330"/>
        <function-ref name="led2On" scoped="" ref="0x7fac1856b950"/>
        <function-ref name="set" scoped="" ref="0x7fac1856b640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac1856b4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac1856b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x7fac18577020" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x7fac18577020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x7fac18577370"/>
        <function-ref name="msg_sent" scoped="" ref="0x7fac185774f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac1857d020" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac1857d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac1857d370"/>
        <function-ref name="stop" scoped="" ref="0x7fac1857d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac18572c88" loc="56:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac18572c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac1856d088"/>
        <function-ref name="fired" scoped="" ref="0x7fac185705e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac1856f470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac1856f020"/>
        <function-ref name="getdt" scoped="" ref="0x7fac1856d928"/>
        <function-ref name="gett0" scoped="" ref="0x7fac1856d4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac18570a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac18571820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac1856fa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac18571cc0"/>
        <function-ref name="stop" scoped="" ref="0x7fac18570198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncPacket" ref="0x7fac1856bda8" loc="59:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket" scoped="" ref="0x7fac1856bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac1856ab00"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac18568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac185626f0" loc="56:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac185626f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac18562a40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac18562bc8"/>
        <function-ref name="start" scoped="" ref="0x7fac18562d50"/>
        <function-ref name="stop" scoped="" ref="0x7fac1855f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fac1851e5c0" loc="71:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac1851e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac1851d540"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac1851da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac18553740" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac18553740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18553a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac18553c18"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18553da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1855c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac1855c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fac18522610" loc="70:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18522610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18521370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18520b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18520700"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18521bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac185200f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac1855e348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac1855e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1855e698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac18536418" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18536418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac18536768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac185368f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac18536a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac18536c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac1853c260" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac1853c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac18539700"/>
        <function-ref name="clear" scoped="" ref="0x7fac18539de0"/>
        <function-ref name="isValid" scoped="" ref="0x7fac18539020"/>
        <function-ref name="set" scoped="" ref="0x7fac1852f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac1855f7a0" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac1855f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1855faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac1853ede0" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac1853ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac18542170"/>
        <function-ref name="noAck" scoped="" ref="0x7fac185422f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac18542480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fac18529498" loc="67:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18529498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac185281e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18527a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18527628"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18528a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac18543e08" loc="60:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac18543e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac1855b1a8"/>
        <function-ref name="source" scoped="" ref="0x7fac1855b330"/>
        <function-ref name="address" scoped="" ref="0x7fac1855b4b8"/>
        <function-ref name="destination" scoped="" ref="0x7fac1855b640"/>
        <function-ref name="setSource" scoped="" ref="0x7fac1855b7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac1855b950"/>
        <function-ref name="type" scoped="" ref="0x7fac1855bad8"/>
        <function-ref name="setType" scoped="" ref="0x7fac1855bc60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac1855bde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac18554020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac185541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fac185254f8" loc="68:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac185254f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac18524370"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac18524848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac1852d130" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac1852d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac1852c588"/>
        <function-ref name="clear" scoped="" ref="0x7fac1852cc68"/>
        <function-ref name="isValid" scoped="" ref="0x7fac1852de80"/>
        <function-ref name="set" scoped="" ref="0x7fac1852b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac18518b80" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac18518b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac18517020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac185171a8"/>
        <function-ref name="start" scoped="" ref="0x7fac18517330"/>
        <function-ref name="stop" scoped="" ref="0x7fac185174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fac18505020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac18505020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac18505d38"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac18504238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac18516df0" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac18516df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18515170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac185152f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18515480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18515608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac18515790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac18516818" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac18516818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac18516b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac18513af8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18513af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac18513e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac18512020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac185121a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac18512330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fac18509020" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac18509020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18509d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18507548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac185070f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac185085d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18508aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac18517c38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac18517c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac18516020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac185131a0" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac185131a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac185134f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fac18513678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac18513800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fac18510020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18510d38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1850e548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1850e0f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1850f5d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac1850faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac18515a30" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac18515a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac18515d80"/>
        <function-ref name="source" scoped="" ref="0x7fac18514020"/>
        <function-ref name="address" scoped="" ref="0x7fac185141a8"/>
        <function-ref name="destination" scoped="" ref="0x7fac18514330"/>
        <function-ref name="setSource" scoped="" ref="0x7fac185144b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac18514640"/>
        <function-ref name="type" scoped="" ref="0x7fac185147c8"/>
        <function-ref name="setType" scoped="" ref="0x7fac18514950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac18514ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac18514c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac18514de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fac1850c020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac1850c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac1850cd38"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac1850b238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac184e3358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac184e3358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac184e36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac184e2320" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac184e2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac184e2670"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184e27f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184e2980"/>
        <function-ref name="cancel" scoped="" ref="0x7fac184e2b08"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac184e2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x7fac184f3e30" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x7fac184f3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac184f2bb0"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac184f10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x7fac184fb020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x7fac184fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac184fbd38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184f8548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184f80f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac184fa5d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac184faaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac184f8b50" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac184f8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac184f7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac184f71a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184f7330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184f74b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac184f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac184ef5e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac184ef5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac184ef938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fac184ee020" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fac184ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac184ee370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac184ee4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184ee680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184ee808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac184ee990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x7fac184e1510" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac184e1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac184e0a88"/>
        <function-ref name="clear" scoped="" ref="0x7fac184de190"/>
        <function-ref name="isValid" scoped="" ref="0x7fac184e03a8"/>
        <function-ref name="set" scoped="" ref="0x7fac184de870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7fac184eece0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7fac184eece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac184ec0a0"/>
        <function-ref name="source" scoped="" ref="0x7fac184ec228"/>
        <function-ref name="address" scoped="" ref="0x7fac184ec3b0"/>
        <function-ref name="destination" scoped="" ref="0x7fac184ec538"/>
        <function-ref name="setSource" scoped="" ref="0x7fac184ec6c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac184ec848"/>
        <function-ref name="type" scoped="" ref="0x7fac184ec9d0"/>
        <function-ref name="setType" scoped="" ref="0x7fac184ecb58"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac184ecce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac184ece68"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac184e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac184f1a58" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac184f1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac184f1da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fac184d1850" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac184d1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac184d1ba0"/>
        <function-ref name="isSet" scoped="" ref="0x7fac184d1d28"/>
        <function-ref name="cancel" scoped="" ref="0x7fac184d8020"/>
        <function-ref name="set" scoped="" ref="0x7fac184d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fac184d8668" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac184d8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac184d7220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac184d0898" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac184d0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac184d0be8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac184d0d70"/>
        <function-ref name="led1On" scoped="" ref="0x7fac184cf020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac184cf1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac184cf330"/>
        <function-ref name="get" scoped="" ref="0x7fac184cf4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac184cf640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac184cfc60"/>
        <function-ref name="set" scoped="" ref="0x7fac184cf7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac184cf950"/>
        <function-ref name="led2On" scoped="" ref="0x7fac184cfad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fac184d7870" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac184d7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac184d0490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x7fac18501918" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x7fac18501918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac184ff660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184fd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184feb00"/>
        <function-ref name="cancel" scoped="" ref="0x7fac184fe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac184fe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac184f78e0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac184f78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac184f7c30"/>
        <function-ref name="source" scoped="" ref="0x7fac184f7db8"/>
        <function-ref name="address" scoped="" ref="0x7fac184f6020"/>
        <function-ref name="destination" scoped="" ref="0x7fac184f61a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fac184f6330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac184f64b8"/>
        <function-ref name="type" scoped="" ref="0x7fac184f6640"/>
        <function-ref name="setType" scoped="" ref="0x7fac184f67c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac184f6950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac184f6ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac184f6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x7fac184f5368" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x7fac184f5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x7fac184f30c0"/>
        <function-ref name="eventTime" scoped="" ref="0x7fac184f3598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7fac184e39d0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7fac184e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac184e3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x7fac184dd478" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac184dd478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac184dc900"/>
        <function-ref name="clear" scoped="" ref="0x7fac184da020"/>
        <function-ref name="isValid" scoped="" ref="0x7fac184dc220"/>
        <function-ref name="set" scoped="" ref="0x7fac184da700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac18462818" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac18462818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac18462b68"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac18462cf0"/>
        <function-ref name="start" scoped="" ref="0x7fac18462e78"/>
        <function-ref name="stop" scoped="" ref="0x7fac18461030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac18444b48" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac18444b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac1844c020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac1844c1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac1844c330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac1844c4b8"/>
        <function-ref name="setCca" scoped="" ref="0x7fac1844c640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac1844c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fac18437658" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fac18437658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fac18437aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac184570c0" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac184570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18457410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac18457598"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18457720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac184578a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac18457a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac184617a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac184617a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18461af8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18461c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18461e08"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18460020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac184601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac1845e498" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac1845e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1845e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac1844fe18" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac1844fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac184561a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac18456330"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac184564b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac18456640"/>
        <function-ref name="getPower" scoped="" ref="0x7fac184567c8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac18456950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac1844cac0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1844cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac1844ce10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac18443020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac184431a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac18443330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac18460928" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac18460928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac18460c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac18456c78" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18456c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac18455020"/>
        <function-ref name="noAck" scoped="" ref="0x7fac184551a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac18455330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac1843ba98" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fac1843ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac1843bde8"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac18442020"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac184421a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac18442330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac184424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac1845ea88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac1845ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac1845edd8"/>
        <function-ref name="source" scoped="" ref="0x7fac18458020"/>
        <function-ref name="address" scoped="" ref="0x7fac184581a8"/>
        <function-ref name="destination" scoped="" ref="0x7fac18458330"/>
        <function-ref name="setSource" scoped="" ref="0x7fac184584b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac18458640"/>
        <function-ref name="type" scoped="" ref="0x7fac184587c8"/>
        <function-ref name="setType" scoped="" ref="0x7fac18458950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac18458ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac18458c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac18458de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac1844bca8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac1844bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac1844d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac184353a0" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac184353a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac184356f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac18435878"/>
        <function-ref name="start" scoped="" ref="0x7fac18435a00"/>
        <function-ref name="stop" scoped="" ref="0x7fac18435b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac18421020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac18421020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac18421370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac18420128" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fac18420128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac18420478"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac18420600"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac18420788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac18420910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac18420a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac184237e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac184237e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac18423b38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac18423cc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac18423e48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac18422020"/>
        <function-ref name="getPower" scoped="" ref="0x7fac184221a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac18422330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac184254c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fac184254c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18425818"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184259a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18425b28"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18425cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18425e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac18421668" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac18421668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac184219b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac18421b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac18421cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac18421e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fac1842e020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fac1842e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1842e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac18422658" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac18422658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac184229a8"/>
        <function-ref name="noAck" scoped="" ref="0x7fac18422b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac18422cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac184334f8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac184334f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac18433848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac184339d0"/>
        <function-ref name="request" scoped="" ref="0x7fac18433b58"/>
        <function-ref name="granted" scoped="" ref="0x7fac18433ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac18433e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fac18424330" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fac18424330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18424680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac18424808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18424990"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18424b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18424ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac1842e6a0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fac1842e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1842e9f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac1842eb78"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1842ed00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18425020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac184251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac184231d0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac184231d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac18423520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac1841f770" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1841f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac1841fac0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac1841fc48"/>
        <function-ref name="start" scoped="" ref="0x7fac1841fdd0"/>
        <function-ref name="stop" scoped="" ref="0x7fac1841c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac1841b678" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac1841b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac1841b9c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac1841bb50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac1841bcd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac1841be60"/>
        <function-ref name="setCca" scoped="" ref="0x7fac1841a020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac1841a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac1841c2d8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac1841c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac1841c628"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1841c7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1841c938"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1841cac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac1841cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac1841b020" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac1841b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1841b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac18417140" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac18417140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac18417490"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac18417618"/>
        <function-ref name="start" scoped="" ref="0x7fac184177a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac18417928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac18416948" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac18416948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac18416c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac18416e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac18415020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac184151a8"/>
        <function-ref name="setCca" scoped="" ref="0x7fac18415330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac184154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fac1840c208" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fac1840c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac1840c558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac1840c6e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac1840c868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac1840c9f0"/>
        <function-ref name="setCca" scoped="" ref="0x7fac1840cb78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac1840cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac18402de0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac18402de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac18401170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac184012f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac18401480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac18401608"/>
        <function-ref name="getPower" scoped="" ref="0x7fac18401790"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac18401918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fac184034b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac184034b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18403808"/>
        <function-ref name="cancel" scoped="" ref="0x7fac18403990"/>
        <function-ref name="modify" scoped="" ref="0x7fac18403b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18403ca0"/>
        <function-ref name="resend" scoped="" ref="0x7fac18403e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac18417be0" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac18417be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac18416020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac184161a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac18416330"/>
        <function-ref name="cancel" scoped="" ref="0x7fac184164b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac18416640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fac1840a020" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fac1840a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac1840a370"/>
        <function-ref name="rand32" scoped="" ref="0x7fac1840a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fac18413ce8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fac18413ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac184120a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac18412228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac18400020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac18400020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac18400370"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac184004f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac18400680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fac1840da78" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fac1840da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac1840ddc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac18413020"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac184131a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac18413330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac184134b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac18413640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac184137c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac18413950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1840a7b0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1840a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1840ab00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1840ac88"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1840ae10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac18402020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac184021a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18402330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac184024b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac18402ad8"/>
        <function-ref name="set" scoped="" ref="0x7fac18402640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac184027c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac18402950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac18415798" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac18415798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac18415ae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac18415c70"/>
        <function-ref name="request" scoped="" ref="0x7fac18415df8"/>
        <function-ref name="granted" scoped="" ref="0x7fac18414020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac184141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fac183f5540" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7fac183f5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac183f5990"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac183f5b18"/>
        <function-ref name="isState" scoped="" ref="0x7fac183f5ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac183f5e28"/>
        <function-ref name="requestState" scoped="" ref="0x7fac183ff020"/>
        <function-ref name="forceState" scoped="" ref="0x7fac183ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fac183f1b80" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7fac183f1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac183f0020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac183f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fac183f2cf8" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7fac183f2cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac183f10a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac183f1228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fac183f4e68" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7fac183f4e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac183f21e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fac183f2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fac1839daf8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fac1839daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac1839de48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac183a9020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac183a91a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac183a9330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac183a94b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac183a9640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac183a97c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac183a9950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac183a9ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac183a9c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac183a9de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac183a8020"/>
        <function-ref name="sync" scoped="" ref="0x7fac183a81a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac183a8430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac183a85b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fac18397d28" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fac18397d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1839a8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1839ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fac183a88b0" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fac183a88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac183a8c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac183a8d88"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac1839b020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac1839b1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac1839b330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac1839b4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac1839b640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac1839b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac183ade00" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac183ade00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac183aa1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac183aa330"/>
        <function-ref name="request" scoped="" ref="0x7fac183aa4b8"/>
        <function-ref name="granted" scoped="" ref="0x7fac183aa640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac183aa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fac18392328" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fac18392328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac18392678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac18392800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac18392988"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac18392b10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac18392c98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac18392e20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac18391020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac183911a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac18391330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac183914b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac18391640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac183917c8"/>
        <function-ref name="sync" scoped="" ref="0x7fac18391950"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac18391bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac18391d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fac1836dc48" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac1836dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836c020"/>
        <function-ref name="write" scoped="" ref="0x7fac1836c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fac1838b7f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac1838b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fac1838bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fac1838c060" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7fac1838c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac18383690"/>
        <function-ref name="fired" scoped="" ref="0x7fac18384738"/>
        <function-ref name="startAt" scoped="" ref="0x7fac18383088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac18384bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac18383b18"/>
        <function-ref name="start" scoped="" ref="0x7fac1838cdb0"/>
        <function-ref name="stop" scoped="" ref="0x7fac183842b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fac1836fab8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac1836fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836fe08"/>
        <function-ref name="write" scoped="" ref="0x7fac1836d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fac183811b0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fac183811b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18381500"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18381688"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18381810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18381998"/>
        <function-ref name="get" scoped="" ref="0x7fac18381b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18381ca8"/>
        <function-ref name="set" scoped="" ref="0x7fac18381e30"/>
        <function-ref name="clr" scoped="" ref="0x7fac18380020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fac1838f4d0" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fac1838f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1838e088"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1838e4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fac1835b3f0" loc="126:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7fac1835b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1835b740"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1835b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fac1836c530" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac1836c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836c880"/>
        <function-ref name="write" scoped="" ref="0x7fac1836ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fac1836cda0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac1836cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836b170"/>
        <function-ref name="write" scoped="" ref="0x7fac1836b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fac18370990" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac18370990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac18370ce0"/>
        <function-ref name="write" scoped="" ref="0x7fac18370e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fac183751b0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac183751b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac18375500"/>
        <function-ref name="changed" scoped="" ref="0x7fac18375688"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac18375810"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac18375998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac18382020" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fac18382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18382370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac183824f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18382680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18382808"/>
        <function-ref name="get" scoped="" ref="0x7fac18382990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18382b18"/>
        <function-ref name="set" scoped="" ref="0x7fac18382ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18382e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fac1836a3c0" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac1836a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac1836a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fac18380378" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fac18380378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac183806c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18380850"/>
        <function-ref name="toggle" scoped="" ref="0x7fac183809d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18380b60"/>
        <function-ref name="get" scoped="" ref="0x7fac18380ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18380e70"/>
        <function-ref name="set" scoped="" ref="0x7fac1837f020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1837f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac18394020" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac18394020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac18394370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fac1836d3d0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac1836d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836d720"/>
        <function-ref name="write" scoped="" ref="0x7fac1836d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fac1836aca0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac1836aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac18367020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac183673b0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fac183673b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac18367700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac18367888"/>
        <function-ref name="request" scoped="" ref="0x7fac18367a10"/>
        <function-ref name="granted" scoped="" ref="0x7fac18367b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac18367d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fac18366e50" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7fac18366e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac183651e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac18365370"/>
        <function-ref name="request" scoped="" ref="0x7fac183654f8"/>
        <function-ref name="granted" scoped="" ref="0x7fac18365680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac18365808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fac18390080" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fac18390080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac183903d0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac18390558"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac183906e0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac18390868"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac183909f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac18390b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac18390d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac1838f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fac1836f230" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac1836f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1836f580"/>
        <function-ref name="write" scoped="" ref="0x7fac1836f708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fac18370120" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac18370120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac18370470"/>
        <function-ref name="write" scoped="" ref="0x7fac183705f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fac18368518" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac18368518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac18368868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac18365ac0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac18365ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac18365e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac18364020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac183641a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac18364330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac183644b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18364640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac183647c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac18364de8"/>
        <function-ref name="set" scoped="" ref="0x7fac18364950"/>
        <function-ref name="led0On" scoped="" ref="0x7fac18364ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac18364c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fac1835c598" loc="125:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7fac1835c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1835c8e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1835ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac18394650" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac18394650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac183949a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac18394b28"/>
        <function-ref name="request" scoped="" ref="0x7fac18394cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fac18394e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac18392020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fac1837da60" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac1837da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1837ddb0"/>
        <function-ref name="write" scoped="" ref="0x7fac18371020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fac1837d128" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac1837d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1837d578"/>
        <function-ref name="write" scoped="" ref="0x7fac1837d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fac1837ab78" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fac1837ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1837e020"/>
        <function-ref name="disable" scoped="" ref="0x7fac1837e1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1837e330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1837e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fac18366140" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7fac18366140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac18366490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac18366618"/>
        <function-ref name="request" scoped="" ref="0x7fac183667a0"/>
        <function-ref name="granted" scoped="" ref="0x7fac18366928"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac18366ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fac18368bf0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac18368bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac1836a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac182e73c0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac182e73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac182e7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fac182e7d38" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac182e7d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac182e3410"/>
        <function-ref name="fired" scoped="" ref="0x7fac182e54a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fac182e5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac182e5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac182e3898"/>
        <function-ref name="start" scoped="" ref="0x7fac182e6ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fac182e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac182e03b8" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac182e03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac1809fab0"/>
        <function-ref name="fired" scoped="" ref="0x7fac180a2a90"/>
        <function-ref name="startAt" scoped="" ref="0x7fac1809f4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac1809f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac1809d020"/>
        <function-ref name="start" scoped="" ref="0x7fac180a2130"/>
        <function-ref name="stop" scoped="" ref="0x7fac180a2608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1809d438" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1809d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1809d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac16d621a8" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac16d621a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16d60918"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d61980"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16d60310"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16d61e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16d60da0"/>
        <function-ref name="start" scoped="" ref="0x7fac16d61020"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac16d5c670" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac16d5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16d5acc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d5bd50"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16d5a6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16d5a230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16d59190"/>
        <function-ref name="start" scoped="" ref="0x7fac16d5b3f0"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d5b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fac182bb0c0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fac182bb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac182bb410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fac182bb598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac182bb720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fac182bb8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac182bba30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac182bbbb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fac182bbd40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fac182ba020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fac182ba1a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fac182ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac182abb68" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fac182abb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fac182a9db8"/>
        <function-ref name="test" scoped="" ref="0x7fac182a94a8"/>
        <function-ref name="get" scoped="" ref="0x7fac182b2728"/>
        <function-ref name="captured" scoped="" ref="0x7fac182b10c0"/>
        <function-ref name="reset" scoped="" ref="0x7fac182b1598"/>
        <function-ref name="isOn" scoped="" ref="0x7fac182a9930"/>
        <function-ref name="set" scoped="" ref="0x7fac182b2bb0"/>
        <function-ref name="start" scoped="" ref="0x7fac182b1a20"/>
        <function-ref name="stop" scoped="" ref="0x7fac182a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac182a7020" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fac182a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac1829f7a8"/>
        <function-ref name="fired" scoped="" ref="0x7fac182a6560"/>
        <function-ref name="get" scoped="" ref="0x7fac182a7ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fac182a69e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1829fc30"/>
        <function-ref name="set" scoped="" ref="0x7fac182a6088"/>
        <function-ref name="start" scoped="" ref="0x7fac182a6e70"/>
        <function-ref name="stop" scoped="" ref="0x7fac1829f320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac182c9020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac182c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac182bd0f8"/>
        <function-ref name="test" scoped="" ref="0x7fac182bf7a8"/>
        <function-ref name="get" scoped="" ref="0x7fac182c9ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7fac182bd580"/>
        <function-ref name="getScale" scoped="" ref="0x7fac182bda58"/>
        <function-ref name="reset" scoped="" ref="0x7fac182c89e8"/>
        <function-ref name="overflow" scoped="" ref="0x7fac182c8560"/>
        <function-ref name="isOn" scoped="" ref="0x7fac182bfc30"/>
        <function-ref name="set" scoped="" ref="0x7fac182c8088"/>
        <function-ref name="start" scoped="" ref="0x7fac182c8e70"/>
        <function-ref name="stop" scoped="" ref="0x7fac182bf320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fac18290950" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18290950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fac18290ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac18290e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac18295020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac182951a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac18295330"/>
        <function-ref name="setControl" scoped="" ref="0x7fac182954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fac18286470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fac18286470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fac182867c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fac18286948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fac18286ad0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fac18286c58"/>
        <function-ref name="getAssr" scoped="" ref="0x7fac18286de0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fac1828c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac18295980" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fac18295980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac1828d270"/>
        <function-ref name="fired" scoped="" ref="0x7fac1828e020"/>
        <function-ref name="get" scoped="" ref="0x7fac1828f560"/>
        <function-ref name="reset" scoped="" ref="0x7fac1828e4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1828d6f8"/>
        <function-ref name="set" scoped="" ref="0x7fac1828f9e8"/>
        <function-ref name="start" scoped="" ref="0x7fac1828e930"/>
        <function-ref name="stop" scoped="" ref="0x7fac1828edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac1829ed90" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1829ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac18298e58"/>
        <function-ref name="test" scoped="" ref="0x7fac18298548"/>
        <function-ref name="get" scoped="" ref="0x7fac1829b940"/>
        <function-ref name="setScale" scoped="" ref="0x7fac18297310"/>
        <function-ref name="getScale" scoped="" ref="0x7fac182977e8"/>
        <function-ref name="reset" scoped="" ref="0x7fac18299778"/>
        <function-ref name="overflow" scoped="" ref="0x7fac182992f0"/>
        <function-ref name="isOn" scoped="" ref="0x7fac182989d0"/>
        <function-ref name="set" scoped="" ref="0x7fac1829bdc8"/>
        <function-ref name="start" scoped="" ref="0x7fac18299c00"/>
        <function-ref name="stop" scoped="" ref="0x7fac182980c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fac1827f558" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fac1827f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fac1827f8a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac1827fa30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac1827fbb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac1827fd40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac1827d020"/>
        <function-ref name="setControl" scoped="" ref="0x7fac1827d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fac1827a790" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac1827a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fac1827aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fac18278020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fac18278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fac18278370"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fac182784f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fac18278680"/>
        <function-ref name="countBusy" scoped="" ref="0x7fac18278808"/>
        <function-ref name="getAssr" scoped="" ref="0x7fac18278990"/>
        <function-ref name="setAssr" scoped="" ref="0x7fac18278b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac1827d670" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fac1827d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac1827be20"/>
        <function-ref name="fired" scoped="" ref="0x7fac1827cb80"/>
        <function-ref name="get" scoped="" ref="0x7fac1827c220"/>
        <function-ref name="reset" scoped="" ref="0x7fac1827b088"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1827a310"/>
        <function-ref name="set" scoped="" ref="0x7fac1827c6a8"/>
        <function-ref name="start" scoped="" ref="0x7fac1827b510"/>
        <function-ref name="stop" scoped="" ref="0x7fac1827b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac18284400" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac18284400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac18280580"/>
        <function-ref name="test" scoped="" ref="0x7fac18281c20"/>
        <function-ref name="get" scoped="" ref="0x7fac18283020"/>
        <function-ref name="setScale" scoped="" ref="0x7fac18280a08"/>
        <function-ref name="getScale" scoped="" ref="0x7fac1827f020"/>
        <function-ref name="reset" scoped="" ref="0x7fac18283e08"/>
        <function-ref name="overflow" scoped="" ref="0x7fac18283980"/>
        <function-ref name="isOn" scoped="" ref="0x7fac182800f8"/>
        <function-ref name="set" scoped="" ref="0x7fac182834a8"/>
        <function-ref name="start" scoped="" ref="0x7fac18281310"/>
        <function-ref name="stop" scoped="" ref="0x7fac18281798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fac18219568" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fac18219568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac182198b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fac18219a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac18219bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fac18219d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac18218020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac182181a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fac18218330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fac182184b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fac18218640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fac182187c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7fac18207020" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fac18207020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fac18207370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac182074f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac18207680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac18207808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac18207990"/>
        <function-ref name="setControl" scoped="" ref="0x7fac18207b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fac18213540" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fac18213540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac18211db8"/>
        <function-ref name="fired" scoped="" ref="0x7fac18212a58"/>
        <function-ref name="get" scoped="" ref="0x7fac182120f8"/>
        <function-ref name="reset" scoped="" ref="0x7fac18211020"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1820f270"/>
        <function-ref name="set" scoped="" ref="0x7fac18212580"/>
        <function-ref name="start" scoped="" ref="0x7fac182114a8"/>
        <function-ref name="stop" scoped="" ref="0x7fac18211930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac18218ca0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fac18218ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fac18215e20"/>
        <function-ref name="test" scoped="" ref="0x7fac18215510"/>
        <function-ref name="get" scoped="" ref="0x7fac18217858"/>
        <function-ref name="captured" scoped="" ref="0x7fac18216238"/>
        <function-ref name="reset" scoped="" ref="0x7fac18216710"/>
        <function-ref name="isOn" scoped="" ref="0x7fac18215998"/>
        <function-ref name="set" scoped="" ref="0x7fac18217ce0"/>
        <function-ref name="start" scoped="" ref="0x7fac18216b98"/>
        <function-ref name="stop" scoped="" ref="0x7fac18215088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fac1820f8e8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fac1820f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac1820c088"/>
        <function-ref name="fired" scoped="" ref="0x7fac1820edf0"/>
        <function-ref name="get" scoped="" ref="0x7fac1820e490"/>
        <function-ref name="reset" scoped="" ref="0x7fac1820d2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1820c510"/>
        <function-ref name="set" scoped="" ref="0x7fac1820e918"/>
        <function-ref name="start" scoped="" ref="0x7fac1820d738"/>
        <function-ref name="stop" scoped="" ref="0x7fac1820dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fac1820cb88" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fac1820cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac182084a8"/>
        <function-ref name="fired" scoped="" ref="0x7fac182090f8"/>
        <function-ref name="get" scoped="" ref="0x7fac1820a760"/>
        <function-ref name="reset" scoped="" ref="0x7fac18209580"/>
        <function-ref name="isOn" scoped="" ref="0x7fac18208930"/>
        <function-ref name="set" scoped="" ref="0x7fac1820abe8"/>
        <function-ref name="start" scoped="" ref="0x7fac18209a08"/>
        <function-ref name="stop" scoped="" ref="0x7fac18208020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac1821f490" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1821f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac1821b580"/>
        <function-ref name="test" scoped="" ref="0x7fac1821cc30"/>
        <function-ref name="get" scoped="" ref="0x7fac1821d088"/>
        <function-ref name="setScale" scoped="" ref="0x7fac1821ba08"/>
        <function-ref name="getScale" scoped="" ref="0x7fac18219020"/>
        <function-ref name="reset" scoped="" ref="0x7fac1821de70"/>
        <function-ref name="overflow" scoped="" ref="0x7fac1821d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fac1821b0f8"/>
        <function-ref name="set" scoped="" ref="0x7fac1821d510"/>
        <function-ref name="start" scoped="" ref="0x7fac1821c320"/>
        <function-ref name="stop" scoped="" ref="0x7fac1821c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac18178190" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac18178190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fac1895f388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fac1895f388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac181784e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac181788b0" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac181788b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac18169998"/>
        <function-ref name="test" scoped="" ref="0x7fac18169088"/>
        <function-ref name="get" scoped="" ref="0x7fac1816c490"/>
        <function-ref name="setScale" scoped="" ref="0x7fac18169e20"/>
        <function-ref name="getScale" scoped="" ref="0x7fac18168350"/>
        <function-ref name="reset" scoped="" ref="0x7fac1816b2b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac1816cdf0"/>
        <function-ref name="isOn" scoped="" ref="0x7fac18169510"/>
        <function-ref name="set" scoped="" ref="0x7fac1816c918"/>
        <function-ref name="start" scoped="" ref="0x7fac1816b738"/>
        <function-ref name="stop" scoped="" ref="0x7fac1816bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac16d479d8" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac16d479d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fac1895f020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fac1895f020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16d41088"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d420f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16d42a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16d42580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16d41510"/>
        <function-ref name="start" scoped="" ref="0x7fac16d46768"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d46c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fac16d3ba80" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fac16d3ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac16d38270"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d39020"/>
        <function-ref name="get" scoped="" ref="0x7fac16d3a658"/>
        <function-ref name="reset" scoped="" ref="0x7fac16d394a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fac16d386f8"/>
        <function-ref name="set" scoped="" ref="0x7fac16d3aae0"/>
        <function-ref name="start" scoped="" ref="0x7fac16d39930"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d39db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fac16d41a30" loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fac16d41a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac16d3db80"/>
        <function-ref name="test" scoped="" ref="0x7fac16d3d270"/>
        <function-ref name="get" scoped="" ref="0x7fac16d3f5d8"/>
        <function-ref name="setScale" scoped="" ref="0x7fac16d3b088"/>
        <function-ref name="getScale" scoped="" ref="0x7fac16d3b560"/>
        <function-ref name="reset" scoped="" ref="0x7fac16d3e4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fac16d3e020"/>
        <function-ref name="isOn" scoped="" ref="0x7fac16d3d6f8"/>
        <function-ref name="set" scoped="" ref="0x7fac16d3fa60"/>
        <function-ref name="start" scoped="" ref="0x7fac16d3e930"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d3edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac18127d70" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac18127d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac1812baf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac1812a4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac1812a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac1812a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac18125ad0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac18125ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac18122860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac181201f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac18122ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7fac18120680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac1811da98" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac1811da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac1810c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac1810b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac1810ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac1810b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac1810bb78" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1810bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac18107c20"/>
        <function-ref name="test" scoped="" ref="0x7fac18107310"/>
        <function-ref name="get" scoped="" ref="0x7fac1810a728"/>
        <function-ref name="setScale" scoped="" ref="0x7fac181060f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fac181065d0"/>
        <function-ref name="reset" scoped="" ref="0x7fac18108548"/>
        <function-ref name="overflow" scoped="" ref="0x7fac181080c0"/>
        <function-ref name="isOn" scoped="" ref="0x7fac18107798"/>
        <function-ref name="set" scoped="" ref="0x7fac1810abb0"/>
        <function-ref name="start" scoped="" ref="0x7fac181089d0"/>
        <function-ref name="stop" scoped="" ref="0x7fac18108e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fac180e6b10" loc="63:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fac180e6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac180e48f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac180e3230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac180e4d80"/>
        <function-ref name="overflow" scoped="" ref="0x7fac180e36b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac18101878" loc="62:/opt/tinyos-2.1.2//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac18101878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac180e7660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac180e6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac180e7ae8"/>
        <function-ref name="overflow" scoped="" ref="0x7fac180e64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac16d563b8" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac16d563b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16d54ab0"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d55a90"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16d544a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16d54020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16d53020"/>
        <function-ref name="start" scoped="" ref="0x7fac16d55130"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d55608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fac16d50860" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7fac16d50860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fac188a2720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16d4d020"/>
        <function-ref name="fired" scoped="" ref="0x7fac16d4e020"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16d4e930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16d4e4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16d4d4a8"/>
        <function-ref name="start" scoped="" ref="0x7fac16d4f5e0"/>
        <function-ref name="stop" scoped="" ref="0x7fac16d4fab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac16d53648" loc="68:/opt/tinyos-2.1.2//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac16d53648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac16d523f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac16d52d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac16d52878"/>
        <function-ref name="overflow" scoped="" ref="0x7fac16d501f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac180a13a0" loc="18:/opt/tinyos-2.1.2//tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac180a13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac180a16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fac180987d0" loc="87:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fac180987d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18098b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18098ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18098e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18097020"/>
        <function-ref name="get" scoped="" ref="0x7fac180971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18097330"/>
        <function-ref name="set" scoped="" ref="0x7fac180974b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18097640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fac18097960" loc="88:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fac18097960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18097cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18097e38"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18096020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac180961a8"/>
        <function-ref name="get" scoped="" ref="0x7fac18096330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac180964b8"/>
        <function-ref name="set" scoped="" ref="0x7fac18096640"/>
        <function-ref name="clr" scoped="" ref="0x7fac180967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fac18096ae0" loc="89:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fac18096ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18096e30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18095020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac180951a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18095330"/>
        <function-ref name="get" scoped="" ref="0x7fac180954b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18095640"/>
        <function-ref name="set" scoped="" ref="0x7fac180957c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18095950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fac18099638" loc="86:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fac18099638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18099988"/>
        <function-ref name="isInput" scoped="" ref="0x7fac18099b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18099c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18099e20"/>
        <function-ref name="get" scoped="" ref="0x7fac18098020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac180981a8"/>
        <function-ref name="set" scoped="" ref="0x7fac18098330"/>
        <function-ref name="clr" scoped="" ref="0x7fac180984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fac18094df0" loc="91:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fac18094df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18093170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac180932f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18093480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac18093608"/>
        <function-ref name="get" scoped="" ref="0x7fac18093790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18093918"/>
        <function-ref name="set" scoped="" ref="0x7fac18093aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac18093c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fac1809a428" loc="85:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fac1809a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1809a778"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1809a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1809aa88"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1809ac10"/>
        <function-ref name="get" scoped="" ref="0x7fac1809ad98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac18099020"/>
        <function-ref name="set" scoped="" ref="0x7fac180991a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac18099330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fac18095c58" loc="90:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fac18095c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac18094020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac180941a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac18094330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac180944b8"/>
        <function-ref name="get" scoped="" ref="0x7fac18094640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac180947c8"/>
        <function-ref name="set" scoped="" ref="0x7fac18094950"/>
        <function-ref name="clr" scoped="" ref="0x7fac18094ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fac180853c0" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fac180853c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac18085710"/>
        <function-ref name="disable" scoped="" ref="0x7fac18085898"/>
        <function-ref name="captured" scoped="" ref="0x7fac18085a20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac18085ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fac1808a020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fac1808a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1808a370"/>
        <function-ref name="disable" scoped="" ref="0x7fac1808a4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1808a680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1808a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fac1808abe8" loc="41:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac1808abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18089020"/>
        <function-ref name="disable" scoped="" ref="0x7fac180891a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac18089330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac180894b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac18083180" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fac18083180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac180834d0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18083658"/>
        <function-ref name="captured" scoped="" ref="0x7fac180837e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac18083968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7fac18083d38" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7fac18083d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fac18070e58"/>
        <function-ref name="test" scoped="" ref="0x7fac18070548"/>
        <function-ref name="get" scoped="" ref="0x7fac180738f0"/>
        <function-ref name="captured" scoped="" ref="0x7fac180712b0"/>
        <function-ref name="reset" scoped="" ref="0x7fac18071788"/>
        <function-ref name="isOn" scoped="" ref="0x7fac180709d0"/>
        <function-ref name="set" scoped="" ref="0x7fac18073d78"/>
        <function-ref name="start" scoped="" ref="0x7fac18071c10"/>
        <function-ref name="stop" scoped="" ref="0x7fac180700c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fac1805a480" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1805a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1805a7d0"/>
        <function-ref name="fired" scoped="" ref="0x7fac1805a958"/>
        <function-ref name="disable" scoped="" ref="0x7fac1805aae0"/>
        <function-ref name="edge" scoped="" ref="0x7fac1805ac68"/>
        <function-ref name="enable" scoped="" ref="0x7fac1805adf0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac18059020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac1806d9a0" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fac1806d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1806dcf0"/>
        <function-ref name="disable" scoped="" ref="0x7fac1806de78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1805a030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1805a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fac18050518" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fac18050518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18050868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180509f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18050b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18050d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac1804f020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1804f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fac18055518" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fac18055518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18055868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180559f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18055b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18055d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac18054020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fac18052518" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fac18052518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18052868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180529f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18052b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18052d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac18051020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fac1804f518" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fac1804f518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1804f868"/>
        <function-ref name="fired" scoped="" ref="0x7fac1804f9f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac1804fb78"/>
        <function-ref name="edge" scoped="" ref="0x7fac1804fd00"/>
        <function-ref name="enable" scoped="" ref="0x7fac1804e020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1804e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fac18054518" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fac18054518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18054868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180549f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18054b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18054d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac18053020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fac18051518" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fac18051518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18051868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180519f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18051b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18051d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac18050020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fac18058550" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fac18058550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac180588a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac18058a28"/>
        <function-ref name="disable" scoped="" ref="0x7fac18058bb0"/>
        <function-ref name="edge" scoped="" ref="0x7fac18058d38"/>
        <function-ref name="enable" scoped="" ref="0x7fac18055020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fac18053518" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fac18053518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18053868"/>
        <function-ref name="fired" scoped="" ref="0x7fac180539f0"/>
        <function-ref name="disable" scoped="" ref="0x7fac18053b78"/>
        <function-ref name="edge" scoped="" ref="0x7fac18053d00"/>
        <function-ref name="enable" scoped="" ref="0x7fac18052020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac180521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fac18047020" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fac18047020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18047370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fac18048940" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fac18048940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18048c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fac18049020" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fac18049020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18049370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fac18047758" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fac18047758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18047aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fac1804a0a8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fac1804a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1804a3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fac18049758" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fac18049758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18049aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fac18048208" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fac18048208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18048558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fac1804a7e0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fac1804a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1804ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac1802aa70" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac1802aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1802adc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac18017020"/>
        <function-ref name="disable" scoped="" ref="0x7fac180171a8"/>
        <function-ref name="edge" scoped="" ref="0x7fac18017330"/>
        <function-ref name="enable" scoped="" ref="0x7fac180174b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac18017640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac18017908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac18017908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18017c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac180147a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac180147a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18014af8"/>
        <function-ref name="fired" scoped="" ref="0x7fac18014c80"/>
        <function-ref name="disable" scoped="" ref="0x7fac18014e08"/>
        <function-ref name="edge" scoped="" ref="0x7fac18013020"/>
        <function-ref name="enable" scoped="" ref="0x7fac180131a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac18013330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac180135f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac180135f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18013948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac1800f3e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac1800f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1800f730"/>
        <function-ref name="fired" scoped="" ref="0x7fac1800f8b8"/>
        <function-ref name="disable" scoped="" ref="0x7fac1800fa40"/>
        <function-ref name="edge" scoped="" ref="0x7fac1800fbc8"/>
        <function-ref name="enable" scoped="" ref="0x7fac1800fd50"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1800e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac1800e2e8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac1800e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1800e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac1800b020" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac1800b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1800b370"/>
        <function-ref name="fired" scoped="" ref="0x7fac1800b4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fac1800b680"/>
        <function-ref name="edge" scoped="" ref="0x7fac1800b808"/>
        <function-ref name="enable" scoped="" ref="0x7fac1800b990"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1800bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac1800bde0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac1800bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1800a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac18007cd8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac18007cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac180060a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac18006228"/>
        <function-ref name="disable" scoped="" ref="0x7fac180063b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac18006538"/>
        <function-ref name="enable" scoped="" ref="0x7fac180066c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac18006848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac18006b10" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac18006b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18006e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac180039d8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac180039d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac18003d28"/>
        <function-ref name="fired" scoped="" ref="0x7fac18002020"/>
        <function-ref name="disable" scoped="" ref="0x7fac180021a8"/>
        <function-ref name="edge" scoped="" ref="0x7fac18002330"/>
        <function-ref name="enable" scoped="" ref="0x7fac180024b8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac18002640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac18002908" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac18002908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac18002c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac17fff970" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac17fff970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17fffcc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17fffe48"/>
        <function-ref name="disable" scoped="" ref="0x7fac17ffe020"/>
        <function-ref name="edge" scoped="" ref="0x7fac17ffe1a8"/>
        <function-ref name="enable" scoped="" ref="0x7fac17ffe330"/>
        <function-ref name="getValue" scoped="" ref="0x7fac17ffe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac17ffe780" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac17ffe780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17ffead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fac17ffa6a8" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fac17ffa6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17ffa9f8"/>
        <function-ref name="fired" scoped="" ref="0x7fac17ffab80"/>
        <function-ref name="disable" scoped="" ref="0x7fac17ffad08"/>
        <function-ref name="edge" scoped="" ref="0x7fac17ff9020"/>
        <function-ref name="enable" scoped="" ref="0x7fac17ff91a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac17ff9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fac17ff95f8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fac17ff95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17ff9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7fac17fed020" loc="51:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7fac17fed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17fed370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17fed4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17fed680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17fed808"/>
        <function-ref name="get" scoped="" ref="0x7fac17fed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17fedb18"/>
        <function-ref name="set" scoped="" ref="0x7fac17fedca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17fede28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fac17fee420" loc="47:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fac17fee420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17fee770"/>
        <function-ref name="disable" scoped="" ref="0x7fac17fee8f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17feea80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac17feec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7fac17feb8e0" loc="69:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7fac17feb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17febc30"/>
        <function-ref name="runTask" scoped="" ref="0x7fac17febdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac17d72c90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d72c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d713e8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d71570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac17d7c438" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fac17d7c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac17d75dd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d75dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d74170"/>
        <function-ref name="write" scoped="" ref="0x7fac17d742f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac17d6e7c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d6e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6eb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac17d6c020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fac17d6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6c370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac17d627c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d627c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d62b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d62c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac17d647c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17d647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d64b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d64c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac17d7a6b8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d7a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac17d657c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d65b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d65c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac17d74d60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac17d74d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d730d8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d73260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac17d73cc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d73cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d720a0"/>
        <function-ref name="write" scoped="" ref="0x7fac17d72228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac17d69020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fac17d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d69370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac17d6c7c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d6c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6cb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17d7ee78" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d7ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17d7d1f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17d7d380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17d7d508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac17d78020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d78370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac17d78638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac17d78638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d78a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac17d78d50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d78d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d770d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac17d64020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d64370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac17d79368" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d79368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d796b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac17d73528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d73528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d73878"/>
        <function-ref name="write" scoped="" ref="0x7fac17d73a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac17d745c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d74910"/>
        <function-ref name="write" scoped="" ref="0x7fac17d74a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac17d7dde8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d7dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac17d62020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d62370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d624f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac17d63020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d63370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac17d697c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fac17d697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d69b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d69c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac17d65020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d65370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac17d6b7c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d6b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6bb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac17d61020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d61770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d618f8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d61a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d61c08"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d61d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac17d7d7d0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17d7d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac17d75638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fac17d75638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d75988"/>
        <function-ref name="write" scoped="" ref="0x7fac17d75b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac17d724f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d724f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d72840"/>
        <function-ref name="write" scoped="" ref="0x7fac17d729c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac17d6b020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6b370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac17d71838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d71838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d71b88"/>
        <function-ref name="write" scoped="" ref="0x7fac17d71d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac17d7ca50" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac17d7ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac17d6e020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6e370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17d7e280" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17d7e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17d7e5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17d7e758"/>
        <function-ref name="request" scoped="" ref="0x7fac17d7e8e0"/>
        <function-ref name="granted" scoped="" ref="0x7fac17d7ea68"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17d7ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac17d773a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d773a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d776f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac17d75020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fac17d75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d75370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac17d677c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac17d677c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d67b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d67c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac17d67020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d67370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac17d79980" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d79980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d79cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac17d687c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d687c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d68b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d68c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac17d637c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fac17d637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d63b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d63c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac17d68020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d68370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d684f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac17d7a0a0" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac17d7a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d7a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac17d6a7c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fac17d6a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6ab10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac17d7acd0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d7acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d790a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac17d6a020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d6a370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d6a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac17d779b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac17d779b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d77d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac17d600a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d603f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d60578"/>
        <function-ref name="write" scoped="" ref="0x7fac17d60700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d60888"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d60a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fac17facd48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fac17facd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17fab0d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17fab260"/>
        <function-ref name="write" scoped="" ref="0x7fac17fab3e8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17fab570"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17fab6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17fade58" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fade58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17fac1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17fac370"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17fac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fac17fa9020" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fac17fa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17fa9370"/>
        <function-ref name="write" scoped="" ref="0x7fac17fa94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fac17fa9d60" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fac17fa9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17fa80d8"/>
        <function-ref name="write" scoped="" ref="0x7fac17fa8260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17fad1c8" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17fad1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17fad518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17fad6a0"/>
        <function-ref name="request" scoped="" ref="0x7fac17fad828"/>
        <function-ref name="granted" scoped="" ref="0x7fac17fad9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17fadb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fac17fa8ad8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fac17fa8ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17fa8e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fac17f9a020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17f9a370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17f9a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fac17fa3e50" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fac17fa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17fa11e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17fa1370"/>
        <function-ref name="write" scoped="" ref="0x7fac17fa14f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17fa1680"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17fa1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17fa7de8" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17fa7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17fa4170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17fa42f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17fa4480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fac17f9dd08" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fac17f9dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac17f9c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fac17f9a838" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7fac17f9a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17f9ab88"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17f9ad10"/>
        <function-ref name="isState" scoped="" ref="0x7fac17f99020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17f991a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17f99330"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17f994b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac17f9e1e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fac17f9e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17f9e538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17f9e6c0"/>
        <function-ref name="request" scoped="" ref="0x7fac17f9e848"/>
        <function-ref name="granted" scoped="" ref="0x7fac17f9e9d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17f9eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fac17fa0040" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fac17fa0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17fa0390"/>
        <function-ref name="write" scoped="" ref="0x7fac17fa0518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fac17fa0d40" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fac17fa0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17f9f0d8"/>
        <function-ref name="write" scoped="" ref="0x7fac17f9f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac17f99730" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17f99730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17f99a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17f99c08"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17f99d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17f93020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17f931a8"/>
        <function-ref name="get" scoped="" ref="0x7fac17f93330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17f934b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17f93ad8"/>
        <function-ref name="set" scoped="" ref="0x7fac17f93640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17f937c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17f93950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17fa4c10" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17fa4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17fa3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17fa31a8"/>
        <function-ref name="request" scoped="" ref="0x7fac17fa3330"/>
        <function-ref name="granted" scoped="" ref="0x7fac17fa34b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17fa3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fac17f8e5d0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7fac17f8e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17f8e920"/>
        <function-ref name="runTask" scoped="" ref="0x7fac17f8eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fac17f9fa98" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fac17f9fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17f9fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17f37978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17f37978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17f37cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17f37e50"/>
        <function-ref name="isState" scoped="" ref="0x7fac17f36020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17f361a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17f36330"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17f364b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17f32790" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17f32790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17f32ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17f32c68"/>
        <function-ref name="isState" scoped="" ref="0x7fac17f32df0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17f31020"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17f311a8"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17f31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17f2e438" loc="66:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17f2e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17f2e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17f2d020" loc="67:/opt/tinyos-2.1.2//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17f2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17f2d370"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17f2d4f8"/>
        <function-ref name="isState" scoped="" ref="0x7fac17f2d680"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17f2d808"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17f2d990"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17f2db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac17dca2a8" loc="43:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fac17dca2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17dca5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17dca780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac17dcbc18" loc="42:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fac17dcbc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac17dca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17dcc960" loc="39:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17dcc960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17dcccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17dcb020" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17dcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17dcb370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17dcb4f8"/>
        <function-ref name="request" scoped="" ref="0x7fac17dcb680"/>
        <function-ref name="granted" scoped="" ref="0x7fac17dcb808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17dcb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac17f08cc0" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f08cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17f0e0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17f0e228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac17f12a20" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fac17f12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac17f12d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17f12400" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17f12400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17f12750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fac17f081f0" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fac17f081f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fac17f08540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fac17f086c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7fac17f08850"/>
        <function-ref name="write" scoped="" ref="0x7fac17f089d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17f0e9f8" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17f0e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17f0ed48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17f0c020"/>
        <function-ref name="request" scoped="" ref="0x7fac17f0c1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17f0c330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17f0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fac17ec2b58" loc="296:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fac17ec2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17ec1020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac17ec11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac17f03020" loc="94:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fac17f03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17f03370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17f034f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7fac17ee5208" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7fac17ee5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17ee5558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17ee56e0"/>
        <function-ref name="request" scoped="" ref="0x7fac17ee5868"/>
        <function-ref name="granted" scoped="" ref="0x7fac17ee59f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17ee5b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac17f05d80" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fac17f05d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac17f04170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17f057a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17f057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17f05af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fac17f00020" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fac17f00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fac17f00370"/>
        <function-ref name="sleep" scoped="" ref="0x7fac17ee67c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fac17f00680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17ee6950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fac17f00990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fac17f00b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac17f00ca0"/>
        <function-ref name="read" scoped="" ref="0x7fac17f00e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fac17eff020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac17eff1a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fac17eff330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac17eff4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fac17eff640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fac17eff8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fac17effa50"/>
        <function-ref name="write" scoped="" ref="0x7fac17effbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac17effd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fac17ee6020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fac17ee61a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fac17ee6330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac17ee64b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fac17f004f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fac17f00808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fac17ee6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fac17f04428" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fac17f04428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fac17f04778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fac17f04900"/>
        <function-ref name="splitRead" scoped="" ref="0x7fac17f04a88"/>
        <function-ref name="write" scoped="" ref="0x7fac17f04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17f03c88" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17f03c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17f02020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17f021a8"/>
        <function-ref name="request" scoped="" ref="0x7fac17f02330"/>
        <function-ref name="granted" scoped="" ref="0x7fac17f024b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17f02640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac17ee15d0" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17ee15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17ee1920"/>
        <function-ref name="userId" scoped="" ref="0x7fac17ee1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fac17ee1d78" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fac17ee1d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fac17ee30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fac17e97020" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fac17e97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fac17e97370"/>
        <function-ref name="sleep" scoped="" ref="0x7fac17e957c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fac17e97680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17e95950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fac17e97990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fac17e97b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac17e97ca0"/>
        <function-ref name="read" scoped="" ref="0x7fac17e97e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fac17e96020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac17e961a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fac17e96330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac17e964b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fac17e96640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fac17e968c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fac17e96a50"/>
        <function-ref name="write" scoped="" ref="0x7fac17e96bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac17e96d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fac17e95020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fac17e951a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fac17e95330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac17e954b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fac17e974f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fac17e97808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fac17e95640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fac17e88190" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fac17e88190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17e884e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17e88668"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17e887f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17e88978"/>
        <function-ref name="get" scoped="" ref="0x7fac17e88b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17e88c88"/>
        <function-ref name="set" scoped="" ref="0x7fac17e88e10"/>
        <function-ref name="clr" scoped="" ref="0x7fac17e87020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fac17e8ede0" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fac17e8ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17e8d170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17e8d2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17e8d480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17e8d608"/>
        <function-ref name="get" scoped="" ref="0x7fac17e8d790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17e8d918"/>
        <function-ref name="set" scoped="" ref="0x7fac17e8daa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17e8dc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fac17e8ac70" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fac17e8ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17e8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17e8e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17e8e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17e8e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17e8e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17e8e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17e8e950"/>
        <function-ref name="clr" scoped="" ref="0x7fac17e8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fac17e8a438" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac17e8a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac17e8a788"/>
        <function-ref name="stop" scoped="" ref="0x7fac17e8a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fac17e87350" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fac17e87350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fac17e876a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fac17e94dc8" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fac17e94dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fac17e91170"/>
        <function-ref name="sleep" scoped="" ref="0x7fac17e8f640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fac17e91480"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17e8f7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fac17e91790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fac17e91918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac17e91aa0"/>
        <function-ref name="read" scoped="" ref="0x7fac17e91c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fac17e91db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac17e90020"/>
        <function-ref name="setClock" scoped="" ref="0x7fac17e901a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac17e90330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fac17e904b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fac17e90740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fac17e908c8"/>
        <function-ref name="write" scoped="" ref="0x7fac17e90a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac17e90bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fac17e90d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fac17e8f020"/>
        <function-ref name="getClock" scoped="" ref="0x7fac17e8f1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac17e8f330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fac17e912f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fac17e91608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fac17e8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fac17e89020" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fac17e89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17e89370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17e894f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17e89680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17e89808"/>
        <function-ref name="get" scoped="" ref="0x7fac17e89990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17e89b18"/>
        <function-ref name="set" scoped="" ref="0x7fac17e89ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17e89e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac17de4020" loc="86:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17de4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac17de4390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17de4518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac17de3020" loc="89:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17de3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac17de3390"/>
        <function-ref name="configure" scoped="" ref="0x7fac17de3518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17de5200" loc="85:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17de5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17de5570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17de56f8"/>
        <function-ref name="request" scoped="" ref="0x7fac17de5880"/>
        <function-ref name="granted" scoped="" ref="0x7fac17de5a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17de5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac17de4760" loc="87:/opt/tinyos-2.1.2//tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17de4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17de4ab0"/>
        <function-ref name="userId" scoped="" ref="0x7fac17de4c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16c6e620" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16c6e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16c6e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fac16c6ebf8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fac16c6ebf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16c6d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16c6d1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16c6d330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16c6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac16c6a820" loc="52:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16c6a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac16c6ab90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16c6ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16c698c0" loc="56:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16c698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16c69c30"/>
        <function-ref name="configure" scoped="" ref="0x7fac16c69db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac16c680a0" loc="57:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac16c680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16c683f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16c68578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16c68700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16c68888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac16c6ca28" loc="51:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac16c6ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16c6cd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac16c6a020"/>
        <function-ref name="request" scoped="" ref="0x7fac16c6a1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac16c6a330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16c6a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac16c69020" loc="53:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16c69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac16c69370"/>
        <function-ref name="userId" scoped="" ref="0x7fac16c694f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac16c68b50" loc="69:/opt/tinyos-2.1.2//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac16c68b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16c67020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac16c671a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fac17dd84a8" loc="45:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fac17dd84a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17dd87f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17dd8980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17dd8b08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17dd8c90"/>
        <function-ref name="get" scoped="" ref="0x7fac17dd8e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17dd7020"/>
        <function-ref name="set" scoped="" ref="0x7fac17dd71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17dd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17ddd870" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17ddd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17dddbc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17dddd48"/>
        <function-ref name="request" scoped="" ref="0x7fac17dda020"/>
        <function-ref name="granted" scoped="" ref="0x7fac17dda1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17dda330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fac17dda700" loc="44:/opt/tinyos-2.1.2//tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fac17dda700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17ddaa50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17ddabd8"/>
        <function-ref name="request" scoped="" ref="0x7fac17ddad60"/>
        <function-ref name="granted" scoped="" ref="0x7fac17dd8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17dd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fac17dc83b8" loc="46:/opt/tinyos-2.1.2//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17dc83b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17dc8708"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17dc8890"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17dc8a18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17dc8ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17dc8d28"/>
        <function-ref name="get" scoped="" ref="0x7fac17dc5020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17dc51a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17dc57c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17dc5330"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17dc54b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17dc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fac17dc03b8" loc="50:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fac17dc03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17dc0708"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17dc0890"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17dc0a18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17dc0ba0"/>
        <function-ref name="get" scoped="" ref="0x7fac17dc0d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17dbf020"/>
        <function-ref name="set" scoped="" ref="0x7fac17dbf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17dbf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17dc2670" loc="46:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17dc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17dc29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fac17dbf648" loc="51:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fac17dbf648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17dbf998"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17dbfb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17dbfca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17dbfe30"/>
        <function-ref name="get" scoped="" ref="0x7fac17dbe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17dbe1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17dbe330"/>
        <function-ref name="clr" scoped="" ref="0x7fac17dbe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fac17dc2c38" loc="47:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17dc2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17dc1020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17dc11a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17dc1330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17dc14b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17dc1640"/>
        <function-ref name="get" scoped="" ref="0x7fac17dc17c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17dc1950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17dc0020"/>
        <function-ref name="set" scoped="" ref="0x7fac17dc1ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17dc1c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17dc1de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fac17dbe7d0" loc="52:/opt/tinyos-2.1.2//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fac17dbe7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17dbeb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17dbeca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17dbee30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17dbc020"/>
        <function-ref name="get" scoped="" ref="0x7fac17dbc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17dbc330"/>
        <function-ref name="set" scoped="" ref="0x7fac17dbc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17dbc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fac17dc3b08" loc="44:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fac17dc3b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17dc3e58"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17da2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17da21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17da2330"/>
        <function-ref name="get" scoped="" ref="0x7fac17da24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17da2640"/>
        <function-ref name="set" scoped="" ref="0x7fac17da27c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17da2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fac17da2ca8" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fac17da2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17da1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17da11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17da1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17da14b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17da1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17da17c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17da1950"/>
        <function-ref name="clr" scoped="" ref="0x7fac17da1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fac17d9f020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17d9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17d9f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fac17da1e30" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fac17da1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17da01a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17da0330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17da04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17da0640"/>
        <function-ref name="get" scoped="" ref="0x7fac17da07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17da0950"/>
        <function-ref name="set" scoped="" ref="0x7fac17da0ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17da0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac17d497c0" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d49d10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac17d54cd0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fac17d54cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d530a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac17d4d7c0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4db10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac17d472e8" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d47638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac17d47a88" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fac17d47a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d47dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac17d3b2e8" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3b638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac17d3e2e8" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17d3e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3e638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac17d52020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d52370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac17d3f2e8" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d3f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3f638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac17d4c7c0" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac17d4c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4cb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac17d4b7c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d4b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4bb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac17d44a88" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fac17d44a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d44dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac17d462e8" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d46638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17d55740" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d55740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17d55a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17d55c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17d55da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac17d51900" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d51900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d51c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac17d4f020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac17d4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d4f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac17d4f738" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d4f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d4fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac17d3fa88" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3fdd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac17d52c50" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d52c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac17d4b020" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4b370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac17d4c020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4c370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac17d546b8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d546b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d54a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac17d3da88" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d3da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3ddd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac17d3ea88" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17d3ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3edd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac17d422e8" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fac17d422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d42638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac17d40a88" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d40a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d40dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac17d452e8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d45638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d457c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac17d3ba88" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d3ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d3a5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d3a770"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3a8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d3aa80"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d3ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac17d540a0" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17d540a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d543f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac17d4d020" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fac17d4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d4d370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d4d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac17d49020" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d49370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d494f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac17d46a88" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d46a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d46dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac17d482e8" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d482e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d48638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac17d53368" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac17d53368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d536b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac17d48a88" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d48a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d48dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17d56a48" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17d56a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17d56d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17d55020"/>
        <function-ref name="request" scoped="" ref="0x7fac17d551a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17d55330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17d554b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac17d4fd50" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d4fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d4e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac17d4e9b8" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fac17d4e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d4ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac17d402e8" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac17d402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d40638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac17d41a88" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d41a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d41dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac17d512e8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d51638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac17d412e8" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d41638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac17d3d2e8" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fac17d3d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d3d638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d3d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac17d42a88" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d42a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d42dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac17d53980" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac17d53980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d53cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac17d442e8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fac17d442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d44638"/>
        <function-ref name="write" scoped="" ref="0x7fac17d447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac17d52638" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d52638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d52988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac17d45a88" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d45a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d45dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac17d4e3a0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac17d4e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d4e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac17d39020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d39370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d394f8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d39680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d39808"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d39990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac17d27c90" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17d27c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d263e8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d26570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac17d313a0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fac17d313a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d316f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac17d2bdd8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17d2bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d29170"/>
        <function-ref name="write" scoped="" ref="0x7fac17d292f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac17d257c0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17d257c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d25b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d25c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac17d24020" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fac17d24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d24370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d244f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac17d197c0" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac17d197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d19b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d19c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac17d1b7c0" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17d1b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1bb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac17d30638" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac17d30638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d30988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac17d1d7c0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17d1d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1db10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac17d29d60" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac17d29d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d280d8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d28260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac17d28cc8" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac17d28cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d270a0"/>
        <function-ref name="write" scoped="" ref="0x7fac17d27228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac17d20020" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fac17d20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d20370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac17d247c0" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac17d247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d24b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d24c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17d33da0" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17d33da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17d32170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17d322f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17d32480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac17d2d020" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17d2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac17d2d638" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac17d2d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac17d2dd50" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fac17d2dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac17d1b020" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17d1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1b370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac17d2e2e8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17d2e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac17d28528" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17d28528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d28878"/>
        <function-ref name="write" scoped="" ref="0x7fac17d28a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac17d295c0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17d295c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d29910"/>
        <function-ref name="write" scoped="" ref="0x7fac17d29a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac17d32d60" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac17d32d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d310d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac17d19020" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac17d19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d19370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d194f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac17d1a020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17d1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1a370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac17d207c0" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fac17d207c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d20b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d20c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac17d1d020" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fac17d1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1d370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac17d227c0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fac17d227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d22b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d22c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac17d18020" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac17d18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d18770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d188f8"/>
        <function-ref name="write" scoped="" ref="0x7fac17d18a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d18c08"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d18d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac17d32748" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17d32748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d32a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac17d2b638" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fac17d2b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d2b988"/>
        <function-ref name="write" scoped="" ref="0x7fac17d2bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac17d274f0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17d274f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d27840"/>
        <function-ref name="write" scoped="" ref="0x7fac17d279c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac17d22020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac17d22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d22370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac17d26838" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac17d26838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d26b88"/>
        <function-ref name="write" scoped="" ref="0x7fac17d26d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac17d319b8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac17d319b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d31d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac17d25020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17d25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d25370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17d331a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17d331a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17d334f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17d33680"/>
        <function-ref name="request" scoped="" ref="0x7fac17d33808"/>
        <function-ref name="granted" scoped="" ref="0x7fac17d33990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17d33b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac17d2c3a0" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac17d2c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac17d2b020" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fac17d2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac17d1e7c0" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac17d1e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1eb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac17d1e020" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac17d1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1e370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac17d2e900" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17d2e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac17d1f7c0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17d1f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1fb10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac17d1a7c0" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fac17d1a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1ab10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac17d1f020" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17d1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d1f370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d1f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac17d30020" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac17d30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d30370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac17d217c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fac17d217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d21b10"/>
        <function-ref name="write" scoped="" ref="0x7fac17d21c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac17d30c50" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac17d30c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac17d21020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fac17d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17d21370"/>
        <function-ref name="write" scoped="" ref="0x7fac17d214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac17d2c9b8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac17d2c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17d2cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac17d170a0" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac17d170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17d173f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17d17578"/>
        <function-ref name="write" scoped="" ref="0x7fac17d17700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17d17888"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17d17a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fac17d0f2b8" loc="54:/opt/tinyos-2.1.2//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac17d0f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac17d0f608"/>
        <function-ref name="changed" scoped="" ref="0x7fac17d0f790"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac17d0f918"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac17d0faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fac17d11d10" loc="40:/opt/tinyos-2.1.2//tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac17d11d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fac17cfe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac17ced140" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac17ced140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac17ced490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac17ced618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac17ced7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac17ced928"/>
        <function-ref name="setCca" scoped="" ref="0x7fac17cedab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac17cedc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fac17ceccb8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac17ceccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17ceb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fac17cee480" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac17cee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17cee7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17cee958"/>
        <function-ref name="modify" scoped="" ref="0x7fac17ceeae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17ceec68"/>
        <function-ref name="resend" scoped="" ref="0x7fac17ceedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac17cf1c48" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac17cf1c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac17cee020"/>
        <function-ref name="stop" scoped="" ref="0x7fac17cee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fac17ceb458" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fac17ceb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17ceb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac17cc64b0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac17cc64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac17cc6800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac17cc6988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac17cc6b10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac17cc6c98"/>
        <function-ref name="setCca" scoped="" ref="0x7fac17cc6e20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac17cc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fac17cbe150" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac17cbe150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17cbd700"/>
        <function-ref name="clear" scoped="" ref="0x7fac17cbdde0"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17cbd020"/>
        <function-ref name="set" scoped="" ref="0x7fac17cbb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fac17cae8a8" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17cae8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17caebf8"/>
        <function-ref name="write" scoped="" ref="0x7fac17caed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fac17cad130" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17cad130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cad480"/>
        <function-ref name="write" scoped="" ref="0x7fac17cad608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fac17cc5428" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac17cc5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17cc5778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fac17cb1020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac17cb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17cb1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fac17cba9a8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fac17cba9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac17cbacf8"/>
        <function-ref name="disable" scoped="" ref="0x7fac17cbae80"/>
        <function-ref name="captured" scoped="" ref="0x7fac17cb9030"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac17cb91b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fac17cc4648" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7fac17cc4648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17cc2cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17cc3d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fac17cc26b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17cc2230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac17cc0190"/>
        <function-ref name="start" scoped="" ref="0x7fac17cc33f0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17cc38c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac17cc0628" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17cc0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac17cc0978"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac17cc0b00"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac17cc0c88"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac17cc0e10"/>
        <function-ref name="getPower" scoped="" ref="0x7fac17cbf020"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac17cbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fac17cb30c8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17cb30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cb3418"/>
        <function-ref name="write" scoped="" ref="0x7fac17cb35a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fac17cb3938" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac17cb3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cb3c88"/>
        <function-ref name="write" scoped="" ref="0x7fac17cb3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fac17ca71b8" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17ca71b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17ca7508"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac17ca7690"/>
        <function-ref name="sfd" scoped="" ref="0x7fac17ca7818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac17cc76d0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac17cc76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17cc7a20"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17cc7ba8"/>
        <function-ref name="modify" scoped="" ref="0x7fac17cc7d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17cc6020"/>
        <function-ref name="resend" scoped="" ref="0x7fac17cc61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fac17cb5960" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17cb5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17cb5cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17cb5e38"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17cb4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fac17cb1710" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17cb1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17cb1a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac17cb8800" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fac17cb8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17cb8b50"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17cb8cd8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17cb8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17cb7020"/>
        <function-ref name="get" scoped="" ref="0x7fac17cb71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17cb7330"/>
        <function-ref name="set" scoped="" ref="0x7fac17cb74b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17cb7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17cca808" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17cca808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17ccab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac17cbf4d8" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17cbf4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17cbf828"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac17cbf9b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17cbfb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fac17cbbd88" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17cbbd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17cba170"/>
        <function-ref name="isSet" scoped="" ref="0x7fac17cba2f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17cba480"/>
        <function-ref name="set" scoped="" ref="0x7fac17cba608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fac17cb1e10" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17cb1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17caf3e8"/>
        <function-ref name="write" scoped="" ref="0x7fac17caf570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac17cb6b58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fac17cb6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17cb5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17cb51a8"/>
        <function-ref name="request" scoped="" ref="0x7fac17cb5330"/>
        <function-ref name="granted" scoped="" ref="0x7fac17cb54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17cb5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fac17cb9500" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fac17cb9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17cb9950"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17cb9ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17cb9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17cb9de8"/>
        <function-ref name="get" scoped="" ref="0x7fac17cb8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17cb81a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17cb8330"/>
        <function-ref name="clr" scoped="" ref="0x7fac17cb84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fac17cad960" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17cad960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cadcb0"/>
        <function-ref name="write" scoped="" ref="0x7fac17cade38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fac17cac208" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac17cac208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cac558"/>
        <function-ref name="write" scoped="" ref="0x7fac17cac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fac17cb21b0" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17cb21b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17cb2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fac17cb7988" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fac17cb7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17cb7cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17cb7e60"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17cb6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17cb61a8"/>
        <function-ref name="get" scoped="" ref="0x7fac17cb6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17cb64b8"/>
        <function-ref name="set" scoped="" ref="0x7fac17cb6640"/>
        <function-ref name="clr" scoped="" ref="0x7fac17cb67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac17ca7ad0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17ca7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17ca7e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17caa020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17caa1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17caa330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17caa4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17caa640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17caa7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17caade8"/>
        <function-ref name="set" scoped="" ref="0x7fac17caa950"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17caaad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17caac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fac17cae020" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17cae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17cae370"/>
        <function-ref name="write" scoped="" ref="0x7fac17cae4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac17ccae48" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac17ccae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac17cc71c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17cc7348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fac17cb4390" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac17cb4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17cb46e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17cb4868"/>
        <function-ref name="write" scoped="" ref="0x7fac17cb49f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17cb4b78"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17cb4d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fac17cb2880" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac17cb2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17cb2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fac17caf8f8" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac17caf8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17cafc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fac17cc5b70" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fac17cc5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17cc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac17c12a88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac17c12a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c11020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac17c1c020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fac17c1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac17c16a88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac17c16a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c16dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac17c10470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17c10470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c107c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c10948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac17c10c10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fac17c10c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0f020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac17c04470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac17c04470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c047c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c04948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac17c07470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17c07470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c077c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c07948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac17c1b2e8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac17c1b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac17c08470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac17c08470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c087c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c08948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac17c15a88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac17c15a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c15dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17c14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac17c14a88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac17c14a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c14dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17c12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac17c0dc10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fac17c0dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0b020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac17c0f470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac17c0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0f7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac17c1e948" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac17c1e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac17c1ec98"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac17c1ee20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac17c1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac17c1ac50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac17c1ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac17c182e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac17c182e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c18738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac17c18a00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fac17c18a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c18d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac17c08c10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17c08c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c07020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac17c1a020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac17c1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac17c142e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac17c142e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c14638"/>
        <function-ref name="write" scoped="" ref="0x7fac17c147c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac17c152e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac17c152e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c15638"/>
        <function-ref name="write" scoped="" ref="0x7fac17c157c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac17c1d900" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac17c1d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac17c06c10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac17c06c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c04020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac17c07c10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17c07c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c06020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac17c0b470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fac17c0b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0b7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac17c09c10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fac17c09c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c08020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac17c0e470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fac17c0e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0e7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac17c04c10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac17c04c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17c035e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17c03770"/>
        <function-ref name="write" scoped="" ref="0x7fac17c038f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17c03a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17c03c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac17c1d2e8" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17c1d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac17c162e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fac17c162e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c16638"/>
        <function-ref name="write" scoped="" ref="0x7fac17c167c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac17c122e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac17c122e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c12638"/>
        <function-ref name="write" scoped="" ref="0x7fac17c127c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac17c0fc10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac17c0fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0e020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac17c11470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac17c11470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c117c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c11948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac17c1c638" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac17c1c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac17c11c10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17c11c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c10020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17c1fcb8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17c1fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17c1e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17c1e228"/>
        <function-ref name="request" scoped="" ref="0x7fac17c1e3b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac17c1e538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17c1e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac17c17060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac17c17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c173b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac17c17c90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fac17c17c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac17c09470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac17c09470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c097c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c09948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac17c0ac10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac17c0ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c09020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac17c1a638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17c1a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac17c0a470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac17c0a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0a7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac17c06470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fac17c06470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c067c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c06948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac17c0bc10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac17c0bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0a020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac17c1cc50" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac17c1cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac17c0d470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fac17c0d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0d7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac17c1b900" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac17c1b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c1bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac17c0ec10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fac17c0ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17c0d020"/>
        <function-ref name="write" scoped="" ref="0x7fac17c0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac17c17678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac17c17678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17c179c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac17c02020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac17c02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17c02370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17c024f8"/>
        <function-ref name="write" scoped="" ref="0x7fac17c02680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17c02808"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17c02990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fac17bf64b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17bf64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17bf6808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac17bf6990"/>
        <function-ref name="sfd" scoped="" ref="0x7fac17bf6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac17bf6de8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac17bf6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17bf5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fac17bf5578" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fac17bf5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17bf58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac17bf9b40" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac17bf9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac17bf6020"/>
        <function-ref name="stop" scoped="" ref="0x7fac17bf61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fac17bee378" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fac17bee378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17bee6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17bee850"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17bee9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17beeb60"/>
        <function-ref name="get" scoped="" ref="0x7fac17beece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17beee70"/>
        <function-ref name="set" scoped="" ref="0x7fac17bed020"/>
        <function-ref name="clr" scoped="" ref="0x7fac17bed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fac17be64b0" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fac17be64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac17be6800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac17be6988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac17be6b10"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac17be6c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac17be6e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac17be5020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac17be51a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac17be5330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac17be54b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac17be5640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac17be57c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac17be5950"/>
        <function-ref name="sync" scoped="" ref="0x7fac17be5ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17be5d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac17be4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fac17bd0cb0" loc="148:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7fac17bd0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17bcf0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac17bcf228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fac17be45e8" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac17be45e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17be3a88"/>
        <function-ref name="clear" scoped="" ref="0x7fac17be2190"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17be33a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17be2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fac17bed508" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fac17bed508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17bed858"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17bed9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17bedb68"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17bedcf0"/>
        <function-ref name="get" scoped="" ref="0x7fac17bede78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17beb030"/>
        <function-ref name="set" scoped="" ref="0x7fac17beb1b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17beb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fac17bdf1e8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac17bdf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17bdf538"/>
        <function-ref name="write" scoped="" ref="0x7fac17bdf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fac17bdfa18" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac17bdfa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17bdfd68"/>
        <function-ref name="write" scoped="" ref="0x7fac17bde020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fac17bdebc0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac17bdebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17bdd020"/>
        <function-ref name="write" scoped="" ref="0x7fac17bdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac17be8c68" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17be8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac17be7020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac17be71a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac17be7330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac17be74b8"/>
        <function-ref name="getPower" scoped="" ref="0x7fac17be7640"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac17be77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fac17bf1930" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac17bf1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17bf1c80"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac17bf1e08"/>
        <function-ref name="sfd" scoped="" ref="0x7fac17bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fac17be9de8" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac17be9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17be8170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac17bef120" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fac17bef120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17bef470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17bef5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17bef780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17bef908"/>
        <function-ref name="get" scoped="" ref="0x7fac17befa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17befc18"/>
        <function-ref name="set" scoped="" ref="0x7fac17befda0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17bee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fac17bdd538" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac17bdd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17bdd888"/>
        <function-ref name="write" scoped="" ref="0x7fac17bdda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17bf4ad8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17bf4ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17bf4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac17be7af8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17be7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17be7e48"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac17be6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17be61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac17bf02f0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac17bf02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17bf0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac17bea3b0" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fac17bea3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17bea700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17bea888"/>
        <function-ref name="request" scoped="" ref="0x7fac17beaa10"/>
        <function-ref name="granted" scoped="" ref="0x7fac17beab98"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17bead20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fac17bde378" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac17bde378"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17bde6c8"/>
        <function-ref name="write" scoped="" ref="0x7fac17bde850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fac17be9100" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac17be9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac17be9450"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17be95d8"/>
        <function-ref name="write" scoped="" ref="0x7fac17be9760"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac17be98e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17be9a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fac17bddd88" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac17bddd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17bdc3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fac17bf0a48" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fac17bf0a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac17bf0d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac17bdc6a0" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17bdc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17bdc9f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17bdcb78"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17bdcd00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17bdb020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17bdb1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac17bdb330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17bdb4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17bdbad8"/>
        <function-ref name="set" scoped="" ref="0x7fac17bdb640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17bdb7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17bdb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fac17be08c0" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac17be08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17be0c10"/>
        <function-ref name="write" scoped="" ref="0x7fac17be0d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fac17be01c0" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac17be01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17be0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fac17beb720" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac17beb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17beba70"/>
        <function-ref name="disable" scoped="" ref="0x7fac17bebbf8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17bebd80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac17bea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fac17be8510" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac17be8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac17be8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac17bf1148" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac17bf1148"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac17bf1498"/>
        <function-ref name="stop" scoped="" ref="0x7fac17bf1620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac17b726b0" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac17b726b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac17b72a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac17b764a8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b764a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac17b767f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac17b76980"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac17b76b08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac17b76c90"/>
        <function-ref name="getPower" scoped="" ref="0x7fac17b76e18"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac17b73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac17b71130" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b71130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17b70588"/>
        <function-ref name="clear" scoped="" ref="0x7fac17b70c68"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17b71e80"/>
        <function-ref name="set" scoped="" ref="0x7fac17b6e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fac17b73d08" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b73d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17b720a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac17b72228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17b723b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fac17b6aac8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b6aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17b6ae18"/>
        <function-ref name="isSet" scoped="" ref="0x7fac17b69020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17b691a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17b69330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac17b6d020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17b6c478"/>
        <function-ref name="clear" scoped="" ref="0x7fac17b6cb58"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17b6dd70"/>
        <function-ref name="set" scoped="" ref="0x7fac17b6a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac17b733b8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fac17b733b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac17b73708"/>
        <function-ref name="noAck" scoped="" ref="0x7fac17b73890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac17b73a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac17b64630" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac17b64630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac17b64980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac17b662e8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17b662e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac17b66638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac17b667c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac17b66948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac17b66ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7fac17b66c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac17b66de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac17b5b618" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac17b5b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17b5b968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac17b5baf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17b5bc78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17b5be00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac17b5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac17b63060" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac17b63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17b614b8"/>
        <function-ref name="clear" scoped="" ref="0x7fac17b61b98"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17b63db0"/>
        <function-ref name="set" scoped="" ref="0x7fac17b602b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fac17b65b60" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17b65b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17b64020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac17b641a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17b64330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fac17b5cac8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac17b5cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17b5ce18"/>
        <function-ref name="isSet" scoped="" ref="0x7fac17b5b020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17b5b1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17b5b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fac17b5a520" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac17b5a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17b590f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fac17b59788" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac17b59788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17b573a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac17b5f020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac17b5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17b5d478"/>
        <function-ref name="clear" scoped="" ref="0x7fac17b5db58"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17b5fd70"/>
        <function-ref name="set" scoped="" ref="0x7fac17b5c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac17b65210" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fac17b65210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac17b65560"/>
        <function-ref name="noAck" scoped="" ref="0x7fac17b656e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac17b65870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac17b0b528" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac17b0b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17b0a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac17b0a720" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac17b0a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17aff578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac17afe020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac17affa00"/>
        <function-ref name="overflow" scoped="" ref="0x7fac17afe4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fac17afad78" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fac17afad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17af5088"/>
        <function-ref name="fired" scoped="" ref="0x7fac17af86c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17af6470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17af6020"/>
        <function-ref name="getdt" scoped="" ref="0x7fac17af5928"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17af54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17af8b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17af98f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17af6a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17af9d90"/>
        <function-ref name="stop" scoped="" ref="0x7fac17af8278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac17af3020" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac17af3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17af3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17afa080" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17afa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17afa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fac17aea338" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fac17aea338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17ae90c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac17ae99d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac17ae9548"/>
        <function-ref name="overflow" scoped="" ref="0x7fac17ae9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17af1618" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17af1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17af1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fac17aee020" loc="28:/opt/tinyos-2.1.2//tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fac17aee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17aeb690"/>
        <function-ref name="fired" scoped="" ref="0x7fac17aed6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fac17aeb088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17aedb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac17aebb18"/>
        <function-ref name="start" scoped="" ref="0x7fac17aeed70"/>
        <function-ref name="stop" scoped="" ref="0x7fac17aed270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac17a80020" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac17a80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17a7d690"/>
        <function-ref name="fired" scoped="" ref="0x7fac17a7f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fac17a7d088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17a7fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac17a7db18"/>
        <function-ref name="start" scoped="" ref="0x7fac17a80d70"/>
        <function-ref name="stop" scoped="" ref="0x7fac17a7f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17a817d8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17a817d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fac1895f388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fac1895f388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17a81b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac17a7c128" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac17a7c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17a7ce78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac17a7b7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac17a7b330"/>
        <function-ref name="overflow" scoped="" ref="0x7fac17a7bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fac16b8a020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fac16b8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fac16b8a370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fac16b8a4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fac16b8a680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fac16b8a808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fac16b8a990"/>
        <function-ref name="setControl" scoped="" ref="0x7fac16b8ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac16b97da8" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac16b97da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac16b93470"/>
        <function-ref name="fired" scoped="" ref="0x7fac16b94510"/>
        <function-ref name="startAt" scoped="" ref="0x7fac16b94e20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac16b94998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac16b938f8"/>
        <function-ref name="start" scoped="" ref="0x7fac16b95b38"/>
        <function-ref name="stop" scoped="" ref="0x7fac16b94088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16b97600" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16b97600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16b97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac16b92020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac16b92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac16b92d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac16b906b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac16b90230"/>
        <function-ref name="overflow" scoped="" ref="0x7fac16b90b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fac16b850a0" loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fac16b850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fac16b853f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fac16b85578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fac16b85700"/>
        <function-ref name="countBusy" scoped="" ref="0x7fac16b85888"/>
        <function-ref name="getAssr" scoped="" ref="0x7fac16b85a10"/>
        <function-ref name="setAssr" scoped="" ref="0x7fac16b85b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fac16b89020" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fac16b89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fac16b877a8"/>
        <function-ref name="fired" scoped="" ref="0x7fac16b88560"/>
        <function-ref name="get" scoped="" ref="0x7fac16b89ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fac16b889e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fac16b87c30"/>
        <function-ref name="set" scoped="" ref="0x7fac16b88088"/>
        <function-ref name="start" scoped="" ref="0x7fac16b88e70"/>
        <function-ref name="stop" scoped="" ref="0x7fac16b87320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac16b8f168" loc="30:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac16b8f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fac16b8b270"/>
        <function-ref name="test" scoped="" ref="0x7fac16b8d930"/>
        <function-ref name="get" scoped="" ref="0x7fac16b8fce8"/>
        <function-ref name="setScale" scoped="" ref="0x7fac16b8b6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fac16b8bbd0"/>
        <function-ref name="reset" scoped="" ref="0x7fac16b8eb58"/>
        <function-ref name="overflow" scoped="" ref="0x7fac16b8e6d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fac16b8ddb8"/>
        <function-ref name="set" scoped="" ref="0x7fac16b8e1f8"/>
        <function-ref name="start" scoped="" ref="0x7fac16b8d020"/>
        <function-ref name="stop" scoped="" ref="0x7fac16b8d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fac17a4a5e8" loc="74:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fac17a4a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17a4a938"/>
        <function-ref name="runTask" scoped="" ref="0x7fac17a4aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fac17a4e648" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac17a4e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17a4bcc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17a4dd50"/>
        <function-ref name="startAt" scoped="" ref="0x7fac17a4b6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17a4b230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac17a4a190"/>
        <function-ref name="start" scoped="" ref="0x7fac17a4d3f0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17a4d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac17a53290" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17a53290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17a4f5f0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17a52ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17a518c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17a51470"/>
        <function-ref name="getdt" scoped="" ref="0x7fac17a4e020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17a4fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17a51020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17a53dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17a4f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17a522b8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17a52758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fac179fc618" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fac179fc618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac179fc968"/>
        <function-ref name="runTask" scoped="" ref="0x7fac179fcaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fac17a015a0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fac17a015a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac179fd8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fac179ff020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac179ffd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac179ff8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac179fc1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac179fdd40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac179ff470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17a00118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac179fd320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17a005b8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17a00a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac17a070c8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17a070c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17a03610"/>
        <function-ref name="fired" scoped="" ref="0x7fac17a06a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17a04900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17a04490"/>
        <function-ref name="getdt" scoped="" ref="0x7fac17a01020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17a03a80"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17a04020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17a07c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17a03020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17a06118"/>
        <function-ref name="stop" scoped="" ref="0x7fac17a065d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac179fac38" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac179fac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac179f8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac179f8e48" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac179f8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac179f7be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac179f6548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac179f60c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac179f69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac179f1420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac179f1420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac179dd6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fac179dfdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac179dead8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac179de688"/>
        <function-ref name="getdt" scoped="" ref="0x7fac179db020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac179ddb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac179de238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac179df020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac179dd0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac179df4c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac179df960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fac179e77d8" loc="49:/opt/tinyos-2.1.2//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fac179e77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac179e4a18"/>
        <function-ref name="fired" scoped="" ref="0x7fac179e5158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac179e5e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac179e59f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fac179e32e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fac179e4e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac179e55a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac179e6370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac179e4448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac179e6810"/>
        <function-ref name="stop" scoped="" ref="0x7fac179e6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac179cca88" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac179cca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cb020"/>
        <function-ref name="write" scoped="" ref="0x7fac179cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac179d6100" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fac179d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d6450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac179d0a88" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac179d0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179d0dd8"/>
        <function-ref name="write" scoped="" ref="0x7fac179cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac179ca470" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac179ca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179ca7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179ca948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac179cac10" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fac179cac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c9020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac179be470" loc="94:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fac179be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179be7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179be948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac179c0470" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fac179c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c07c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac179d53a0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fac179d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac179c2470" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac179c2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c27c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac179cfa88" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fac179cfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cfdd8"/>
        <function-ref name="write" scoped="" ref="0x7fac179cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac179cda88" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fac179cda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cddd8"/>
        <function-ref name="write" scoped="" ref="0x7fac179cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac179c6c10" loc="79:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fac179c6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c5020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac179c9470" loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fac179c9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c97c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac179d8a18" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac179d8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac179d8d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac179d7020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac179d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac179d3c50" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac179d3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac179d22e8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fac179d22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d2738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac179d2a00" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fac179d2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac179c2c10" loc="89:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac179c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c0020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac179d3020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac179d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac179cd2e8" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac179cd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cd638"/>
        <function-ref name="write" scoped="" ref="0x7fac179cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac179cf2e8" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac179cf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cf638"/>
        <function-ref name="write" scoped="" ref="0x7fac179cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac179d7a88" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fac179d7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac179bfc10" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fac179bfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179be020"/>
        <function-ref name="write" scoped="" ref="0x7fac179be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac179c0c10" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fac179c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179bf020"/>
        <function-ref name="write" scoped="" ref="0x7fac179bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac179c5470" loc="80:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fac179c5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c57c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac179c3c10" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fac179c3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c2020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac179c8470" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fac179c8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c87c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac179bec10" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fac179bec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac179bd5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac179bd770"/>
        <function-ref name="write" scoped="" ref="0x7fac179bd8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac179bda80"/>
        <function-ref name="readDone" scoped="" ref="0x7fac179bdc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac179d7470" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fac179d7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac179d02e8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fac179d02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179d0638"/>
        <function-ref name="write" scoped="" ref="0x7fac179d07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac179cc2e8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac179cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cc638"/>
        <function-ref name="write" scoped="" ref="0x7fac179cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac179c9c10" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fac179c9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c8020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac179cb470" loc="70:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fac179cb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179cb7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179cb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac179d6718" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fac179d6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac179cbc10" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac179cbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179ca020"/>
        <function-ref name="write" scoped="" ref="0x7fac179ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac179d9db8" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac179d9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac179d8170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac179d82f8"/>
        <function-ref name="request" scoped="" ref="0x7fac179d8480"/>
        <function-ref name="granted" scoped="" ref="0x7fac179d8608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac179d8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac179d1060" loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fac179d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d13b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac179d1c90" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fac179d1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac179c3470" loc="86:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fac179c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c37c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac179c4c10" loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fac179c4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c3020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac179d3638" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac179d3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac179c4470" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac179c4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c47c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac179bf470" loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fac179bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179bf7c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179bf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac179c5c10" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac179c5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c4020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac179d6d30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fac179d6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac179c6470" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fac179c6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c67c0"/>
        <function-ref name="write" scoped="" ref="0x7fac179c6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac179d59b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fac179d59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac179c8c10" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fac179c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac179c6020"/>
        <function-ref name="write" scoped="" ref="0x7fac179c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac179d1678" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fac179d1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac179d19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac179bc020" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fac179bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac179bc370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac179bc4f8"/>
        <function-ref name="write" scoped="" ref="0x7fac179bc680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac179bc808"/>
        <function-ref name="readDone" scoped="" ref="0x7fac179bc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fac17996b98" loc="46:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fac17996b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac17995020"/>
        <function-ref name="rand32" scoped="" ref="0x7fac179951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fac17994b10" loc="45:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fac17994b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac179966f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1799adb8" loc="44:/opt/tinyos-2.1.2//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1799adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17997170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fac1798fa08" loc="48:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fac1798fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac1798fd58"/>
        <function-ref name="rand32" scoped="" ref="0x7fac1798d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fac179909f0" loc="47:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fac179909f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1798f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17990198" loc="46:/opt/tinyos-2.1.2//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17990198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac179904e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17998338" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17998338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17998688"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17998810"/>
        <function-ref name="isState" scoped="" ref="0x7fac17998998"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17998b20"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17998ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17998e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac17977a40" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac17977a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17977d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17976020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac179761a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17976330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac179764b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac1797ad08" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac1797ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac179770a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17977228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac179773b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17977538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac179776c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac17972750" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac17972750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17972aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17972c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17972db0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17971020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac179711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac17973438" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac17973438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17973788"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17973910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17973a98"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17973c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17973da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fac179702a8" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fac179702a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac179705f8"/>
        <function-ref name="rand32" scoped="" ref="0x7fac17970780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17972080" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17972080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac179723d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac17970a70" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac17970a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17970dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac1796f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac1796f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fac17971428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17971428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17971778"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17971900"/>
        <function-ref name="isState" scoped="" ref="0x7fac17971a88"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17971c10"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17971d98"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17970020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17974978" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17974978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17974cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17974e50"/>
        <function-ref name="isState" scoped="" ref="0x7fac1795f020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac1795f1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fac1795f330"/>
        <function-ref name="forceState" scoped="" ref="0x7fac1795f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac17958560" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac17958560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac179588b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac1795b750" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac1795b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1795baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fac1795be18" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac1795be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac179581a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac17954d30" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac17954d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac179530d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17954628" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17954628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac17954978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac17957958" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac17957958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17957ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac179533c8" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac179533c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17953718"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac179538a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17953a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fac17954060" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac17954060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac179543b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac17927020" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac17927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17927370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac17927670" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac17927670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac179279c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17927b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17927cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17927e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17925020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac1792ba40" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac1792ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac1792bd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1792a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1792a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1792a330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac1792a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac1792adb8" loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fac1792adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17929170"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac179292f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17929480"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17929608"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17929790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac1792a748" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac1792a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1792aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17959e20" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17959e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1792b1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1792b330"/>
        <function-ref name="request" scoped="" ref="0x7fac1792b4b8"/>
        <function-ref name="granted" scoped="" ref="0x7fac1792b640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1792b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac17929ae8" loc="69:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac17929ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17929e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac179281a8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fac179281a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac179284f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac17928680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17928808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17928990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac17928b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac1791d528" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac1791d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac1791d878"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1791da00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1791db88"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1791dd10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac1791c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac1791c358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac1791c358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1791c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fac178efac0" loc="180:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7fac178efac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac178efe10"/>
        <function-ref name="runTask" scoped="" ref="0x7fac178ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac1791c970" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac1791c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac1791ccc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac1791ce48"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac1791b020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac1791b1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fac1791b330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac1791b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac1791f490" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fac1791f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac1791f7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1791f968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1791faf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1791fc78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac1791fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1791a1c0" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1791a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1791a510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1791a698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1791a820"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1791a9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac1791b7a8" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac1791b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac1791baf8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac1791bc80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac1791be08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fac17920dc8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fac17920dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1791f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17921428" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17921428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17921778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17921900"/>
        <function-ref name="request" scoped="" ref="0x7fac17921a88"/>
        <function-ref name="granted" scoped="" ref="0x7fac17921c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17921d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fac17920118" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fac17920118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17920468"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac179205f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17920778"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17920900"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17920a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac1791e188" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac1791e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1791e4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac1791e808" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fac1791e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1791eb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac1791ece0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1791ee68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1791d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac1791d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac178d0c28" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac178d0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac178cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fac178cf2a8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fac178cf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac178cf5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac178cf780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac178cf908"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac178cfa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac178c5dc8" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac178c5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac178c4170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac178c42f8"/>
        <function-ref name="start" scoped="" ref="0x7fac178c4480"/>
        <function-ref name="stop" scoped="" ref="0x7fac178c4608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac178c3838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac178c3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178c3b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178c3d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178c2020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178c21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178c2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac178c2668" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac178c2668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac178c29b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac178c6080" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac178c6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178c63d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178c6558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178c66e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178c6868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178c69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac178c5318" loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac178c5318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac178c5668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac178c57f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac178c5978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac178c5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fac178c4928" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7fac178c4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac178c4c78"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac178c4e00"/>
        <function-ref name="isState" scoped="" ref="0x7fac178c3020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac178c31a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fac178c3330"/>
        <function-ref name="forceState" scoped="" ref="0x7fac178c34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fac178c2d28" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fac178c2d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac178c10a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac178c1228"/>
        <function-ref name="start" scoped="" ref="0x7fac178c13b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac178c1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac178c6c80" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac178c6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac178c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac178be170" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac178be170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac178be4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac178be648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac178be7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac178be958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac178c0d50" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac178c0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac178b60d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac178b6260"/>
        <function-ref name="isState" scoped="" ref="0x7fac178b63e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac178b6570"/>
        <function-ref name="requestState" scoped="" ref="0x7fac178b66f8"/>
        <function-ref name="forceState" scoped="" ref="0x7fac178b6880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac178b0020" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac178b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178b0370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178b04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178b0680"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178b0808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178b0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac178b4578" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac178b4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178b48c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178b4a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178b4bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178b4d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac178b12d0" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fac178b12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac178b1620"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac178b17a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac178b1930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac178b1ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac178b1c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac178ace18" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac178ace18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178ab1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178ab330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178ab4b8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178ab640"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7fac178a29e8" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x7fac178a29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac178a2d38"/>
        <function-ref name="runTask" scoped="" ref="0x7fac178a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7fac178a9490" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x7fac178a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac178a56c8"/>
        <function-ref name="fired" scoped="" ref="0x7fac178a8db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac178a7ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac178a7688"/>
        <function-ref name="getdt" scoped="" ref="0x7fac178a4020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac178a5b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac178a7238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac178a8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac178a50f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac178a84c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac178a8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac178af4c0" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac178af4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac178af810"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178af998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac178afb20"/>
        <function-ref name="cancel" scoped="" ref="0x7fac178afca8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac178afe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7fac178abae8" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7fac178abae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac178abe38"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac178aa020"/>
        <function-ref name="isState" scoped="" ref="0x7fac178aa1a8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac178aa330"/>
        <function-ref name="requestState" scoped="" ref="0x7fac178aa4b8"/>
        <function-ref name="forceState" scoped="" ref="0x7fac178aa640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac178a44a0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac178a44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac178a47f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac178a4978"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac178a4b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fac178aa968" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac178aa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac178aacb8"/>
        <function-ref name="noAck" scoped="" ref="0x7fac178aae40"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac178a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac178ac128" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fac178ac128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac178ac478"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac178ac600"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac178ac788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac178ac910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac178aca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac17878430" loc="67:/opt/tinyos-2.1.2//tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fac17878430"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac17878780"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac17878908"/>
        <function-ref name="isState" scoped="" ref="0x7fac17878a90"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac17878c18"/>
        <function-ref name="requestState" scoped="" ref="0x7fac17878da0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac17877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac178765e8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac178765e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac178728f0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17874020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17874d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac178748c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac178711c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17872d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17874470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17875158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17872320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac178755f8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17875a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac17858358" loc="59:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fac17858358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac178586a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac1785a528" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fac1785a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac1785a878"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1785aa00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1785ab88"/>
        <function-ref name="cancel" scoped="" ref="0x7fac1785ad10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17858020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fac17856140" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fac17856140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac17856490"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac17856618"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac178567a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac17856928"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac17856ab0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac17856c38"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac17856dc0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac17855020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac178551a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac17855330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac178554b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac17855640"/>
        <function-ref name="sync" scoped="" ref="0x7fac178557c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17855a50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac17855bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac1785b630" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac1785b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac1785b980"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac1785bb08"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac1785bc90"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac1785be18"/>
        <function-ref name="setCca" scoped="" ref="0x7fac1785a020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac1785a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fac1785cae8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fac1785cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fac1785ce38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fac17854c78" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fac17854c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac17853020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac178531a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac17853330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac178534b8"/>
        <function-ref name="setCca" scoped="" ref="0x7fac17853640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac178537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac1785d8c8" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac1785d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1785dc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac1785dda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1785c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1785c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac1785c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac17860020" loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac17860020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17860370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac178604f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17860680"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17860808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17860990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac1785fd10" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac1785fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1785e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac17858970" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac17858970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac17858cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac17858e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac17857020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac178571a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fac17857330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac178574b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fac17854020" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac17854020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac17854470"/>
        <function-ref name="changed" scoped="" ref="0x7fac178545f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac17854780"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac17854908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac178577a8" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac178577a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac17857af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac17857c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac17857e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac1785f1c8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac1785f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac1785f518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac17852740" loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17852740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17852a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17852c18"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17852da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17851020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac178511a8"/>
        <function-ref name="get" scoped="" ref="0x7fac17851330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac178514b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17851ad8"/>
        <function-ref name="set" scoped="" ref="0x7fac17851640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac178517c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17851950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac1785e340" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac1785e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac1785e690"/>
        <function-ref name="source" scoped="" ref="0x7fac1785e818"/>
        <function-ref name="address" scoped="" ref="0x7fac1785e9a0"/>
        <function-ref name="destination" scoped="" ref="0x7fac1785eb28"/>
        <function-ref name="setSource" scoped="" ref="0x7fac1785ecb0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac1785ee38"/>
        <function-ref name="type" scoped="" ref="0x7fac1785d020"/>
        <function-ref name="setType" scoped="" ref="0x7fac1785d1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac1785d330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac1785d4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac1785d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fac17853b30" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7fac17853b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17853e80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17852030"/>
        <function-ref name="request" scoped="" ref="0x7fac178521b8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17852340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac178524c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac17737080" loc="49:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac17737080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac177373d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17737558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac177376e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17737868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac177379f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac17737c38" loc="50:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac17737c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17736020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac177361a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17736330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac177364b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac17736640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac17736888" loc="51:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac17736888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac17736bd8"/>
        <function-ref name="source" scoped="" ref="0x7fac17736d60"/>
        <function-ref name="address" scoped="" ref="0x7fac17735020"/>
        <function-ref name="destination" scoped="" ref="0x7fac177351a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fac17735330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac177354b8"/>
        <function-ref name="type" scoped="" ref="0x7fac17735640"/>
        <function-ref name="setType" scoped="" ref="0x7fac177357c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac17735950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac17735ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac17735c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac17734020" loc="52:/opt/tinyos-2.1.2//tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fac17734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac17734370"/>
        <function-ref name="noAck" scoped="" ref="0x7fac177344f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac17734680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac16adf518" loc="49:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac16adf518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac16adf868"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac16adf9f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac16adfb78"/>
        <function-ref name="cancel" scoped="" ref="0x7fac16adfd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac16ade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac16ade268" loc="50:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac16ade268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac16ade5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac16ade740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac16ade8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac16adea50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac16adebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac16adee20" loc="51:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac16adee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac16add1a8"/>
        <function-ref name="source" scoped="" ref="0x7fac16add330"/>
        <function-ref name="address" scoped="" ref="0x7fac16add4b8"/>
        <function-ref name="destination" scoped="" ref="0x7fac16add640"/>
        <function-ref name="setSource" scoped="" ref="0x7fac16add7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac16add950"/>
        <function-ref name="type" scoped="" ref="0x7fac16addad8"/>
        <function-ref name="setType" scoped="" ref="0x7fac16addc60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac16addde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac16adc020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac16adc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac16adc430" loc="52:/opt/tinyos-2.1.2//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fac16adc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac16adc780"/>
        <function-ref name="noAck" scoped="" ref="0x7fac16adc908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac16adca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac16ad37c8" loc="44:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac16ad37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac16ad3b18"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac16ad3ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac16ad3e28"/>
        <function-ref name="cancel" scoped="" ref="0x7fac16ad2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac16ad21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fac16ad2450" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac16ad2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac16ad27a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac16ad2928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac16ad2ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac16ad2c38"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac16ad2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fac16ad1060" loc="47:/opt/tinyos-2.1.2//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac16ad1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac16ad13b0"/>
        <function-ref name="source" scoped="" ref="0x7fac16ad1538"/>
        <function-ref name="address" scoped="" ref="0x7fac16ad16c0"/>
        <function-ref name="destination" scoped="" ref="0x7fac16ad1848"/>
        <function-ref name="setSource" scoped="" ref="0x7fac16ad19d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac16ad1b58"/>
        <function-ref name="type" scoped="" ref="0x7fac16ad1ce0"/>
        <function-ref name="setType" scoped="" ref="0x7fac16ad1e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac16ad0020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac16ad01a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac16ad0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac177ab4f8" loc="43:/opt/tinyos-2.1.2//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac177ab4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac177ab848"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac177ab9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac177abb58"/>
        <function-ref name="cancel" scoped="" ref="0x7fac177abce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac177abe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fac177636f8" loc="48:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac177636f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17763a68"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17763bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17763d78"/>
        <function-ref name="cancel" scoped="" ref="0x7fac17762020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac177621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac17764920" loc="46:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fac17764920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17764c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17764e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17763020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac177631a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17763330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac17760a10" loc="50:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac17760a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17760d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac1775f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac1775f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac1775f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac1775f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fac1775f780" loc="169:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fac1775f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1775fad0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1775fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fac1775e020" loc="126:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fac1775e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1775e370"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1775e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fac177623f0" loc="49:/opt/tinyos-2.1.2//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac177623f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac17762740"/>
        <function-ref name="source" scoped="" ref="0x7fac177628c8"/>
        <function-ref name="address" scoped="" ref="0x7fac17762a50"/>
        <function-ref name="destination" scoped="" ref="0x7fac17762bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7fac17762d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac17760020"/>
        <function-ref name="type" scoped="" ref="0x7fac177601a8"/>
        <function-ref name="setType" scoped="" ref="0x7fac17760330"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac177604b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac17760640"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac177607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac1775a248" loc="55:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1775a248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac1775a598"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac1775a720"/>
        <function-ref name="start" scoped="" ref="0x7fac1775a8a8"/>
        <function-ref name="stop" scoped="" ref="0x7fac1775aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac17759208" loc="57:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac17759208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac17759558"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac177596e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17759868"/>
        <function-ref name="cancel" scoped="" ref="0x7fac177599f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac17759b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac17757020" loc="59:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fac17757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17757370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac177575f8" loc="61:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac177575f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17757948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac17757ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac17757c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac17757de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac17756020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac177536b8" loc="64:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac177536b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac17752c58"/>
        <function-ref name="clear" scoped="" ref="0x7fac17751380"/>
        <function-ref name="isValid" scoped="" ref="0x7fac17752578"/>
        <function-ref name="set" scoped="" ref="0x7fac17751a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac1774b170" loc="66:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac1774b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac1774b4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac1774b648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac1774b7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac1774b958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac17758348" loc="58:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac17758348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac17758698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac17754968" loc="63:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac17754968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac17754cb8"/>
        <function-ref name="noAck" scoped="" ref="0x7fac17754e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac17753020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac177562c0" loc="62:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fac177562c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac17756610"/>
        <function-ref name="source" scoped="" ref="0x7fac17756798"/>
        <function-ref name="address" scoped="" ref="0x7fac17756920"/>
        <function-ref name="destination" scoped="" ref="0x7fac17756aa8"/>
        <function-ref name="setSource" scoped="" ref="0x7fac17756c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac17756db8"/>
        <function-ref name="type" scoped="" ref="0x7fac17754020"/>
        <function-ref name="setType" scoped="" ref="0x7fac177541a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac17754330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac177544b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac17754640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac1774f670" loc="65:/opt/tinyos-2.1.2//tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac1774f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac1774ead0"/>
        <function-ref name="clear" scoped="" ref="0x7fac1774d1f0"/>
        <function-ref name="isValid" scoped="" ref="0x7fac1774e3f0"/>
        <function-ref name="set" scoped="" ref="0x7fac1774d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac177304a8" loc="48:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac177304a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac1772e088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac1772e6b0" loc="49:/opt/tinyos-2.1.2//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fac1772e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac188d7178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac1772d578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac1772c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac1772da00"/>
        <function-ref name="overflow" scoped="" ref="0x7fac1772c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac1772b8c8" loc="20:/opt/tinyos-2.1.2//tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fac1772b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac17727490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac17710420" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TimeSyncC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17710420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac1770c6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fac1770fdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac1770dad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac1770d688"/>
        <function-ref name="getdt" scoped="" ref="0x7fac1770b020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac1770cb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac1770d238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac1770f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac1770c0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac1770f4c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac1770f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac1770ad58" loc="46:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac1770ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac177070d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fac17707390" loc="47:/opt/tinyos-2.1.2//tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac17707390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac177076e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17707868"/>
        <function-ref name="led1On" scoped="" ref="0x7fac177079f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17707b78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17707d00"/>
        <function-ref name="get" scoped="" ref="0x7fac17706020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac177061a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac177067c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17706330"/>
        <function-ref name="led0On" scoped="" ref="0x7fac177064b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17706640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fac176d2150" loc="58:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fac176d2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fac176d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fac176dd020" loc="52:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac176dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac176db478"/>
        <function-ref name="clear" scoped="" ref="0x7fac176dbb58"/>
        <function-ref name="isValid" scoped="" ref="0x7fac176ddd70"/>
        <function-ref name="set" scoped="" ref="0x7fac176da278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fac176daa28" loc="53:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fac176daa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac176dad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GlobalTime" ref="0x7fac176f26a8" loc="43:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x7fac176f26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x7fac176ef3a8"/>
        <function-ref name="global2Local" scoped="" ref="0x7fac176ed2a8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fac176ef830"/>
        <function-ref name="local2Global" scoped="" ref="0x7fac176efd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fac176e1080" loc="48:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fac176e1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac176e13d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac176e1558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac176e16e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac176e1868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac176e19f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac176e1c78" loc="49:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fac176e1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac176e0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac176e01a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac176e0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac176e04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac176e0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fac176d4890" loc="57:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fac176d4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac176d4be0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac176d4d68"/>
        <function-ref name="start" scoped="" ref="0x7fac176d3020"/>
        <function-ref name="stop" scoped="" ref="0x7fac176d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoRead" ref="0x7fac176d9228" loc="54:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoRead" scoped="" ref="0x7fac176d9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac176d9d70"/>
        <function-ref name="readDone" scoped="" ref="0x7fac176d71f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fac176e8aa8" loc="45:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fac176e8aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac176e4d60"/>
        <function-ref name="fired" scoped="" ref="0x7fac176e6470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac176e41c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac176e6d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fac176e3648"/>
        <function-ref name="gett0" scoped="" ref="0x7fac176e31f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac176e68c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac176e7620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac176e4790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac176e7ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fac176e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Check" ref="0x7fac176ed900" loc="44:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Check" scoped="" ref="0x7fac176ed900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac176eabc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac176eb278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac176ea020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac176ebb18"/>
        <function-ref name="getdt" scoped="" ref="0x7fac176e84d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fac176e8088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac176eb6c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac176ec490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac176ea5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac176ec930"/>
        <function-ref name="stop" scoped="" ref="0x7fac176ecdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncInfo" ref="0x7fac176e3aa0" loc="46:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x7fac176e3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x7fac176e3df0"/>
        <function-ref name="getRootID" scoped="" ref="0x7fac176e2020"/>
        <function-ref name="getSeqNum" scoped="" ref="0x7fac176e21a8"/>
        <function-ref name="getOffset" scoped="" ref="0x7fac176e2330"/>
        <function-ref name="getNumEntries" scoped="" ref="0x7fac176e24b8"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x7fac176e2640"/>
        <function-ref name="getSkew" scoped="" ref="0x7fac176e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fac176e2a58" loc="47:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fac176e2a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac176e2da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fac176d7978" loc="55:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x7fac176d7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac176d6620"/>
        <function-ref name="readDone" scoped="" ref="0x7fac176d6a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac176df5a8" loc="51:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac176df5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac176df8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac176dfa80"/>
        <function-ref name="led1On" scoped="" ref="0x7fac176dfc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac176dfd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac176de020"/>
        <function-ref name="get" scoped="" ref="0x7fac176de1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac176de330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac176de950"/>
        <function-ref name="set" scoped="" ref="0x7fac176de4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac176de640"/>
        <function-ref name="led2On" scoped="" ref="0x7fac176de7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicRead" ref="0x7fac176d5210" loc="56:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicRead" scoped="" ref="0x7fac176d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac176d5d58"/>
        <function-ref name="readDone" scoped="" ref="0x7fac176d41f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7fac176e08f0" loc="50:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fac176e08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac176e0c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac176e0dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac176df020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac176df1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac176df330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x7fac1710c898" loc="46:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x7fac1710c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1710b458"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1710b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelX" ref="0x7fac171096c0" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelX" scoped="" ref="0x7fac171096c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17108370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171087c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sounder" ref="0x7fac17110478" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sounder" scoped="" ref="0x7fac17110478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fac171107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7fac17105508" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7fac17105508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17104088"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171044d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Microphone" ref="0x7fac1710a020" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Microphone" scoped="" ref="0x7fac1710a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1710ab68"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17109020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelY" ref="0x7fac17108e60" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelY" scoped="" ref="0x7fac17108e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171069e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17106e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Vref" ref="0x7fac17110b58" loc="44:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vref" scoped="" ref="0x7fac17110b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1710f6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1710fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7fac1710d228" loc="45:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7fac1710d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1710dd70"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1710c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7fac17104b78" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7fac17104b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171036f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17103b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7fac1769adb8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7fac1769adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fac17696170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7fac17696bb8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7fac17696bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7fac17693020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7fac1768e500" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7fac1768e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1768e850"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1768e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1768eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1768ece8"/>
        <function-ref name="get" scoped="" ref="0x7fac1768ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1768d020"/>
        <function-ref name="set" scoped="" ref="0x7fac1768d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1768d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac17693448" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17693448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac176906c8"/>
        <function-ref name="fired" scoped="" ref="0x7fac17692db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17691ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17691688"/>
        <function-ref name="getdt" scoped="" ref="0x7fac1768e020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17690b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17691238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17692020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac176900f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac176924c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17692960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac17695b88" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17695b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17685dd8"/>
        <function-ref name="fired" scoped="" ref="0x7fac17686510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17685238"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17686db0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac176836c8"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17683278"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17686960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17694728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17685808"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17694bc8"/>
        <function-ref name="stop" scoped="" ref="0x7fac176860c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7fac17672ca8" loc="36:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fac17672ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17671020"/>
        <function-ref name="disable" scoped="" ref="0x7fac176711a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17671330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac176714b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fac176683d8" loc="45:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fac176683d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17668728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7fac1767c180" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7fac1767c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767c4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767c658"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767c7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767c968"/>
        <function-ref name="get" scoped="" ref="0x7fac1767caf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1767cc78"/>
        <function-ref name="set" scoped="" ref="0x7fac1767ce00"/>
        <function-ref name="clr" scoped="" ref="0x7fac1767b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7fac17679638" loc="26:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7fac17679638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17679988"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17679b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17679c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17679e20"/>
        <function-ref name="get" scoped="" ref="0x7fac17678020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac176781a8"/>
        <function-ref name="set" scoped="" ref="0x7fac17678330"/>
        <function-ref name="clr" scoped="" ref="0x7fac176784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fac1766a760" loc="48:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fac1766a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac1766aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fac17669490" loc="50:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fac17669490"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac176699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fac17676ae0" loc="30:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fac17676ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17676e30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17675020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac176751a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17675330"/>
        <function-ref name="get" scoped="" ref="0x7fac176754b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17675640"/>
        <function-ref name="set" scoped="" ref="0x7fac176757c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17675950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7fac1766c4f8" loc="42:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7fac1766c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1766c848"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1766c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1766cb58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1766cce0"/>
        <function-ref name="get" scoped="" ref="0x7fac1766ce68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1766b020"/>
        <function-ref name="set" scoped="" ref="0x7fac1766b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1766b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7fac1767fde0" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7fac1767fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767e170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767e480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767e608"/>
        <function-ref name="get" scoped="" ref="0x7fac1767e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1767e918"/>
        <function-ref name="set" scoped="" ref="0x7fac1767eaa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1767ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7fac1767b328" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7fac1767b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767b678"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767b800"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767b988"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767bb10"/>
        <function-ref name="get" scoped="" ref="0x7fac1767bc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1767be20"/>
        <function-ref name="set" scoped="" ref="0x7fac1767a020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1767a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7fac1766f548" loc="38:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fac1766f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1766f898"/>
        <function-ref name="disable" scoped="" ref="0x7fac1766fa20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1766fba8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1766fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fac17668a48" loc="46:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fac17668a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17668d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7fac1766d370" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7fac1766d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1766d6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1766d848"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1766d9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1766db58"/>
        <function-ref name="get" scoped="" ref="0x7fac1766dce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1766de68"/>
        <function-ref name="set" scoped="" ref="0x7fac1766c020"/>
        <function-ref name="clr" scoped="" ref="0x7fac1766c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7fac176787c0" loc="27:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7fac176787c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17678b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17678c98"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17678e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17677020"/>
        <function-ref name="get" scoped="" ref="0x7fac176771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17677330"/>
        <function-ref name="set" scoped="" ref="0x7fac176774b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17677640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7fac17672020" loc="35:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fac17672020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17672470"/>
        <function-ref name="disable" scoped="" ref="0x7fac176725f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17672780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac17672908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fac17669d00" loc="51:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fac17669d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac176670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fac17675c68" loc="31:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fac17675c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17674020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac176741a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17674330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac176744b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17674640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac176747c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17674950"/>
        <function-ref name="clr" scoped="" ref="0x7fac17674ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7fac1767d020" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7fac1767d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767d370"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767d808"/>
        <function-ref name="get" scoped="" ref="0x7fac1767d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1767db18"/>
        <function-ref name="set" scoped="" ref="0x7fac1767dca0"/>
        <function-ref name="clr" scoped="" ref="0x7fac1767de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7fac1767a4b0" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7fac1767a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767a800"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767a988"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767ab10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767ac98"/>
        <function-ref name="get" scoped="" ref="0x7fac1767ae20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17679020"/>
        <function-ref name="set" scoped="" ref="0x7fac176791a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17679330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fac1766a0f0" loc="47:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fac1766a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac1766a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fac1766add0" loc="49:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fac1766add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17669170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fac17677958" loc="29:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fac17677958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17677ca8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17677e30"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17676020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac176761a8"/>
        <function-ref name="get" scoped="" ref="0x7fac17676330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac176764b8"/>
        <function-ref name="set" scoped="" ref="0x7fac17676640"/>
        <function-ref name="clr" scoped="" ref="0x7fac176767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7fac17671858" loc="37:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fac17671858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17671ba8"/>
        <function-ref name="disable" scoped="" ref="0x7fac17671d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1766f020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1766f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7fac1766e0c8" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7fac1766e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1766e418"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1766e5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1766e728"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1766e8b0"/>
        <function-ref name="get" scoped="" ref="0x7fac1766ea38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1766ebc0"/>
        <function-ref name="set" scoped="" ref="0x7fac1766ed48"/>
        <function-ref name="clr" scoped="" ref="0x7fac1766d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fac176673c0" loc="52:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fac176673c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17667710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7fac17682b48" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7fac17682b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1767f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1767f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1767f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1767f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1767f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1767f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fac1767f950"/>
        <function-ref name="clr" scoped="" ref="0x7fac1767fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fac17674df0" loc="32:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fac17674df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17673170"/>
        <function-ref name="isInput" scoped="" ref="0x7fac176732f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17673480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17673608"/>
        <function-ref name="get" scoped="" ref="0x7fac17673790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17673918"/>
        <function-ref name="set" scoped="" ref="0x7fac17673aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17673c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fac17666640" loc="18:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fac17666640"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17666990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fac17663a30" loc="21:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fac17663a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17663d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fac17662760" loc="23:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fac17662760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17662ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fac17666cb0" loc="19:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fac17666cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac176630a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fac17662dd0" loc="24:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fac17662dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17660170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fac176633c0" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fac176633c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17663710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fac176620f0" loc="22:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fac176620f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17662440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fac17660490" loc="25:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fac17660490"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac176607e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fac17651100" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac17651100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17651450"/>
        <function-ref name="fired" scoped="" ref="0x7fac176515d8"/>
        <function-ref name="disable" scoped="" ref="0x7fac17651760"/>
        <function-ref name="edge" scoped="" ref="0x7fac176518e8"/>
        <function-ref name="enable" scoped="" ref="0x7fac17651a70"/>
        <function-ref name="getValue" scoped="" ref="0x7fac17651bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac17653620" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fac17653620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17653970"/>
        <function-ref name="disable" scoped="" ref="0x7fac17653af8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17653c80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac17653e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fac1764e800" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1764e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1764eb50"/>
        <function-ref name="fired" scoped="" ref="0x7fac1764ecd8"/>
        <function-ref name="disable" scoped="" ref="0x7fac1764ee60"/>
        <function-ref name="edge" scoped="" ref="0x7fac1764d020"/>
        <function-ref name="enable" scoped="" ref="0x7fac1764d1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1764d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac1764fd00" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fac1764fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1764e0a0"/>
        <function-ref name="disable" scoped="" ref="0x7fac1764e228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1764e3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1764e538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fac1764a020" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac1764a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac1764a370"/>
        <function-ref name="fired" scoped="" ref="0x7fac1764a4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fac1764a680"/>
        <function-ref name="edge" scoped="" ref="0x7fac1764a808"/>
        <function-ref name="enable" scoped="" ref="0x7fac1764a990"/>
        <function-ref name="getValue" scoped="" ref="0x7fac1764ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac1764b458" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fac1764b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac1764b7a8"/>
        <function-ref name="disable" scoped="" ref="0x7fac1764b930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1764bab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1764bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fac17647780" loc="9:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fac17647780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac17647ad0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17647c58"/>
        <function-ref name="disable" scoped="" ref="0x7fac17647de0"/>
        <function-ref name="edge" scoped="" ref="0x7fac17646020"/>
        <function-ref name="enable" scoped="" ref="0x7fac176461a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac17646330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac17648c80" loc="8:/opt/tinyos-2.1.2//tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fac17648c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17647020"/>
        <function-ref name="disable" scoped="" ref="0x7fac176471a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac17647330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac176474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a86bc0" loc="41:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a86bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a85740"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a85b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16a463f0" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16a463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16a46740"/>
        <function-ref name="configure" scoped="" ref="0x7fac16a468c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a484a0" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a484a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a47020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a47470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac16a47a28" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16a47a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac16a47d78"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac16a46020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac16a461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17629c90" loc="18:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17629c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17624820"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17624c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fac1761fa00" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fac1761fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac176215b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17621a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac1761e670" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac1761e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac1761e9c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac1761eb48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1761ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac1761d4c0" loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1761d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1761d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1761d998"/>
        <function-ref name="request" scoped="" ref="0x7fac1761db20"/>
        <function-ref name="granted" scoped="" ref="0x7fac1761dca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1761de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac17617890" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17617890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac17617be0"/>
        <function-ref name="configure" scoped="" ref="0x7fac17617d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fac1760d9b0" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fac1760d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fac1760dd00"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fac176120d0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac176120d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fac17612420"/>
        <function-ref name="cancel" scoped="" ref="0x7fac176125a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17612730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17618020" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17618370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac176184f8"/>
        <function-ref name="request" scoped="" ref="0x7fac17618680"/>
        <function-ref name="granted" scoped="" ref="0x7fac17618808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17618990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac17616d40" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac17616d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac1760a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fac17606628" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fac17606628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fac17606978"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17606b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fac1760ab70" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac1760ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fac17606020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac176061a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17606330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7fac175f70d0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac175f70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fac175f7420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fac175f75a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fac175f7730"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac175f78b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fac175f7a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fac175f7bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fac175f7d50"/>
        <function-ref name="isComplete" scoped="" ref="0x7fac17604020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac176041a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fac17604330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fac176044b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fac17604640"/>
        <function-ref name="startConversion" scoped="" ref="0x7fac176047c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fac17604a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fac17604bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fac17604d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fac17603020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac176031a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac17603330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fac1760a3b8" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac1760a3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac1760a708"/>
        <function-ref name="stop" scoped="" ref="0x7fac1760a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fac17603610" loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fac17603610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fac17603960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fac17603ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fac17603c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fac17603df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fac175f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fac1760ba20" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac1760ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fac1760bd70"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fac175c4020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fac175c41a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac175c4330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fac175c44b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fac175c4640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fac175c47c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7fac175c4950"/>
        <function-ref name="cancel" scoped="" ref="0x7fac175c4ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fac175c4c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fac175c4de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fac175c3020"/>
        <function-ref name="startConversion" scoped="" ref="0x7fac175c31a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fac175c3430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fac175c35b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fac175c3740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fac175c38c8"/>
        <function-ref name="getValue" scoped="" ref="0x7fac175c3a50"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac175c3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fac175c2c40" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fac175c2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fac175bf020"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fac175bf1a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fac175bf330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac175bf4b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fac175bf640"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fac175bf7c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fac175bf950"/>
        <function-ref name="isComplete" scoped="" ref="0x7fac175bfad8"/>
        <function-ref name="cancel" scoped="" ref="0x7fac175bfc60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fac175bfde8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fac175be020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fac175be1a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fac175be330"/>
        <function-ref name="isStarted" scoped="" ref="0x7fac175be5b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fac175be740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fac175be8c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fac175bea50"/>
        <function-ref name="getValue" scoped="" ref="0x7fac175bebd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac175bed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fac175bd0c0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fac175bd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fac175bd410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac17519698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17519698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac17519a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17519b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac175163c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac175163c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac17516738"/>
        <function-ref name="configure" scoped="" ref="0x7fac175168c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac17519dd8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17519dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17518170"/>
        <function-ref name="requested" scoped="" ref="0x7fac175182f8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17518480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17518608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17518790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac1751a840" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1751a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1751abb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1751ad38"/>
        <function-ref name="request" scoped="" ref="0x7fac17519020"/>
        <function-ref name="granted" scoped="" ref="0x7fac175191a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17519330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac175189d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac175189d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17518d28"/>
        <function-ref name="userId" scoped="" ref="0x7fac17516020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16a367f0" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16a367f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16a36b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac16a36dc8" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16a36dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16a35170"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16a352f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16a35480"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16a35608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac16a33b48" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16a33b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac16a32020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16a321a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16a318c0" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16a318c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16a31c30"/>
        <function-ref name="configure" scoped="" ref="0x7fac16a31db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac16a2f0a0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac16a2f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16a2f3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16a2f578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16a2f700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16a2f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac16a323f0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16a323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16a32740"/>
        <function-ref name="requested" scoped="" ref="0x7fac16a328c8"/>
        <function-ref name="granted" scoped="" ref="0x7fac16a32a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16a32bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16a32d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac16a2fad0" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac16a2fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac16a2fe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac16a2e020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac16a2e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac16a2e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac16a2e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac16a2e640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac16a2e7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac16a2ede8"/>
        <function-ref name="set" scoped="" ref="0x7fac16a2ead8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac16a2e950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac16a2ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac16a34e20" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac16a34e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16a331c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac16a33348"/>
        <function-ref name="request" scoped="" ref="0x7fac16a334d0"/>
        <function-ref name="granted" scoped="" ref="0x7fac16a33658"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16a337e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac16a31020" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16a31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac16a31370"/>
        <function-ref name="userId" scoped="" ref="0x7fac16a314f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac16a2d100" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac16a2d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16a2d450"/>
        <function-ref name="runTask" scoped="" ref="0x7fac16a2d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac17513780" loc="72:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac17513780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac17513ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac17513d18" loc="73:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17513d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac174fe0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fac174fe228"/>
        <function-ref name="granted" scoped="" ref="0x7fac174fe3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac174fe538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac174fe6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fac17513060" loc="70:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac17513060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac175133b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17513538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac174fe908" loc="74:/opt/tinyos-2.1.2//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac174fe908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac174fec58"/>
        <function-ref name="userId" scoped="" ref="0x7fac174fede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac169fc740" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac169fc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac169fca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac169fccd8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169fccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac169fb0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fac169fb228"/>
        <function-ref name="granted" scoped="" ref="0x7fac169fb3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac169fb538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac169fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fac169fc020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac169fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac169fc370"/>
        <function-ref name="stop" scoped="" ref="0x7fac169fc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac169fb908" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169fb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac169fbc58"/>
        <function-ref name="userId" scoped="" ref="0x7fac169fbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac174f56a0" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac174f56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174f4370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174f47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fac174f3428" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fac174f3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174f2020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174f24a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac174f09a0" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac174f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac174f0cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac174f0e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac174ef030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7fac174f2b18" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fac174f2b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fac174f2e68"/>
        <function-ref name="cancel" scoped="" ref="0x7fac174f0020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fac174f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7fac174df4d8" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7fac174df4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac174df828"/>
        <function-ref name="runTask" scoped="" ref="0x7fac174df9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac174cd680" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac174cd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174b5370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174b57e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac174b4060" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac174b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174b4bc8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174b3088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac174b3720" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac174b3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac174b3a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac174b3c18"/>
        <function-ref name="request" scoped="" ref="0x7fac174b3da0"/>
        <function-ref name="granted" scoped="" ref="0x7fac174b1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac174b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fac174a8438" loc="40:/opt/tinyos-2.1.2//tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac174a8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac174a8788"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac174a8910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac174a8a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a82058" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a82058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a82ba0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x7fac174988a0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x7fac174988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17497458"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174978a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7fac17490020" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7fac17490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17490b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1748f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x7fac17495578" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x7fac17495578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174940f8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17494548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7fac174932b0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7fac174932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17493df8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17492278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fac1748bb10" loc="21:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fac1748bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac1748be60"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac1748a020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1748a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fac1748b148" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fac1748b148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac1748b498"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac1748b620"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1748b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac1748c428" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1748c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1748c778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1748c900"/>
        <function-ref name="request" scoped="" ref="0x7fac1748ca88"/>
        <function-ref name="granted" scoped="" ref="0x7fac1748cc10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1748cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac1748acd0" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1748acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac174870a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac17487228"/>
        <function-ref name="start" scoped="" ref="0x7fac174873b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17487538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fac17486388" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fac17486388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac174866d8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17486860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac174869e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x7fac1747e6c0" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x7fac1747e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac1747ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x7fac1747e020" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x7fac1747e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac1747e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fac174878a0" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fac174878a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac17487bf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17487d78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac17486020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fac17471c10" loc="67:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fac17471c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17470020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac174701a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x7fac17481e30" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x7fac17481e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1747f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1747f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1747f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1747f640"/>
        <function-ref name="get" scoped="" ref="0x7fac1747f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1747f950"/>
        <function-ref name="set" scoped="" ref="0x7fac1747fad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac1747fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac17486e30" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17486e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac174810c0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17483798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac174824d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17482088"/>
        <function-ref name="getdt" scoped="" ref="0x7fac17481960"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17481510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17483be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac174849e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17482aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17484e80"/>
        <function-ref name="stop" scoped="" ref="0x7fac17483348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac1746cb68" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1746cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17469d98"/>
        <function-ref name="fired" scoped="" ref="0x7fac1746a4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac174691f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac1746ad78"/>
        <function-ref name="getdt" scoped="" ref="0x7fac17468688"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17468238"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac1746a928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac1746b6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac174697c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac1746bb90"/>
        <function-ref name="stop" scoped="" ref="0x7fac1746a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac17464510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17464510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac17464880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17464a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac17462140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17462140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac174624b0"/>
        <function-ref name="configure" scoped="" ref="0x7fac17462638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac17464c50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17464c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17463020"/>
        <function-ref name="requested" scoped="" ref="0x7fac174631a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17463330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac174634b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17463640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17465748" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17465748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17465ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17465c40"/>
        <function-ref name="request" scoped="" ref="0x7fac17465dc8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17464020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac174641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac17463888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17463888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17463bd8"/>
        <function-ref name="userId" scoped="" ref="0x7fac17463d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac169dbcc0" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac169dbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac169da0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac169da328" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac169da328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac169da678"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac169da800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac169da988"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac169dab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac169d7200" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac169d7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac169d7570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac169d76f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac169d6e18" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac169d6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac169d51c0"/>
        <function-ref name="configure" scoped="" ref="0x7fac169d5348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac169d55d0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac169d55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac169d5920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac169d5aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac169d5c30"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac169d5db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac169d7940" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169d7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac169d7c90"/>
        <function-ref name="requested" scoped="" ref="0x7fac169d7e18"/>
        <function-ref name="granted" scoped="" ref="0x7fac169d6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac169d61a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac169d6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac169d4060" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac169d4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac169d43b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac169d4538"/>
        <function-ref name="led1On" scoped="" ref="0x7fac169d46c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac169d4848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac169d49d0"/>
        <function-ref name="get" scoped="" ref="0x7fac169d4b58"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac169d4ce0"/>
        <function-ref name="led0On" scoped="" ref="0x7fac169d2330"/>
        <function-ref name="set" scoped="" ref="0x7fac169d2020"/>
        <function-ref name="led2On" scoped="" ref="0x7fac169d4e68"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac169d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac169d84b0" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac169d84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac169d8820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac169d89a8"/>
        <function-ref name="request" scoped="" ref="0x7fac169d8b30"/>
        <function-ref name="granted" scoped="" ref="0x7fac169d8cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac169d8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac169d6578" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169d6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac169d68c8"/>
        <function-ref name="userId" scoped="" ref="0x7fac169d6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac169d25f8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac169d25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac169d2948"/>
        <function-ref name="runTask" scoped="" ref="0x7fac169d2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac1745fd50" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1745fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac174350d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac17435260"/>
        <function-ref name="start" scoped="" ref="0x7fac174353e8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17435570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac174357b8" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac174357b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac17435b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac17435d50" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17435d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac174340d8"/>
        <function-ref name="requested" scoped="" ref="0x7fac17434260"/>
        <function-ref name="granted" scoped="" ref="0x7fac174343e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17434570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac174346f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac17434940" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17434940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17434c90"/>
        <function-ref name="userId" scoped="" ref="0x7fac17434e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac169a1d58" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac169a1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac169a00d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac169a0260"/>
        <function-ref name="start" scoped="" ref="0x7fac169a03e8"/>
        <function-ref name="stop" scoped="" ref="0x7fac169a0570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac169a07b8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac169a07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac169a0b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fac1699e120" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fac1699e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1699e470"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1699e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac169a0d50" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169a0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1699f0d8"/>
        <function-ref name="requested" scoped="" ref="0x7fac1699f260"/>
        <function-ref name="granted" scoped="" ref="0x7fac1699f3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1699f570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1699f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fac1699e8c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fac1699e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1699ec10"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1699ed98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fac169a1638" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac169a1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac169a1988"/>
        <function-ref name="stop" scoped="" ref="0x7fac169a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac1699f940" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1699f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1699fc90"/>
        <function-ref name="userId" scoped="" ref="0x7fac1699fe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac1742dd98" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac1742dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1742c930"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1742cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac1742b628" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac1742b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174291e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17429658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac17429cf0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17429cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac174280a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17428228"/>
        <function-ref name="request" scoped="" ref="0x7fac174283b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac17428538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac174286c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac174262e8" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac174262e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17426e50"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174252e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac17425b28" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac17425b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac174236f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17423b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac17422240" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17422240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac174225b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17422738"/>
        <function-ref name="request" scoped="" ref="0x7fac174228c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac17422a48"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17422bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac169e9e80" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac169e9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac169e81f8"/>
        <function-ref name="configure" scoped="" ref="0x7fac169e8380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac169ea020" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac169ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac169eab68"/>
        <function-ref name="readDone" scoped="" ref="0x7fac169e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac169e95d8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac169e95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac169e9928"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac169e9ab0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac169e9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a80498" loc="20:/opt/tinyos-2.1.2//tos/sensorboards/mts300/AccelYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a80498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a7f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a7f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16975060" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16975060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac169753b0"/>
        <function-ref name="configure" scoped="" ref="0x7fac16975538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac169771c8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac169771c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16977d10"/>
        <function-ref name="readDone" scoped="" ref="0x7fac169761c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac16976778" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16976778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac16976ac8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac16976c50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac16976dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a7e8d8" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a7e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a7d458"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a7d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac174034c0" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac174034c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17402088"/>
        <function-ref name="readDone" scoped="" ref="0x7fac174024d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7fac173f9020" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7fac173f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173f9b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7fac174019c0" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7fac174019c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17401d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173fe020"/>
        <function-ref name="request" scoped="" ref="0x7fac173fe1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac173fe330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173fe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7fac173fed70" loc="6:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7fac173fed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173fc0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173fc278"/>
        <function-ref name="request" scoped="" ref="0x7fac173fc400"/>
        <function-ref name="granted" scoped="" ref="0x7fac173fc588"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173fc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7fac173fb1c8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7fac173fb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173fbd10"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173fa1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7fac173f4b68" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7fac173f4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac173f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fac173f4158" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac173f4158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac173f44a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac173f4630"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac173f47b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac173ee398" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173ee398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac173ee708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173ee890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac173eb020" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac173eb390"/>
        <function-ref name="configure" scoped="" ref="0x7fac173eb518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac173eead8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173eead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173eee28"/>
        <function-ref name="requested" scoped="" ref="0x7fac173ed020"/>
        <function-ref name="granted" scoped="" ref="0x7fac173ed1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173ed330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac173f5678" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac173f5678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173f59e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173f5b70"/>
        <function-ref name="request" scoped="" ref="0x7fac173f5cf8"/>
        <function-ref name="granted" scoped="" ref="0x7fac173f5e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173ee030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac173ed700" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173ed700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac173eda50"/>
        <function-ref name="userId" scoped="" ref="0x7fac173edbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16962520" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16962520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16962870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac16962af8" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16962af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16962e48"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16961020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac169611a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16961330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac1695e9a8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1695e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac1695ed18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1695d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac1695c6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1695c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac1695ca68"/>
        <function-ref name="configure" scoped="" ref="0x7fac1695cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1695ce78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1695ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1695b1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1695b380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1695b508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1695b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac1695d268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1695d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1695d5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac1695d740"/>
        <function-ref name="granted" scoped="" ref="0x7fac1695d8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1695da50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1695dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1695b8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1695b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1695bc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1695bdb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1695a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac1695a1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac1695a330"/>
        <function-ref name="get" scoped="" ref="0x7fac1695a4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac1695a640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac1695ac60"/>
        <function-ref name="set" scoped="" ref="0x7fac1695a950"/>
        <function-ref name="led2On" scoped="" ref="0x7fac1695a7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac1695aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac1695fbb8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1695fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1695e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1695e1a8"/>
        <function-ref name="request" scoped="" ref="0x7fac1695e330"/>
        <function-ref name="granted" scoped="" ref="0x7fac1695e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1695e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac1695de20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1695de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1695c1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac1695c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac16959020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac16959020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16959370"/>
        <function-ref name="runTask" scoped="" ref="0x7fac169594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac173e8510" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173e8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac173e8880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173e8a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac173e6140" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173e6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac173e64b0"/>
        <function-ref name="configure" scoped="" ref="0x7fac173e6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac173e8c50" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173e7020"/>
        <function-ref name="requested" scoped="" ref="0x7fac173e71a8"/>
        <function-ref name="granted" scoped="" ref="0x7fac173e7330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173e74b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173e7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac173e97c0" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac173e97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173e9b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173e9cb8"/>
        <function-ref name="request" scoped="" ref="0x7fac173e9e40"/>
        <function-ref name="granted" scoped="" ref="0x7fac173e8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac173e7888" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e7888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac173e7bd8"/>
        <function-ref name="userId" scoped="" ref="0x7fac173e7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16926980" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16926980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16926cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac16925020" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16925020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16925370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac169254f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16925680"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16925808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac16923d58" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16923d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac169220f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16922278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16921980" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16921980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16921cf0"/>
        <function-ref name="configure" scoped="" ref="0x7fac16921e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1691f130" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1691f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1691f480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1691f608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1691f790"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1691f918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac169224c0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac169224c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16922810"/>
        <function-ref name="requested" scoped="" ref="0x7fac16922998"/>
        <function-ref name="granted" scoped="" ref="0x7fac16922b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16922ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16922e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1691fb60" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1691fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1691e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1691e1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1691e330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac1691e4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac1691e640"/>
        <function-ref name="get" scoped="" ref="0x7fac1691e7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac1691e950"/>
        <function-ref name="led0On" scoped="" ref="0x7fac1691d020"/>
        <function-ref name="set" scoped="" ref="0x7fac1691ec60"/>
        <function-ref name="led2On" scoped="" ref="0x7fac1691ead8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac1691ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac16923060" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac16923060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac169233d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac16923558"/>
        <function-ref name="request" scoped="" ref="0x7fac169236e0"/>
        <function-ref name="granted" scoped="" ref="0x7fac16923868"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac169239f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac169210e0" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac169210e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac16921430"/>
        <function-ref name="userId" scoped="" ref="0x7fac169215b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac1691d2e8" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac1691d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1691d638"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1691d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac173e2698" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac173e2698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac173e2a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac173e03c8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac173e03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac173e0738"/>
        <function-ref name="configure" scoped="" ref="0x7fac173e08c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac173e2dd8" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173e2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173e1170"/>
        <function-ref name="requested" scoped="" ref="0x7fac173e12f8"/>
        <function-ref name="granted" scoped="" ref="0x7fac173e1480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173e1608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173e1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac173e4910" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac173e4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173e4c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173e4e08"/>
        <function-ref name="request" scoped="" ref="0x7fac173e2020"/>
        <function-ref name="granted" scoped="" ref="0x7fac173e21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173e2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac173e19d8" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173e19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac173e1d28"/>
        <function-ref name="userId" scoped="" ref="0x7fac173e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac168e2570" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac168e2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac168e28c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac168e2b48" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac168e2b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac168e1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac168e11a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac168e1330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac168e14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac168dea28" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac168dea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac168ded98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac168dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac168dc6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac168dc6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac168dca68"/>
        <function-ref name="configure" scoped="" ref="0x7fac168dcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac168dce78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac168dce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac168db1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac168db380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac168db508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac168db690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac168dd268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac168dd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac168dd5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac168dd740"/>
        <function-ref name="granted" scoped="" ref="0x7fac168dd8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac168dda50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac168ddbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac168db8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac168db8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac168dbc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac168dbdb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac168da020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac168da1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac168da330"/>
        <function-ref name="get" scoped="" ref="0x7fac168da4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac168da640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac168dac60"/>
        <function-ref name="set" scoped="" ref="0x7fac168da950"/>
        <function-ref name="led2On" scoped="" ref="0x7fac168da7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac168daad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac168e0cc8" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac168e0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac168de0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac168de228"/>
        <function-ref name="request" scoped="" ref="0x7fac168de3b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac168de538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac168de6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac168dde20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac168dde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac168dc1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac168dc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac168d9020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac168d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac168d9370"/>
        <function-ref name="runTask" scoped="" ref="0x7fac168d94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac173de380" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac173de380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac173de6d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac173de858"/>
        <function-ref name="start" scoped="" ref="0x7fac173de9e0"/>
        <function-ref name="stop" scoped="" ref="0x7fac173deb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac173dedb0" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac173dedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac173dd170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac173dd3b8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dd3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173dd708"/>
        <function-ref name="requested" scoped="" ref="0x7fac173dd890"/>
        <function-ref name="granted" scoped="" ref="0x7fac173dda18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173ddba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173ddd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac173dc020" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac173dc370"/>
        <function-ref name="userId" scoped="" ref="0x7fac173dc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac168a8740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac168a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac168a8a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac168a8c18"/>
        <function-ref name="start" scoped="" ref="0x7fac168a8da0"/>
        <function-ref name="stop" scoped="" ref="0x7fac168a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac168a7268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac168a7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac168a75b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fac168a5b90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fac168a5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac168a4020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac168a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac168a7800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac168a7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac168a7b50"/>
        <function-ref name="requested" scoped="" ref="0x7fac168a7cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fac168a7e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac168a5020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac168a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fac168a4470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fac168a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac168a47c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac168a4948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fac168a8020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac168a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac168a8370"/>
        <function-ref name="stop" scoped="" ref="0x7fac168a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac168a53f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac168a53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac168a5740"/>
        <function-ref name="userId" scoped="" ref="0x7fac168a58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac173dbd80" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac173dbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac173da170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac173da2f8"/>
        <function-ref name="start" scoped="" ref="0x7fac173da480"/>
        <function-ref name="stop" scoped="" ref="0x7fac173da608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac173da850" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac173da850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac173daba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac173dade8" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac173dade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173d8170"/>
        <function-ref name="requested" scoped="" ref="0x7fac173d82f8"/>
        <function-ref name="granted" scoped="" ref="0x7fac173d8480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173d8608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac173d8790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac173d89d8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac173d89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac173d8d28"/>
        <function-ref name="userId" scoped="" ref="0x7fac173d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac16891ad8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac16891ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac16891e28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac16890020"/>
        <function-ref name="start" scoped="" ref="0x7fac168901a8"/>
        <function-ref name="stop" scoped="" ref="0x7fac16890330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac16890578" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac16890578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac168908c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fac1688e020" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fac1688e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1688e370"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1688e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac16890b10" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16890b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16890e60"/>
        <function-ref name="requested" scoped="" ref="0x7fac1688f020"/>
        <function-ref name="granted" scoped="" ref="0x7fac1688f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1688f330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1688f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fac1688e7c0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fac1688e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1688eb10"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1688ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fac168913b8" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac168913b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac16891708"/>
        <function-ref name="stop" scoped="" ref="0x7fac16891890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac1688f700" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1688f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1688fa50"/>
        <function-ref name="userId" scoped="" ref="0x7fac1688fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac173b6270" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac173b6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac173b65c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac173b6748"/>
        <function-ref name="start" scoped="" ref="0x7fac173b68d0"/>
        <function-ref name="stop" scoped="" ref="0x7fac173b6a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7fac173b4638" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7fac173b4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173b4988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173b4b10"/>
        <function-ref name="request" scoped="" ref="0x7fac173b4c98"/>
        <function-ref name="granted" scoped="" ref="0x7fac173b4e20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac173b5020" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac173b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173b5b88"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fac173abd98" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fac173abd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac173aa170"/>
        <function-ref name="runTask" scoped="" ref="0x7fac173aa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7fac173ae438" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7fac173ae438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac173ae788"/>
        <function-ref name="isInput" scoped="" ref="0x7fac173ae910"/>
        <function-ref name="toggle" scoped="" ref="0x7fac173aea98"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac173aec20"/>
        <function-ref name="get" scoped="" ref="0x7fac173aeda8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac173ac020"/>
        <function-ref name="set" scoped="" ref="0x7fac173ac1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fac173ac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fac173ac6c0" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fac173ac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173ab370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173ab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac173b3370" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac173b3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac173af6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fac173b1db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac173b0ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac173b0688"/>
        <function-ref name="getdt" scoped="" ref="0x7fac173ae020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac173afb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac173b0238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac173b1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac173af0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac173b14c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac173b1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac173a8600" loc="4:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac173a8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac173a8950"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac173a8ad8"/>
        <function-ref name="start" scoped="" ref="0x7fac173a8c60"/>
        <function-ref name="stop" scoped="" ref="0x7fac173a8de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7fac173a68f0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7fac173a68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173a6c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173a6dc8"/>
        <function-ref name="request" scoped="" ref="0x7fac173a4020"/>
        <function-ref name="granted" scoped="" ref="0x7fac173a41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac173a7288" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac173a7288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173a7df0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173a62d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7fac1739de00" loc="32:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7fac1739de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1739c1a8"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1739c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7fac1739f5d8" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7fac1739f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac1739f928"/>
        <function-ref name="isInput" scoped="" ref="0x7fac1739fab0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac1739fc38"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac1739fdc0"/>
        <function-ref name="get" scoped="" ref="0x7fac1739e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac1739e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fac1739e330"/>
        <function-ref name="clr" scoped="" ref="0x7fac1739e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fac1739e848" loc="11:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fac1739e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1739d3d8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1739d828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac173a4680" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac173a4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac173a18f0"/>
        <function-ref name="fired" scoped="" ref="0x7fac173a2020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac173a2d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac173a28c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac1739f1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac173a1d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac173a2470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac173a31f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac173a1320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac173a3698"/>
        <function-ref name="stop" scoped="" ref="0x7fac173a3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac1739a5e8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1739a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac173968f0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17398020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17398d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac173988c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac173951c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17396d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17398470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17399158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17396320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac173995f8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17399a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac17392908" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac17392908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac17392c58"/>
        <function-ref name="configure" scoped="" ref="0x7fac17392de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17394aa8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17394aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17393620"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17393a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac17392060" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac17392060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac173923b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17392538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac173926c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17383d58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17383d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173828f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17382d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac173805e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac173805e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1737f198"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1737f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac1737fca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1737fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1737d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1737d228"/>
        <function-ref name="request" scoped="" ref="0x7fac1737d3b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac1737d538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1737d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a7cd08" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.TempC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a7cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a7b8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a7bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17375928" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17375928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173724a8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac173728f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17370560" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17370560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1736e0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1736e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac1736eda8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac1736eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1736d9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1736de50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac1736c510" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1736c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1736c880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1736ca08"/>
        <function-ref name="request" scoped="" ref="0x7fac1736cb90"/>
        <function-ref name="granted" scoped="" ref="0x7fac1736cd18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1736a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a781c8" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a781c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a78d10"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a771c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fac16a77758" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fac16a77758"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fac16a77aa8"/>
        <function-ref name="disable" scoped="" ref="0x7fac16a77c30"/>
        <function-ref name="stopMic" scoped="" ref="0x7fac16a77db8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fac16a76020"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fac16a761a8"/>
        <function-ref name="enable" scoped="" ref="0x7fac16a76330"/>
        <function-ref name="muxSel" scoped="" ref="0x7fac16a764b8"/>
        <function-ref name="startMic" scoped="" ref="0x7fac16a76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17361e78" loc="5:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17361e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac173599f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17359e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7fac17358bb0" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7fac17358bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17356728"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17356b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fac1734e2e0" loc="43:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fac1734e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fac1734e630"/>
        <function-ref name="disable" scoped="" ref="0x7fac1734e7b8"/>
        <function-ref name="stopMic" scoped="" ref="0x7fac1734e940"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fac1734eac8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fac1734ec50"/>
        <function-ref name="enable" scoped="" ref="0x7fac1734edd8"/>
        <function-ref name="muxSel" scoped="" ref="0x7fac1734d020"/>
        <function-ref name="startMic" scoped="" ref="0x7fac1734d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fac173509a0" loc="42:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac173509a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac17350cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac17350e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1734e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17351d20" loc="41:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17351d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173500a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17350228"/>
        <function-ref name="request" scoped="" ref="0x7fac173503b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac17350538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173506c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac1734dcd8" loc="47:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1734dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac1734a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac1734a228"/>
        <function-ref name="start" scoped="" ref="0x7fac1734a3b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac1734a538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x7fac17341cf8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x7fac17341cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac173400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17340228"/>
        <function-ref name="toggle" scoped="" ref="0x7fac173403b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17340538"/>
        <function-ref name="get" scoped="" ref="0x7fac173406c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17340848"/>
        <function-ref name="set" scoped="" ref="0x7fac173409d0"/>
        <function-ref name="clr" scoped="" ref="0x7fac17340b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x7fac17349be0" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7fac17349be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac17348020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac173481a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac17348330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x7fac173437f8" loc="52:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x7fac173437f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17343b48"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17343cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17343e58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17342020"/>
        <function-ref name="get" scoped="" ref="0x7fac173421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17342330"/>
        <function-ref name="set" scoped="" ref="0x7fac173424b8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17342640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x7fac173429c8" loc="53:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x7fac173429c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17342d18"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17341020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac173411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17341330"/>
        <function-ref name="get" scoped="" ref="0x7fac173414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17341640"/>
        <function-ref name="set" scoped="" ref="0x7fac173417c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17341950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7fac1734a828" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7fac1734a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7fac1734ab78"/>
        <function-ref name="disable" scoped="" ref="0x7fac1734ad00"/>
        <function-ref name="stopMic" scoped="" ref="0x7fac17349020"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7fac173491a8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7fac17349330"/>
        <function-ref name="enable" scoped="" ref="0x7fac173494b8"/>
        <function-ref name="muxSel" scoped="" ref="0x7fac17349640"/>
        <function-ref name="startMic" scoped="" ref="0x7fac173497c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fac17331d48" loc="57:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fac17331d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac173300d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17330260"/>
        <function-ref name="request" scoped="" ref="0x7fac173303e8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17330570"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac173306f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x7fac1733f020" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x7fac1733f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac1733f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fac17333280" loc="56:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac17333280"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17333e00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17331130"/>
        <function-ref name="write" scoped="" ref="0x7fac1733d9c8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17332588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x7fac17330ad8" loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x7fac17330ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac17330e28"/>
        <function-ref name="disable" scoped="" ref="0x7fac1732f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac1732f1a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac1732f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac17348738" loc="51:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17348738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17344a18"/>
        <function-ref name="fired" scoped="" ref="0x7fac17346158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17346e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac173469f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fac173432e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17344e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac173465a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17347370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac17344448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac17347810"/>
        <function-ref name="stop" scoped="" ref="0x7fac17347cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac173071d0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac173071d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17307520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac173076a8"/>
        <function-ref name="request" scoped="" ref="0x7fac17307830"/>
        <function-ref name="granted" scoped="" ref="0x7fac173079b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17307b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fac171d5020" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac171d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171d5ba0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac171d1020"/>
        <function-ref name="write" scoped="" ref="0x7fac171d4790"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171d2388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac172fa538" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac172fa538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac172fa888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac172faa10"/>
        <function-ref name="request" scoped="" ref="0x7fac172fab98"/>
        <function-ref name="granted" scoped="" ref="0x7fac172fad20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac172f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fac172f99b0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac172f99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac172f8560"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac172f58b0"/>
        <function-ref name="write" scoped="" ref="0x7fac172f6130"/>
        <function-ref name="readDone" scoped="" ref="0x7fac172f6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac172daaf8" loc="92:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac172daaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac172dae68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac172d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac172d86d8" loc="96:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac172d86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac172d8a48"/>
        <function-ref name="configure" scoped="" ref="0x7fac172d8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac172d9268" loc="93:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac172d9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac172d95b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac172d9740"/>
        <function-ref name="granted" scoped="" ref="0x7fac172d98c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac172d9a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac172d9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac172dcd80" loc="91:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac172dcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac172da170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac172da2f8"/>
        <function-ref name="request" scoped="" ref="0x7fac172da480"/>
        <function-ref name="granted" scoped="" ref="0x7fac172da608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac172da790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac172d9e20" loc="94:/opt/tinyos-2.1.2//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac172d9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac172d81a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac172d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac168116e0" loc="44:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac168116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16811a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fac16811cb8" loc="45:/opt/tinyos-2.1.2//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fac16811cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac168100a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16810228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac168103b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16810538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac1680eaf8" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1680eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac1680ee68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1680d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac1680c6f8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1680c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac1680ca68"/>
        <function-ref name="configure" scoped="" ref="0x7fac1680cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1680ce78" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1680ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1680a1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1680a380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1680a508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1680a690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac1680d268" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1680d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1680d5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac1680d740"/>
        <function-ref name="granted" scoped="" ref="0x7fac1680d8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1680da50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1680dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1680a8d8" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1680a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1680ac28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1680adb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac16809020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac168091a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac16809330"/>
        <function-ref name="get" scoped="" ref="0x7fac168094b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac16809640"/>
        <function-ref name="led0On" scoped="" ref="0x7fac16809c60"/>
        <function-ref name="set" scoped="" ref="0x7fac16809950"/>
        <function-ref name="led2On" scoped="" ref="0x7fac168097c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac16809ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac1680fd80" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1680fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1680e170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1680e2f8"/>
        <function-ref name="request" scoped="" ref="0x7fac1680e480"/>
        <function-ref name="granted" scoped="" ref="0x7fac1680e608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1680e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac1680de20" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1680de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1680c1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac1680c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac16808020" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac16808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16808370"/>
        <function-ref name="runTask" scoped="" ref="0x7fac168084f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac172d6d20" loc="62:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac172d6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac172d50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac172d52e8" loc="63:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac172d52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac172d5638"/>
        <function-ref name="requested" scoped="" ref="0x7fac172d57c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac172d5948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac172d5ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac172d5c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fac172d6600" loc="60:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac172d6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac172d6950"/>
        <function-ref name="stop" scoped="" ref="0x7fac172d6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac172d4020" loc="64:/opt/tinyos-2.1.2//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac172d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac172d4370"/>
        <function-ref name="userId" scoped="" ref="0x7fac172d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fac17292420" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fac17292420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fac17292770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fac17296a10" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fac17296a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac172955d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac172938e8"/>
        <function-ref name="write" scoped="" ref="0x7fac17294190"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17294d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac172929f8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac172929f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17292d48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17291020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac172911a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17291330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac172914b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17291640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac172917c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17291de8"/>
        <function-ref name="set" scoped="" ref="0x7fac17291ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac17291950"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17291c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac172d1140" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac172d1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac172d14b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac172d1638"/>
        <function-ref name="request" scoped="" ref="0x7fac172d17c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac172d1948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac172d1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fac1729c020" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac1729c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1729cbc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17298020"/>
        <function-ref name="write" scoped="" ref="0x7fac1729a790"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17299388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fac17298c70" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fac17298c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17296020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac172961a8"/>
        <function-ref name="request" scoped="" ref="0x7fac17296330"/>
        <function-ref name="granted" scoped="" ref="0x7fac172964b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17296640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fac17226318" loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fac17226318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fac17226668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fac17226930" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fac17226930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fac17226c80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fac17226e08"/>
        <function-ref name="setStart" scoped="" ref="0x7fac17225020"/>
        <function-ref name="status" scoped="" ref="0x7fac172251a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fac17225330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac172254b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac17225640"/>
        <function-ref name="read" scoped="" ref="0x7fac172257c8"/>
        <function-ref name="init" scoped="" ref="0x7fac17225950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fac17225ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac17225c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fac17225de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac17224020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fac172242a8"/>
        <function-ref name="enable" scoped="" ref="0x7fac17224430"/>
        <function-ref name="write" scoped="" ref="0x7fac172245b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fac17224740"/>
        <function-ref name="off" scoped="" ref="0x7fac172248c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fac17224a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fac17224bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac17224d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fac17223020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fac172232e8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fac172232e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17223638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac172237c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17223948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac17223ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17223c58"/>
        <function-ref name="get" scoped="" ref="0x7fac17223de0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17222020"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17222640"/>
        <function-ref name="set" scoped="" ref="0x7fac17222330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac172221a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac172224b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fac17222908" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fac17222908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac17222c58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac17222de0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac17221020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac172211a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac17221330"/>
        <function-ref name="get" scoped="" ref="0x7fac172214b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac17221640"/>
        <function-ref name="led2On" scoped="" ref="0x7fac17221c60"/>
        <function-ref name="set" scoped="" ref="0x7fac17221950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac172217c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac17221ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fac1728ce60" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fac1728ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac1722b1e8"/>
        <function-ref name="stop" scoped="" ref="0x7fac1722b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fac1722b700" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac1722b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1722a3a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac17227790"/>
        <function-ref name="write" scoped="" ref="0x7fac17229020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17229ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fac1721e828" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fac1721e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fac1721eb78"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fac1721ed00"/>
        <function-ref name="setStart" scoped="" ref="0x7fac1721b020"/>
        <function-ref name="status" scoped="" ref="0x7fac1721b1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fac1721b330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac1721b4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac1721b640"/>
        <function-ref name="read" scoped="" ref="0x7fac1721b7c8"/>
        <function-ref name="init" scoped="" ref="0x7fac1721b950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fac1721bad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac1721bc60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fac1721bde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac1721a020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fac1721a2a8"/>
        <function-ref name="enable" scoped="" ref="0x7fac1721a430"/>
        <function-ref name="write" scoped="" ref="0x7fac1721a5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fac1721a740"/>
        <function-ref name="off" scoped="" ref="0x7fac1721a8c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fac1721aa50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fac1721abd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac1721ad60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fac17219020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fac172161d8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fac172161d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fac17216528"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fac172166b0"/>
        <function-ref name="setStart" scoped="" ref="0x7fac17216838"/>
        <function-ref name="status" scoped="" ref="0x7fac172169c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fac17216b48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fac17216cd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fac17216e58"/>
        <function-ref name="read" scoped="" ref="0x7fac17215020"/>
        <function-ref name="init" scoped="" ref="0x7fac172151a8"/>
        <function-ref name="enableAck" scoped="" ref="0x7fac17215330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fac172154b8"/>
        <function-ref name="hasStart" scoped="" ref="0x7fac17215640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac172157c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fac17215a50"/>
        <function-ref name="enable" scoped="" ref="0x7fac17215bd8"/>
        <function-ref name="write" scoped="" ref="0x7fac17215d60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fac17214020"/>
        <function-ref name="off" scoped="" ref="0x7fac172141a8"/>
        <function-ref name="setStop" scoped="" ref="0x7fac17214330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fac172144b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fac17214640"/>
        <function-ref name="hasStop" scoped="" ref="0x7fac172147c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fac17214b50" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fac17214b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17212020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac172121a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fac17212330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac172124b8"/>
        <function-ref name="get" scoped="" ref="0x7fac17212640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac172127c8"/>
        <function-ref name="set" scoped="" ref="0x7fac17212950"/>
        <function-ref name="clr" scoped="" ref="0x7fac17212ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fac17212e08" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fac17212e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac172111a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17211330"/>
        <function-ref name="toggle" scoped="" ref="0x7fac172114b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17211640"/>
        <function-ref name="get" scoped="" ref="0x7fac172117c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17211950"/>
        <function-ref name="set" scoped="" ref="0x7fac17211ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17211c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac171cf020" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac171cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac171cb2b8"/>
        <function-ref name="fired" scoped="" ref="0x7fac171ce978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac171cd6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac171cd278"/>
        <function-ref name="getdt" scoped="" ref="0x7fac171cbb58"/>
        <function-ref name="gett0" scoped="" ref="0x7fac171cb708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac171cedc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac171cfb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac171cdc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac171ce088"/>
        <function-ref name="stop" scoped="" ref="0x7fac171ce528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac171c8af8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac171c8af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac171c8e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac171c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac171c56d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac171c56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac171c5a48"/>
        <function-ref name="configure" scoped="" ref="0x7fac171c5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac171c7268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171c75b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac171c7740"/>
        <function-ref name="granted" scoped="" ref="0x7fac171c78c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac171c7a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac171c7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac171c9d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac171c9d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171c8170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac171c82f8"/>
        <function-ref name="request" scoped="" ref="0x7fac171c8480"/>
        <function-ref name="granted" scoped="" ref="0x7fac171c8608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac171c8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac171c7e20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac171c51a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac171c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac167841d8" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac167841d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16784528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac167847b0" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac167847b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac16784b00"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16784c88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac16784e10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac16781698" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac16781698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac16781a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16781b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac1677e3e8" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1677e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac1677e758"/>
        <function-ref name="configure" scoped="" ref="0x7fac1677e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1677eb68" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1677eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1677d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1677d1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1677d330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1677d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac16781dd8" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac16781dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1677f170"/>
        <function-ref name="requested" scoped="" ref="0x7fac1677f2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fac1677f480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1677f608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1677f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1677d700" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1677d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1677da50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1677dbd8"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1677dd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac1677c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac1677c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fac1677c330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac1677c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac1677cad8"/>
        <function-ref name="set" scoped="" ref="0x7fac1677c7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac1677c640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac1677c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac16782830" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac16782830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16782ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac16782d28"/>
        <function-ref name="request" scoped="" ref="0x7fac16781020"/>
        <function-ref name="granted" scoped="" ref="0x7fac167811a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16781330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac1677f9d8" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1677f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1677fd28"/>
        <function-ref name="userId" scoped="" ref="0x7fac1677e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac1677cda0" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac1677cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac1677b170"/>
        <function-ref name="runTask" scoped="" ref="0x7fac1677b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac171c36d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac171c36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac171c3a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac171c3bb0"/>
        <function-ref name="start" scoped="" ref="0x7fac171c3d38"/>
        <function-ref name="stop" scoped="" ref="0x7fac171c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac171c2268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac171c2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac171c25b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac171c2800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac171c2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171c2b50"/>
        <function-ref name="requested" scoped="" ref="0x7fac171c2cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fac171c2e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac171c1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac171c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac171c13f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171c13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac171c1740"/>
        <function-ref name="userId" scoped="" ref="0x7fac171c18c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac1674a5c8" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1674a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac1674a918"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac1674aaa0"/>
        <function-ref name="start" scoped="" ref="0x7fac1674ac28"/>
        <function-ref name="stop" scoped="" ref="0x7fac1674adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac16749020" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac16749020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac16749370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fac16748a08" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fac16748a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16748d58"/>
        <function-ref name="runTask" scoped="" ref="0x7fac16746020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac167495b8" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac167495b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac16749908"/>
        <function-ref name="requested" scoped="" ref="0x7fac16749a90"/>
        <function-ref name="granted" scoped="" ref="0x7fac16749c18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac16749da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac16748020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fac167462e8" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fac167462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16746638"/>
        <function-ref name="runTask" scoped="" ref="0x7fac167467c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fac1674ce80" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac1674ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac1674a1f8"/>
        <function-ref name="stop" scoped="" ref="0x7fac1674a380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac16748268" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac16748268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac167485b8"/>
        <function-ref name="userId" scoped="" ref="0x7fac16748740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac171b6020" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac171b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171b6b88"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac171b5860" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac171b5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171b4458"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171b48c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac171b2020" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac171b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171b2390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac171b2518"/>
        <function-ref name="request" scoped="" ref="0x7fac171b26a0"/>
        <function-ref name="granted" scoped="" ref="0x7fac171b2828"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac171b29b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac168463f0" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac168463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16846740"/>
        <function-ref name="configure" scoped="" ref="0x7fac168468c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16848520" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16848520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac168470c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16847510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac16847ac8" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16847ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac16847e18"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac16846020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac168461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a746c0" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a746c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a73370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fac16a75a00" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fac16a75a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fac16a75d50"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fac16a74020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fac16a741a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fac16a74330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7fac171944c0" loc="55:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7fac171944c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17193088"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171934d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x7fac1719bc90" loc="49:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x7fac1719bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1719a820"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1719ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x7fac17199918" loc="50:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x7fac17199918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17198490"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171988e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fac1719fb00" loc="48:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fac1719fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fac1719fe50"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fac1719b020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fac1719b1a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fac1719b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7fac171966a8" loc="54:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7fac171966a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17195370"/>
        <function-ref name="readDone" scoped="" ref="0x7fac171957c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fac1718da28" loc="25:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fac1718da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac1718dd78"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac1718c020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1718c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fac1718d060" loc="24:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fac1718d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac1718d3b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac1718d538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac1718d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac1718e328" loc="23:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1718e328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1718e678"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1718e800"/>
        <function-ref name="request" scoped="" ref="0x7fac1718e988"/>
        <function-ref name="granted" scoped="" ref="0x7fac1718eb10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1718ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fac17192358" loc="22:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fac17192358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fac171926a8"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fac17192830"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fac171929b8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fac17192b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac1718ccf8" loc="7:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac1718ccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac171890a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac17189228"/>
        <function-ref name="start" scoped="" ref="0x7fac171893b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac17189538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7fac17188dd0" loc="10:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7fac17188dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac17187170"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac171872f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac17187480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagPower" ref="0x7fac171829e8" loc="13:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagPower" scoped="" ref="0x7fac171829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac17182d38"/>
        <function-ref name="isInput" scoped="" ref="0x7fac17181020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac171811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac17181330"/>
        <function-ref name="get" scoped="" ref="0x7fac171814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac17181640"/>
        <function-ref name="set" scoped="" ref="0x7fac171817c8"/>
        <function-ref name="clr" scoped="" ref="0x7fac17181950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcX" ref="0x7fac17181cc8" loc="14:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcX" scoped="" ref="0x7fac17181cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac171800a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcY" ref="0x7fac17180418" loc="15:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcY" scoped="" ref="0x7fac17180418"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fac17180768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalAdjustDone" ref="0x7fac17169100" loc="78:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalAdjustDone" scoped="" ref="0x7fac17169100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac17169450"/>
        <function-ref name="runTask" scoped="" ref="0x7fac171695d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7fac171883c8" loc="9:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7fac171883c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac17188718"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac171888a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac17188a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fac1717b828" loc="17:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fac1717b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1717bb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1717bd00"/>
        <function-ref name="request" scoped="" ref="0x7fac1717a020"/>
        <function-ref name="granted" scoped="" ref="0x7fac1717a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1717a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fac17180be0" loc="16:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac17180be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1717f7a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac1717cba0"/>
        <function-ref name="write" scoped="" ref="0x7fac1717d388"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1717c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fac171897e0" loc="8:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fac171897e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fac17189b30"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fac17189cb8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fac17189e40"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fac17188020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac17187888" loc="12:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17187888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac17183bc0"/>
        <function-ref name="fired" scoped="" ref="0x7fac17185238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac17183020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac17185ad8"/>
        <function-ref name="getdt" scoped="" ref="0x7fac171824d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fac17182088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac17185688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac17186458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac171835f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac171868f8"/>
        <function-ref name="stop" scoped="" ref="0x7fac17186d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17155468" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17155468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171557b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17155940"/>
        <function-ref name="request" scoped="" ref="0x7fac17155ac8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17155c50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17155dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fac171541c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fac171541c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fac17352020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fac173522c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17154d48"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac171500f8"/>
        <function-ref name="write" scoped="" ref="0x7fac17152928"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17151530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac1714e0a0" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="MagConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac1714e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac1714a2b8"/>
        <function-ref name="fired" scoped="" ref="0x7fac1714d9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac1714b6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac1714b278"/>
        <function-ref name="getdt" scoped="" ref="0x7fac1714ab58"/>
        <function-ref name="gett0" scoped="" ref="0x7fac1714a708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac1714de00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac1714ebe8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac1714bc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac1714d0c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac1714d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac17146af8" loc="92:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac17146af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac17146e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17145020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac171446d8" loc="96:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac171446d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac17144a48"/>
        <function-ref name="configure" scoped="" ref="0x7fac17144bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac17145268" loc="93:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17145268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac171455b8"/>
        <function-ref name="requested" scoped="" ref="0x7fac17145740"/>
        <function-ref name="granted" scoped="" ref="0x7fac171458c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17145a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac17145bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac17148d88" loc="91:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac17148d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17146170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac171462f8"/>
        <function-ref name="request" scoped="" ref="0x7fac17146480"/>
        <function-ref name="granted" scoped="" ref="0x7fac17146608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17146790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac17145e20" loc="94:/opt/tinyos-2.1.2//tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac17145e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac171441a8"/>
        <function-ref name="userId" scoped="" ref="0x7fac17144330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac16712830" loc="44:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fac16712830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac16712b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fac16712e08" loc="45:/opt/tinyos-2.1.2//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fac16712e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac167111a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac16711330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac167114b8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac16711640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac1670fb48" loc="55:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac1670fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac1670e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1670e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac1670c8c0" loc="60:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac1670c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac1670cc30"/>
        <function-ref name="configure" scoped="" ref="0x7fac1670cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac1670b0a0" loc="61:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fac1670b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac1670b3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac1670b578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac1670b700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac1670b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac1670e3f0" loc="56:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac1670e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1670e740"/>
        <function-ref name="requested" scoped="" ref="0x7fac1670e8c8"/>
        <function-ref name="granted" scoped="" ref="0x7fac1670ea50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1670ebd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac1670ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac1670bad0" loc="62:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fac1670bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac1670be20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac1670a020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac1670a1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac1670a330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac1670a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fac1670a640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac1670a7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fac1670ade8"/>
        <function-ref name="set" scoped="" ref="0x7fac1670aad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fac1670a950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac1670ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac16710e20" loc="54:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac16710e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1670f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1670f348"/>
        <function-ref name="request" scoped="" ref="0x7fac1670f4d0"/>
        <function-ref name="granted" scoped="" ref="0x7fac1670f658"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1670f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac1670c020" loc="57:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac1670c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac1670c370"/>
        <function-ref name="userId" scoped="" ref="0x7fac1670c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac16709100" loc="75:/opt/tinyos-2.1.2//tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fac16709100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac16709450"/>
        <function-ref name="runTask" scoped="" ref="0x7fac167095d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac171426d8" loc="69:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac171426d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac17142a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac17142bb0"/>
        <function-ref name="start" scoped="" ref="0x7fac17142d38"/>
        <function-ref name="stop" scoped="" ref="0x7fac17141020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac17141268" loc="71:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac17141268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac171415b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac17141800" loc="72:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac17141800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17141b50"/>
        <function-ref name="requested" scoped="" ref="0x7fac17141cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fac17141e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac17140020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac171401a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac171403f0" loc="73:/opt/tinyos-2.1.2//tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac171403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac17140740"/>
        <function-ref name="userId" scoped="" ref="0x7fac171408c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fac166d8740" loc="61:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fac166d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac166d8a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac166d8c18"/>
        <function-ref name="start" scoped="" ref="0x7fac166d8da0"/>
        <function-ref name="stop" scoped="" ref="0x7fac166d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fac166d7268" loc="63:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fac166d7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fac166d75b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fac166d6b90" loc="78:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fac166d6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac166d4020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac166d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fac166d7800" loc="64:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac166d7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac166d7b50"/>
        <function-ref name="requested" scoped="" ref="0x7fac166d7cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fac166d7e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac166d6020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac166d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fac166d4470" loc="73:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fac166d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac166d47c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac166d4948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fac166d8020" loc="60:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fac166d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac166d8370"/>
        <function-ref name="stop" scoped="" ref="0x7fac166d84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac166d63f0" loc="65:/opt/tinyos-2.1.2//tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac166d63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac166d6740"/>
        <function-ref name="userId" scoped="" ref="0x7fac166d68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17137648" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17137648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac171361e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17136658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac17134020" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac17134020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac17134b88"/>
        <function-ref name="readDone" scoped="" ref="0x7fac17133020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac171336b8" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac171336b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac17133a28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac17133bb0"/>
        <function-ref name="request" scoped="" ref="0x7fac17133d38"/>
        <function-ref name="granted" scoped="" ref="0x7fac17132020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac171321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac17131d58" loc="24:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac17131d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1712f8f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1712fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fac1712e5e8" loc="26:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fac1712e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac1712d198"/>
        <function-ref name="readDone" scoped="" ref="0x7fac1712d608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac1712dca0" loc="27:/opt/tinyos-2.1.2//tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fac1712dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac1712b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac1712b228"/>
        <function-ref name="request" scoped="" ref="0x7fac1712b3b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac1712b538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac1712b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac16725ac8" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac16725ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac16725e18"/>
        <function-ref name="configure" scoped="" ref="0x7fac16724020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16728c60" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16728c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac167267e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16726c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac16725220" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac16725220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac16725570"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac167256f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac16725880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac16a71998" loc="19:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac16a71998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac16a6f528"/>
        <function-ref name="readDone" scoped="" ref="0x7fac16a6f978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x7fac16a72da8" loc="18:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x7fac16a72da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x7fac16a71170"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x7fac16a712f8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x7fac16a71480"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x7fac16a71608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac166aca28" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac166aca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac166acd78"/>
        <function-ref name="configure" scoped="" ref="0x7fac166ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fac166afba8" loc="22:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fac166afba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac166ad728"/>
        <function-ref name="readDone" scoped="" ref="0x7fac166adb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fac166ac180" loc="24:/opt/tinyos-2.1.2//tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestFtspAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fac166ac180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fac166ac4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac166ac658"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fac166ac7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac17101ae8" loc="45:/opt/tinyos-2.1.2//tos/system/TimerMilliC.nc">
      <component-ref qname="TestFtspAppC.MyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fac17101ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac188d8608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac188d8960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac170fdd60"/>
        <function-ref name="fired" scoped="" ref="0x7fac170fe470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac170fd1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac170fed10"/>
        <function-ref name="getdt" scoped="" ref="0x7fac170fc648"/>
        <function-ref name="gett0" scoped="" ref="0x7fac170fc1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac170fe8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac170ff658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac170fd790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac170ffaf8"/>
        <function-ref name="stop" scoped="" ref="0x7fac170fe020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fac1885d8a8" loc="62:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fac18859580" loc="60:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fac18850810" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fac188505a0" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fac18852020" loc="31:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fac18852a18" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fac188527a8" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fac188514d0" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fac18851260" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fac18851d18" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fac1883edc0" loc="44:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fac1883d4c8" loc="45:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fac1883e070" loc="42:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fac1883c290" loc="47:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac1883e710" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fac1883db80" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac18840328" loc="40:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fac18840998" loc="41:/opt/tinyos-2.1.2//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fac18964968" loc="57:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fac1895c878" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fac1895c0d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fac18954608" loc="67:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fac18954df8" loc="75:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fac1889bca0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2//tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fac1887b328" loc="62:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fac188fa940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fac1887fe60" loc="52:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GlobalTime" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac1869d0f0" loc="37:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <interfacedef-ref qname="GlobalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac1869d0f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getLocalTime" ref="0x7fac1869d9e0" loc="42:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Returns the current local time of this mote.</short>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="global2Local" ref="0x7fac1869bca8" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>. This method performs the inverse of the&#10; &#60;code>local2Global&#60;/clode> transformation.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac1869ba38" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0x7fac1869c418" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Reads the current global time.</short>
          <long>&#10; Reads the current global time. This method is a combination&#10; of &#60;code>getLocalTime&#60;/code> and &#60;code>local2Global&#60;/code>.&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac1869c1a8" loc="49:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="local2Global" ref="0x7fac1869b020" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>. The following equation is used to compute the&#10; conversion:&#10;&#10;&#9;globalTime = localTime + offset + skew * (localTime - syncPoint)&#10;&#10; The skew is normalized to 0.0 (1.0 is subtracted) to increase the&#10; machine precision. The syncPoint value is periodically updated to&#10; increase the machine precision of the floating point arithmetic and&#10; also to allow time wrap.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac1869cc60" loc="66:/opt/tinyos-2.1.2//tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncInfo" loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
      <function command="" provided="0" name="getSyncPoint" ref="0x7fac18696b50" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the local time of the last synchronization point.</short>
          <long>&#10; Returns the local time of the last synchronization point. This &#10; value is close to the current local time and updated when a new&#10; time synchronization message arrives.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRootID" ref="0x7fac186943a0" loc="60:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the current root to which this node is synchronized.</short>
          <long>&#10; Returns the current root to which this node is synchronized. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSeqNum" ref="0x7fac18694b40" loc="65:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the latest seq number seen from the current root.</short>
          <long>&#10; Returns the latest seq number seen from the current root.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOffset" ref="0x7fac186a1b78" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="38:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current offset of the local time wrt global time.</short>
          <long>&#10; Returns current offset of the local time wrt global time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumEntries" ref="0x7fac18693328" loc="71:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the number of entries stored currently in the &#10; regerssion table.</short>
          <long>&#10; Returns the number of entries stored currently in the &#10; regerssion table.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeartBeats" ref="0x7fac18693b08" loc="76:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the value of heartBeats variable.</short>
          <long>&#10; Returns the value of heartBeats variable. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSkew" ref="0x7fac18696328" loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current skew of the local time wrt global time.</short>
          <long>&#10; Returns current skew of the local time wrt global time.&#10; This value is normalized to 0.0 (1.0 is subtracted) to get maximum &#10; representation precision.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncMode" loc="44:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <short>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period.</short>
        <long>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period. from the timer&#10;            - TS_USER_MODE: TS msgs sent only when explic. asked by user &#10;                            via TimeSyncMode.send() command, TimeSync.Timer &#10;                            is stopped in this mode&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac18690970" loc="61:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; command to send out time synchronization message.</short>
          <long>&#10; command to send out time synchronization message.&#10; returns FAIL if TimeSync not in TS_USER_MODE&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fac18690258" loc="55:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Gets the current mode of the TimeSync module.</short>
          <long>&#10; Gets the current mode of the TimeSync module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fac18697aa8" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Sets the current mode of the TimeSync module.</short>
          <long>&#10; Sets the current mode of the TimeSync module.&#10; returns FAIL if didn't succeed&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac18697838" loc="50:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncNotify" loc="41:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <short>&#10; time sync module (TimeSyncM) provides notification of arriving&#10; and transmitted time-sync msgs through TimeSyncNotify interface:&#10;</short>
      </documentation>
      <function event="" provided="0" name="msg_received" ref="0x7fac1868d020" loc="46:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is received and accepted&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="msg_sent" ref="0x7fac1868d6e8" loc="52:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is sent by TimeSyncM or the sending did not&#10; succeed&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fac186a0810" loc="95:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac1869e020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac185ff498" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac185ff498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fac185ffd28" loc="61:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fac18681290" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac18681020" loc="113:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fac1867f690" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac1867f420" loc="138:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac18682510" loc="104:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac18681a78" loc="130:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac18630a68" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac18630a68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac18630c98" loc="44:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18630c98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7fac1862d2c0" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18630c98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fac1862f520" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fac1862f880" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac1862fb90" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x7fac1862d020" loc="64:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18630c98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac1862a708" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1862a140" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac1862a450" loc="114:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac1862b8f0" loc="103:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac1862c0a8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1862dde8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac1862b020" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1862c9d8" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac1862cd00" loc="93:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fac186115a0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fac18615de8" loc="46:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fac18624d48" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
              <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18624448" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fac18624770" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac18624a80" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fac1860daf8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fac1860c258" loc="67:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fac1860c9c8" loc="72:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fac1860b848" loc="83:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fac18609e70" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac18608630" loc="117:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fac1860b110" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac18607290" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fac18607020" loc="134:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fac1860d3e0" loc="56:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fac18609020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fac18609738" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac18622338" loc="53:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac18622338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fac18619020" loc="136:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac1861e710" loc="83:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fac1861b5b8" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac1861b020" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fac1861b338" loc="114:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fac1861c7b8" loc="98:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fac18618020" loc="151:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fac18619740" loc="144:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fac1861c020" loc="92:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fac18622e08" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac18622b98" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fac1861a5b8" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac1861a020" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fac1861a338" loc="129:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fac1861f8a0" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac1861f630" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac1861e070" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac186103d0" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac186103d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac18610600" loc="37:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18610600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x7fac18603118" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18610e78" loc="48:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x7fac18603cd8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18610600"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18603a68" loc="58:/opt/tinyos-2.1.2//tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fac1855a4e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1855a278" loc="65:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fac185594e8" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18559278" loc="78:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac18556690" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac185560c8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac185563d8" loc="126:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac185557c8" loc="106:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fac185588d8" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18558348" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac18558658" loc="94:/opt/tinyos-2.1.2//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fac1853aad0" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1853a4e8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fac1853a850" loc="65:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fac18538bc0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18538950" loc="71:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fac1853bd38" loc="57:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fac1853b3e0" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fac1853b170" loc="52:/opt/tinyos-2.1.2//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac185413a0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac185413a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac185415d0" loc="35:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac185415d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fac18533290" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac185415d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18533020" loc="63:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fac18532370" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18532100" loc="70:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fac18535118" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18541e80" loc="49:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac185315e0" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac185415d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18531020" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fac18531360" loc="78:/opt/tinyos-2.1.2//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac185415d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fac18540290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18540020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fac1853f3b0" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1853f140" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fac1853e468" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1853e1f8" loc="85:/opt/tinyos-2.1.2//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fac18546930" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac185466c0" loc="177:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fac1854fa88" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac1854f818" loc="88:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fac18551020" loc="68:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fac18551a78" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac18551808" loc="78:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fac1854c2a0" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac18550c98" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fac1854c020" loc="121:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fac1854edc0" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac1854e808" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fac1854eb40" loc="103:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fac185495c8" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac18549358" loc="147:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fac18548840" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac185482c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fac185485c0" loc="162:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac186415d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fac1854b478" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac1854b208" loc="136:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fac18544d20" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac18544770" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fac18544aa0" loc="187:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fac18543ac8" loc="195:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac184ea020" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fac184eb5c8" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fac184eb928" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac184ebc38" loc="80:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac184e5380" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184e6d48" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac184e50c8" loc="135:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac184e6540" loc="123:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac184e92d0" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184e9060" loc="96:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac184e7708" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184e7160" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac184e7488" loc="110:/opt/tinyos-2.1.2//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fac184d5020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184d6ca8" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fac184d6020" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184d9ca0" loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac184d1020" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184d3c88" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac184d3020" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184d5c78" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fac18444290" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18444020" loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fac18447578" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18447308" loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fac18449d30" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fac18449ac0" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fac18449290" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fac18449020" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fac18448728" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fac184484b8" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fac184453b0" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18445140" loc="88:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fac18438830" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fac18438250" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fac184385b0" loc="59:/opt/tinyos-2.1.2//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fac184536a8" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac18453100" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fac18453428" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fac1844fb80" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac1844f5b0" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fac1844f900" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fac18452290" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fac192f2908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac18452020" loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fac18450b60" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac184508f0" loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fac18454930" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac184546c0" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fac18452d30" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac18452ac0" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fac1843c290" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1843c020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fac18440480" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18443e70" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fac18440200" loc="46:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fac1843d290" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1843d020" loc="59:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fac1843f7e0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1843f1f8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fac1843f560" loc="53:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fac1843b290" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1843b020" loc="71:/opt/tinyos-2.1.2//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fac1844b338" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1844b0c8" loc="47:/opt/tinyos-2.1.2//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac1842b020" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18432a48" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac18432d58" loc="75:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac184262d8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac18428cc8" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac18426020" loc="125:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac184284c0" loc="112:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac1842a290" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac1842a020" loc="89:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac18429670" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac184290c8" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac184293f0" loc="100:/opt/tinyos-2.1.2//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fac1842f1d8" loc="120:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fac184302a8" loc="97:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fac18434988" loc="88:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fac18430a30" loc="102:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fac1842fbc0" loc="128:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac18409838" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac184092a0" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fac184095b8" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac18407a58" loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fac184030c8" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac18405318" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fac18405af0" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac18405e00" loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac18406b00" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac18406558" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac18406880" loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fac18407290" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fac18407020" loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fac183fdad8" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac183fd830" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fac183fd0a8" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fac1867c928"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fac18679228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac183fed90" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fac183fbce8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fac18679cc8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fac18677a88"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac183fba00" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fac1840f7e8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fac1840d778" loc="97:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fac1840d020" loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fac18411020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fac1840f020" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fac1840e020" loc="76:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fac1840e7d0" loc="83:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fac18411818" loc="56:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fac183f5178" loc="71:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fac183f7798" loc="56:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fac183f69b0" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fac183f6740" loc="66:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fac183f6020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fac183f9508" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fac183f9298" loc="45:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fac183f7020" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fac183f9cc0" loc="51:/opt/tinyos-2.1.2//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fac1839e680" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fac1839e0c8" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fac1839e400" loc="106:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fac1839f178" loc="93:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fac183a0840" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fac183a0200" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fac183a05c0" loc="87:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fac183a60a8" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac183a7e00" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fac1839f980" loc="98:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fac183a3990" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fac183a3720" loc="72:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fac183a4108" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fac183a6e40" loc="61:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fac1839d828" loc="117:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fac183a2a30" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fac183a27c0" loc="78:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fac1839d070" loc="112:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fac183a4828" loc="66:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fac1846c648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fac1846cd70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fac183a3020" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fac183a76d0" loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fac183a6790" loc="60:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fac183a2110" loc="77:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fac183982a0" loc="49:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac183982a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fac18398ad8" loc="55:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac183977c8" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac183982a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fac18397248" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fac18397548" loc="63:/opt/tinyos-2.1.2//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac183982a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac1836e290" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac1836e020" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac1836ece8" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac1836ea78" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fac1838b4d0" loc="48:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fac1846c648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fac1846cd70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac1838d668" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac1838d668"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac1838d898" loc="56:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fac18385178" loc="109:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac18387328" loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fac18386810" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac18386270" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fac18386590" loc="103:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fac18387a98" loc="88:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fac183858f8" loc="116:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac18389378" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac18389108" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac1838d898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac18389b48" loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fac18377020" loc="50:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fac18377e70" loc="60:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fac18377780" loc="55:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fac18378730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fac18378178" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac18641988"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac183784b0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac18641d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fac183680d8" loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac183735e0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac183746b0" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac18373020" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac18373350" loc="52:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac18372c60" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac18373e30" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac183726a0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac183729d0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fac1837a770" loc="68:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac1837a020" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fac1837b868" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fac1837b020" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fac182b4378" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a5928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fac188a5d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7fac182b6020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b4478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fac188b4880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac182b8cf8" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b4478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fac188b4880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fac182b51d8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a7578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fac188a7980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7fac182bcab0" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188bcda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fac188bb228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fac182b5b98" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a7578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fac188a7980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fac182b5928" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a7578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fac188a7980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fac182b4d38" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a5928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fac188a5d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fac182b4ac8" loc="59:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188a5928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fac188a5d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7fac182b9ad8" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b2890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fac188b2c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7fac182b9328" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b4478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fac188b4880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7fac182b8570" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188bcda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fac188bb228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac182b8300" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188bcda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fac188bb228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7fac182b69f0" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b2890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fac188b2c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac182b6780" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188b2890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fac188b2c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fac182bab60" loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fac182ab648" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fac182ab3d8" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fac182ad568" loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac182b0438" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fac182af748" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fac182af4d8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fac182ae020" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fac182adcb8" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac182b0d70" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fac182b0b00" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182bab60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac182ae718" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac182aee00" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fac182a8820" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182a8820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fac182a2e20" loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac182a41d8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac182a5110" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182a8820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fac182a48e0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fac182a15c0" loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac182a5a58" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182a8820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fac182a57e8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac182a8820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac182a2020" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac182a2708" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fac182c7458" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac182c7458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fac182c2900" loc="98:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fac182c3a40" loc="87:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac182c7cf8" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac182c7458"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fac182c0290" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fac182c0020" loc="104:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fac182c0a10" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fac182c4500" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fac182c6da8" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fac182c21d8" loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac182c6688" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac182c7458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fac182c6418" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fac182c7458"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac182c4bf8" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac182c3328" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7fac182937c8" loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188cda08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fac188cde10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fac18291c10" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c2100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fac188c2508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fac18292a38" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c6980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fac188c6d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fac18291470" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fac188c6d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fac18291200" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fac188c6d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fac182905f8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c2100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fac188c2508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fac18290388" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c2100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fac188c2508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fac18292290" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188cda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fac188cde10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac18292020" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188cda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fac188cde10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7fac18287020" loc="38:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7fac182877e0" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7fac182887f0" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fac18286020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fac1828a570" loc="21:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c8118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7fac188c8520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fac18288020" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fac188c8520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fac1828acb0" loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fac188c8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fac188c8520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac181293f8" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac181293f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac18129628" loc="57:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18129628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fac18128020" loc="64:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac18129628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fac18127070" loc="76:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fac18128838" loc="71:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fac18127760" loc="82:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fac18088e28" loc="54:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac18085020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fac18086780" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac18086510" loc="61:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fac18088640" loc="53:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fac18067b10" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac18064450" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac18067428" loc="51:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fac18065c60" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fac180659f0" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fac1806ace8" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fac18065290" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fac1804be58" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2//tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fac17fd5020" loc="24:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fac17fd5800" loc="31:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fac17fd4020" loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fac17fb7348" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17fb8d58" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac17fb70c8" loc="62:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fac17fb12b0" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17fb3940" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac17fb3c70" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac17fb1020" loc="91:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac17fb4c50" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17fb46a0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac17fb49d0" loc="82:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fac17fb8020" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac18684b80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17fb9908" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac17fb9c38" loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac17fb5948" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17fb5060" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac17fb5390" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac17fb56b8" loc="71:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac17f98930" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fac17f98020" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fac17f98380" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac17f986a0" loc="70:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac17f97cc8" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fac17f97060" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fac17f973c0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac17f976e0" loc="82:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac17f97a28" loc="83:/opt/tinyos-2.1.2//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fac17f9d9a0" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fac17f9d730" loc="45:/opt/tinyos-2.1.2//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fac17f0b020" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17f0fc58" loc="62:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fac17f0a338" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17f0a0c8" loc="74:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fac17f0b820" loc="68:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac17f0ad40" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17f0aad0" loc="81:/opt/tinyos-2.1.2//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fac17ef6020" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fac17eeda60" loc="126:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fac17ef0538" loc="117:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fac17eeb458" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fac17eeb1e8" loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fac17ef7880" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fac17eee108" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fac17eefe18" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fac17ef3d50" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fac17ef3ae0" loc="113:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fac17ef4020" loc="97:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fac17ee8b98" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fac17ee8928" loc="141:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fac17ef24d0" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fac17eea4b0" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fac17eea240" loc="131:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fac17ee9360" loc="136:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fac17eed338" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fac17eed0c8" loc="125:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fac17ee8258" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fac17eef020" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fac17ef0c18" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac17ef4978" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17ef4708" loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fac17ef2de0" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fac17ef2b70" loc="116:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fac17eee918" loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fac17eebb60" loc="129:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fac17eeaba0" loc="132:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fac17ee9aa8" loc="138:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fac17eef738" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fac17ef6738" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fac17ef3338" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17ef30c8" loc="109:/opt/tinyos-2.1.2//tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fac17ee49f8" loc="90:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fac17ee1258" loc="98:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fac17e8c748" loc="95:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac17e8a020" loc="105:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fac17e3a7d0" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fac17e390d8" loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fac17e35020" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fac17e366f8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fac17e2dc80" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac17e33020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fac17e2da10" loc="79:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac17e33020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fac17e32e10" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fac17e2f8f0" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac17e33020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fac17e2f680" loc="62:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac17e33020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fac17e2d1d8" loc="70:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fac17e33020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fac17cec8c8" loc="43:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fac17ca8e40" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fac17ca84f0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fac17ca8bc0" loc="63:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac18631150"/>
                <typename><typedef-ref name="message_t" ref="0x7fac186306c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fac17ca9d70" loc="55:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fac17ca9600" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac17ca9390" loc="49:/opt/tinyos-2.1.2//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fac192f0608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fac179979b8" loc="53:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac179979b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fac179944c8" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac179979b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fac17994258" loc="64:/opt/tinyos-2.1.2//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac179979b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac176d3c90" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac176d3c90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac176d0020" loc="59:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac176d0020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fac176d0ab8" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac176d0020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac176d0848" loc="66:/opt/tinyos-2.1.2//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac176d0020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7fac176a9ca8" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7fac176a9a38" loc="3:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7fac17668020" loc="20:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2//tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7fac17628178" loc="32:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fac1762b928" loc="25:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7fac17628958" loc="39:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fac17623940" loc="52:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac17623940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fac176201d8" loc="58:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac1761f020" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac17623940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fac17620920" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fac17620c20" loc="66:/opt/tinyos-2.1.2//tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac17623940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fac1760f768" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fac17611a60" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fac17611db8" loc="100:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fac1760f178" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fac1760f4c8" loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fac1760d3f0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac1760e368" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fac1760e688" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fac1760e9c0" loc="119:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fac1760ed70" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fac1760d140" loc="120:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fac17614440" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fac17615738" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fac17615a90" loc="70:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fac17615df8" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fac176141a0" loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac17613c80" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fac17613408" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac17614e48" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fac17613188" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fac175fc868" loc="114:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fac176059e8" loc="53:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188e1020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7fac188e14d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fac175f9a88" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fac175f9818" loc="140:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fac175fb0d8" loc="122:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fac17600548" loc="82:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fac176023e8" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188e1020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fac188e14d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fac17602178" loc="58:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188e1020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fac188e14d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fac175fe3a0" loc="91:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fac175f9020" loc="133:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac175f8258" loc="150:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fac17600c38" loc="86:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fac175fd258" loc="99:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fac175feae8" loc="95:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fac175fd980" loc="106:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fac175fb838" loc="127:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fac17601608" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188dba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fac188d9178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fac17601398" loc="69:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188dba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fac188d9178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fac175fc178" loc="110:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fac17602bc0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac188dba10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fac188d9178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fac17601da8" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fac175f8d68" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac175f8af8" loc="156:/opt/tinyos-2.1.2//tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fac17582890" loc="56:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fac175818a0" loc="73:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fac17582070" loc="46:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fac175810d8" loc="65:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fac175801d8" loc="81:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fac17511c18" loc="62:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2//tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x7fac1735c1d8" loc="110:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac1735d360" loc="97:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x7fac1735f4e0" loc="87:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x7fac17360708" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fac17360498" loc="77:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x7fac1735fc08" loc="92:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fac1735da58" loc="102:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x7fac17363db0" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x7fac17363b40" loc="72:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x7fac17360de0" loc="82:/opt/tinyos-2.1.2//tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.2//tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x7fac1733faf8" loc="59:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fac1733faf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fac1733b030" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fac17352680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fac1733c3b0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fac17352680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac1733c6e0" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fac1733ca10" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac1733cd68" loc="76:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fac17335618" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac17334998" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac17334cc8" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fac17335020" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac17335378" loc="112:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac17339d20" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fac17352680"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fac173390c8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fac17352680"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac173393f8" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fac17339728" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac17339a80" loc="92:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac17337a98" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac17338df8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac17337170" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fac192f1b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fac173374a0" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac173377f8" loc="102:/opt/tinyos-2.1.2//tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fac172c3910" loc="46:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fac17281db8" loc="54:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fac172804c0" loc="55:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fac1727f4c8" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fac1727f258" loc="60:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fac172816f8" loc="52:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fac1727cb68" loc="65:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fac17277700" loc="84:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fac1727b4d8" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fac1727b268" loc="67:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fac17276e18" loc="89:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fac172838f0" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fac17283680" loc="49:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fac1727c4a0" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fac1727c230" loc="64:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fac1727bd10" loc="68:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fac1727fba0" loc="61:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fac1727ac50" loc="75:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fac17280ba8" loc="56:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fac17277020" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fac17278d00" loc="83:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac17276750" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac172764e0" loc="88:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fac1727a4f8" loc="72:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fac17281020" loc="50:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fac1727d4b0" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fac1727d240" loc="62:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fac172786c0" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fac17278450" loc="81:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fac17277e28" loc="85:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fac1727db78" loc="63:/opt/tinyos-2.1.2//tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac189629b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mag" loc="62:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
      <documentation loc="58:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function command="" provided="0" name="gainAdjustY" ref="0x7fac171a1108" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fac171a3e60" loc="71:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustYDone" ref="0x7fac171a03b8" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fac171a0148" loc="79:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustXDone" ref="0x7fac171a1a38" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fac171a17c8" loc="75:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjustX" ref="0x7fac171a37a0" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fac189571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fac171a3530" loc="66:/opt/tinyos-2.1.2//tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac192f1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
